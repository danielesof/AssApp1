{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/ModalMeal/ModalMealScreen.js\";\n\nvar ModalMealScreen = function (_React$Component) {\n  (0, _inherits2.default)(ModalMealScreen, _React$Component);\n\n  function ModalMealScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ModalMealScreen);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ModalMealScreen).call(this, props));\n\n    _this.checkValidation = function () {\n      var mealArr = _this.state.meal;\n      var foodArr = _this.state.foods;\n      var mealValid,\n          foodValid = 0;\n      mealArr.map(function (data) {\n        if (data.check) {\n          mealValid = 1;\n        }\n      });\n      foodArr.map(function (data) {\n        if (data.check) {\n          foodValid = 1;\n        }\n      });\n\n      if (mealValid && foodValid) {\n        return 1;\n      } else {\n        return 0;\n      }\n    };\n\n    _this.onPressAdd = function () {\n      var mealType = '';\n\n      _this.state.meal.map(function (data) {\n        if (data.check) {\n          mealType = data.name;\n        }\n      });\n\n      var foodsArr = [];\n\n      _this.state.foods.map(function (data) {\n        if (data.check) {\n          foodsArr.push(data);\n        }\n      });\n\n      var id = 0;\n\n      if (_this.props.nutrition.length > 0) {\n        id = _this.props.nutrition[_this.props.nutrition.length - 1].id + 1;\n      }\n\n      var meal = {\n        id: id,\n        meal: mealType,\n        foods: foodsArr\n      };\n\n      _this.props.toggleModal();\n\n      _this.props.addMeal(meal);\n    };\n\n    _this.onPressMeal = function (id) {\n      var arr = _this.state.meal;\n      arr.map(function (data) {\n        if (!data.check && data.id == id) {\n          data.check = true;\n        } else {\n          data.check = false;\n        }\n      });\n\n      _this.setState({\n        meal: arr\n      });\n    };\n\n    _this.onPressFood = function (id) {\n      var arr = _this.state.foods;\n      arr.map(function (data) {\n        if (!data.check && data.id == id) {\n          data.check = true;\n        } else if (data.check && data.id == id) {\n          data.check = false;\n        }\n      });\n\n      _this.setState({\n        food: arr\n      });\n    };\n\n    _this.renderMeal = function (_ref) {\n      var item = _ref.item;\n      return _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: function onPress() {\n          return _this.onPressMeal(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.mealContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.circle,\n        source: item.check ? require('../../../assets/icons/fullCircle.png') : require('../../../assets/icons/emptyCircle.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.mealTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        }\n      }, item.name)));\n    };\n\n    _this.renderFood = function (_ref2) {\n      var item = _ref2.item;\n      return _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: function onPress() {\n          return _this.onPressFood(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.foodRowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.foodTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        }\n      }, item.name), _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.circle,\n        source: item.check ? require('../../../assets/icons/fullCircle.png') : require('../../../assets/icons/emptyCircle.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        }\n      })));\n    };\n\n    _this.state = {\n      meal: [{\n        id: 0,\n        name: 'Snack',\n        check: false\n      }, {\n        id: 1,\n        name: 'Lunch',\n        check: false\n      }, {\n        id: 2,\n        name: 'Dinner',\n        check: false\n      }, {\n        id: 3,\n        name: 'Breakfast',\n        check: false\n      }],\n      foods: [{\n        id: 0,\n        name: 'Chicken',\n        calories: 150,\n        quantity: '200 grams',\n        check: false\n      }, {\n        id: 1,\n        name: 'Pasta',\n        calories: 150,\n        quantity: '200 grams',\n        check: false\n      }, {\n        id: 2,\n        name: 'Cereal',\n        calories: 300,\n        quantity: '100 grams',\n        check: false\n      }, {\n        id: 3,\n        name: 'Milk',\n        calories: 100,\n        quantity: '200 grams',\n        check: false\n      }, {\n        id: 4,\n        name: 'Eggs',\n        calories: 300,\n        quantity: '200 grams',\n        check: false\n      }, {\n        id: 5,\n        name: 'Bannana',\n        calories: 150,\n        quantity: '200 grams',\n        check: false\n      }, {\n        id: 6,\n        name: 'Apple',\n        calories: 100,\n        quantity: '100 grams',\n        check: false\n      }]\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(ModalMealScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.ScrollView, {\n        style: _styles.default.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.bar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.titleContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.mealIcon,\n        source: require('../../../assets/icons/mealIcon.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.mainTxt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        }\n      }, \"Choose food\"), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.secTxt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        }\n      }, \"Select your meal and your foods that you consume today\")), _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        numColumns: 4,\n        data: this.state.meal,\n        renderItem: this.renderMeal,\n        extraData: this.state,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.id;\n        },\n        listKey: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        }\n      }))), _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        numColumns: 1,\n        data: this.state.foods,\n        renderItem: this.renderFood,\n        extraData: this.state,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.id;\n        },\n        listKey: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        }\n      }))), _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        style: this.checkValidation() ? _styles.default.btnContainer : _styles.default.btnContainerDisabled,\n        onPress: function onPress() {\n          return _this2.checkValidation() ? _this2.onPressAdd() : console.log('button not working');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.btnTxt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        }\n      }, \"Add\")));\n    }\n  }]);\n  return ModalMealScreen;\n}(_react.default.Component);\n\nModalMealScreen.navigationOptions = function (_ref3) {\n  var navigation = _ref3.navigation;\n  return {\n    headerTransparent: 'true',\n    headerStyle: {\n      height: 60\n    }\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    nutrition: state.nutrition.nutrition\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addMeal: function addMeal(meal) {\n      return dispatch({\n        type: 'ADD_MEAL',\n        meal: meal\n      });\n    }\n  };\n}\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ModalMealScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/ModalMeal/ModalMealScreen.js"],"names":["ModalMealScreen","props","checkValidation","mealArr","state","meal","foodArr","foods","mealValid","foodValid","map","data","check","onPressAdd","mealType","name","foodsArr","push","id","nutrition","length","toggleModal","addMeal","onPressMeal","arr","setState","onPressFood","food","renderMeal","item","styles","mealContainer","circle","require","mealTitle","renderFood","foodRowContainer","foodTitle","calories","quantity","container","bar","titleContainer","mealIcon","mainTxt","secTxt","btnContainer","btnContainerDisabled","console","log","btnTxt","React","Component","navigationOptions","navigation","headerTransparent","headerStyle","height","mapStateToProps","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Text,\n  View,\n  TouchableHighlight,\n  Image,\n  ScrollView,\n  FlatList,\n  TouchableWithoutFeedback\n} from 'react-native';\nimport styles from './styles';\nimport { connect } from 'react-redux';\n\nclass ModalMealScreen extends React.Component {\n  static navigationOptions = ({ navigation }) => ({\n    headerTransparent: 'true',\n    headerStyle: {\n      height: 60\n    }\n  });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      meal: [\n        { id: 0, name: 'Snack', check: false },\n        { id: 1, name: 'Lunch', check: false },\n        { id: 2, name: 'Dinner', check: false },\n        { id: 3, name: 'Breakfast', check: false }\n      ],\n      foods: [\n        {\n          id: 0,\n          name: 'Chicken',\n          calories: 150,\n          quantity: '200 grams',\n          check: false\n        },\n        {\n          id: 1,\n          name: 'Pasta',\n          calories: 150,\n          quantity: '200 grams',\n          check: false\n        },\n        {\n          id: 2,\n          name: 'Cereal',\n          calories: 300,\n          quantity: '100 grams',\n          check: false\n        },\n        {\n          id: 3,\n          name: 'Milk',\n          calories: 100,\n          quantity: '200 grams',\n          check: false\n        },\n        {\n          id: 4,\n          name: 'Eggs',\n          calories: 300,\n          quantity: '200 grams',\n          check: false\n        },\n        {\n          id: 5,\n          name: 'Bannana',\n          calories: 150,\n          quantity: '200 grams',\n          check: false\n        },\n        {\n          id: 6,\n          name: 'Apple',\n          calories: 100,\n          quantity: '100 grams',\n          check: false\n        }\n      ]\n    };\n  }\n\n  checkValidation = () => {\n    let mealArr = this.state.meal;\n    let foodArr = this.state.foods;\n    var mealValid,\n      foodValid = 0;\n    mealArr.map(data => {\n      if (data.check) {\n        mealValid = 1;\n      }\n    });\n    foodArr.map(data => {\n      if (data.check) {\n        foodValid = 1;\n      }\n    });\n    if (mealValid && foodValid) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  onPressAdd = () => {\n    let mealType = '';\n    this.state.meal.map(data => {\n      if (data.check) {\n        mealType = data.name;\n      }\n    });\n    let foodsArr = [];\n    this.state.foods.map(data => {\n      if (data.check) {\n        foodsArr.push(data);\n      }\n    });\n    var id = 0;\n    if (this.props.nutrition.length > 0) {\n      id = this.props.nutrition[this.props.nutrition.length - 1].id + 1;\n    }\n    let meal = {\n      id: id,\n      meal: mealType,\n      foods: foodsArr\n    };\n\n    this.props.toggleModal();\n    this.props.addMeal(meal);\n  };\n\n  onPressMeal = id => {\n    let arr = this.state.meal;\n    arr.map(data => {\n      if (!data.check && data.id == id) {\n        data.check = true;\n      } else {\n        data.check = false;\n      }\n    });\n    this.setState({\n      meal: arr\n    });\n  };\n\n  onPressFood = id => {\n    let arr = this.state.foods;\n    arr.map(data => {\n      if (!data.check && data.id == id) {\n        data.check = true;\n      } else if (data.check && data.id == id) {\n        data.check = false;\n      }\n    });\n    this.setState({\n      food: arr\n    });\n  };\n\n  renderMeal = ({ item }) => (\n    <TouchableHighlight\n      underlayColor=\"rgba(73,182,77,1,0.9)\"\n      onPress={() => this.onPressMeal(item.id)}\n    >\n      <View style={styles.mealContainer}>\n        <Image\n          style={styles.circle}\n          source={\n            item.check\n              ? require('../../../assets/icons/fullCircle.png')\n              : require('../../../assets/icons/emptyCircle.png')\n          }\n        />\n        <Text style={styles.mealTitle}>{item.name}</Text>\n      </View>\n    </TouchableHighlight>\n  );\n\n  renderFood = ({ item }) => (\n    <TouchableHighlight\n      underlayColor=\"rgba(73,182,77,1,0.9)\"\n      onPress={() => this.onPressFood(item.id)}\n    >\n      <View style={styles.foodRowContainer}>\n        <Text style={styles.foodTitle}>{item.name}</Text>\n        <Image\n          style={styles.circle}\n          source={\n            item.check\n              ? require('../../../assets/icons/fullCircle.png')\n              : require('../../../assets/icons/emptyCircle.png')\n          }\n        />\n      </View>\n    </TouchableHighlight>\n  );\n\n  render() {\n    return (\n      <ScrollView style={styles.container}>\n        <View style={styles.bar}></View>\n        <View style={styles.titleContainer}>\n          <Image style={styles.mealIcon} source={require('../../../assets/icons/mealIcon.png')} />\n          <Text style={styles.mainTxt}>Choose food</Text>\n          <Text style={styles.secTxt}>Select your meal and your foods that you consume today</Text>\n        </View>\n\n        <TouchableWithoutFeedback>\n          <View>\n            <FlatList\n              vertical\n              showsVerticalScrollIndicator={false}\n              numColumns={4}\n              data={this.state.meal}\n              renderItem={this.renderMeal}\n              extraData={this.state}\n              keyExtractor={item => `${item.id}`}\n              listKey={0}\n            />\n          </View>\n        </TouchableWithoutFeedback>\n        <TouchableWithoutFeedback>\n          <View>\n            <FlatList\n              vertical\n              showsVerticalScrollIndicator={false}\n              numColumns={1}\n              data={this.state.foods}\n              renderItem={this.renderFood}\n              extraData={this.state}\n              keyExtractor={item => `${item.id}`}\n              listKey={1}\n            />\n          </View>\n        </TouchableWithoutFeedback>\n\n        <TouchableHighlight\n          underlayColor=\"rgba(73,182,77,1,0.9)\"\n          style={this.checkValidation() ? styles.btnContainer : styles.btnContainerDisabled}\n          onPress={() =>\n            this.checkValidation() ? this.onPressAdd() : console.log('button not working')\n          }\n        >\n          <Text style={styles.btnTxt}>Add</Text>\n        </TouchableHighlight>\n      </ScrollView>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    nutrition: state.nutrition.nutrition\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addMeal: meal => dispatch({ type: 'ADD_MEAL', meal })\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModalMealScreen);\n"]},"metadata":{},"sourceType":"script"}