{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _PaginationDot = _interopRequireDefault(require(\"./PaginationDot\"));\n\nvar _Pagination = _interopRequireDefault(require(\"./Pagination.style\"));\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/node_modules/react-native-snap-carousel/src/pagination/Pagination.js\";\nvar IS_IOS = _reactNative.Platform.OS === 'ios';\nvar IS_RTL = _reactNative.I18nManager.isRTL;\n\nvar Pagination = function (_PureComponent) {\n  (0, _inherits2.default)(Pagination, _PureComponent);\n\n  function Pagination(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Pagination);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Pagination).call(this, props));\n\n    if (props.dotColor && !props.inactiveDotColor || !props.dotColor && props.inactiveDotColor) {\n      console.warn('react-native-snap-carousel | Pagination: ' + 'You need to specify both `dotColor` and `inactiveDotColor`');\n    }\n\n    if (props.dotElement && !props.inactiveDotElement || !props.dotElement && props.inactiveDotElement) {\n      console.warn('react-native-snap-carousel | Pagination: ' + 'You need to specify both `dotElement` and `inactiveDotElement`');\n    }\n\n    if (props.tappableDots && !props.carouselRef) {\n      console.warn('react-native-snap-carousel | Pagination: ' + 'You must specify prop `carouselRef` when setting `tappableDots` to `true`');\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Pagination, [{\n    key: \"_needsRTLAdaptations\",\n    value: function _needsRTLAdaptations() {\n      var vertical = this.props.vertical;\n      return IS_RTL && !IS_IOS && !vertical;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          dotsLength = _this$props.dotsLength,\n          containerStyle = _this$props.containerStyle,\n          vertical = _this$props.vertical,\n          accessibilityLabel = _this$props.accessibilityLabel;\n\n      if (!dotsLength || dotsLength < 2) {\n        return false;\n      }\n\n      var style = [_Pagination.default.sliderPagination, {\n        flexDirection: vertical ? 'column' : this._needsRTLAdaptations() ? 'row-reverse' : 'row'\n      }, containerStyle || {}];\n      return _react.default.createElement(_reactNative.View, {\n        pointerEvents: 'box-none',\n        style: style,\n        accessible: !!accessibilityLabel,\n        accessibilityLabel: accessibilityLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        }\n      }, this.dots);\n    }\n  }, {\n    key: \"_activeDotIndex\",\n    get: function get() {\n      var _this$props2 = this.props,\n          activeDotIndex = _this$props2.activeDotIndex,\n          dotsLength = _this$props2.dotsLength;\n      return this._needsRTLAdaptations() ? dotsLength - activeDotIndex - 1 : activeDotIndex;\n    }\n  }, {\n    key: \"dots\",\n    get: function get() {\n      var _this$props3 = this.props,\n          activeOpacity = _this$props3.activeOpacity,\n          carouselRef = _this$props3.carouselRef,\n          dotsLength = _this$props3.dotsLength,\n          dotColor = _this$props3.dotColor,\n          dotContainerStyle = _this$props3.dotContainerStyle,\n          dotElement = _this$props3.dotElement,\n          dotStyle = _this$props3.dotStyle,\n          inactiveDotColor = _this$props3.inactiveDotColor,\n          inactiveDotElement = _this$props3.inactiveDotElement,\n          inactiveDotOpacity = _this$props3.inactiveDotOpacity,\n          inactiveDotScale = _this$props3.inactiveDotScale,\n          inactiveDotStyle = _this$props3.inactiveDotStyle,\n          renderDots = _this$props3.renderDots,\n          tappableDots = _this$props3.tappableDots;\n\n      if (renderDots) {\n        return renderDots(this._activeDotIndex, dotsLength, this);\n      }\n\n      var DefaultDot = _react.default.createElement(_PaginationDot.default, {\n        carouselRef: carouselRef,\n        tappable: tappableDots && typeof carouselRef !== 'undefined',\n        activeOpacity: activeOpacity,\n        color: dotColor,\n        containerStyle: dotContainerStyle,\n        style: dotStyle,\n        inactiveColor: inactiveDotColor,\n        inactiveOpacity: inactiveDotOpacity,\n        inactiveScale: inactiveDotScale,\n        inactiveStyle: inactiveDotStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        }\n      });\n\n      var dots = [];\n\n      for (var i = 0; i < dotsLength; i++) {\n        var isActive = i === this._activeDotIndex;\n        dots.push(_react.default.cloneElement((isActive ? dotElement : inactiveDotElement) || DefaultDot, {\n          key: \"pagination-dot-\" + i,\n          active: i === this._activeDotIndex,\n          index: i\n        }));\n      }\n\n      return dots;\n    }\n  }]);\n  return Pagination;\n}(_react.PureComponent);\n\nexports.default = Pagination;\nPagination.propTypes = {\n  activeDotIndex: _propTypes.default.number.isRequired,\n  dotsLength: _propTypes.default.number.isRequired,\n  activeOpacity: _propTypes.default.number,\n  carouselRef: _propTypes.default.object,\n  containerStyle: _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style,\n  dotColor: _propTypes.default.string,\n  dotContainerStyle: _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style,\n  dotElement: _propTypes.default.element,\n  dotStyle: _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style,\n  inactiveDotColor: _propTypes.default.string,\n  inactiveDotElement: _propTypes.default.element,\n  inactiveDotOpacity: _propTypes.default.number,\n  inactiveDotScale: _propTypes.default.number,\n  inactiveDotStyle: _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style,\n  renderDots: _propTypes.default.func,\n  tappableDots: _propTypes.default.bool,\n  vertical: _propTypes.default.bool,\n  accessibilityLabel: _propTypes.default.string\n};\nPagination.defaultProps = {\n  inactiveDotOpacity: 0.5,\n  inactiveDotScale: 0.5,\n  tappableDots: false,\n  vertical: false\n};","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/node_modules/react-native-snap-carousel/src/pagination/Pagination.js"],"names":["IS_IOS","Platform","OS","IS_RTL","I18nManager","isRTL","Pagination","props","dotColor","inactiveDotColor","console","warn","dotElement","inactiveDotElement","tappableDots","carouselRef","vertical","dotsLength","containerStyle","accessibilityLabel","style","styles","sliderPagination","flexDirection","_needsRTLAdaptations","dots","activeDotIndex","activeOpacity","dotContainerStyle","dotStyle","inactiveDotOpacity","inactiveDotScale","inactiveDotStyle","renderDots","_activeDotIndex","DefaultDot","i","isActive","push","React","cloneElement","key","active","index","PureComponent","propTypes","PropTypes","number","isRequired","object","ViewPropTypes","View","string","element","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { I18nManager, Platform, View, ViewPropTypes } from 'react-native';\nimport PropTypes from 'prop-types';\nimport PaginationDot from './PaginationDot';\nimport styles from './Pagination.style';\n\nconst IS_IOS = Platform.OS === 'ios';\nconst IS_RTL = I18nManager.isRTL;\n\nexport default class Pagination extends PureComponent {\n\n    static propTypes = {\n        activeDotIndex: PropTypes.number.isRequired,\n        dotsLength: PropTypes.number.isRequired,\n        activeOpacity: PropTypes.number,\n        carouselRef: PropTypes.object,\n        containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        dotColor: PropTypes.string,\n        dotContainerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        dotElement: PropTypes.element,\n        dotStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        inactiveDotColor: PropTypes.string,\n        inactiveDotElement: PropTypes.element,\n        inactiveDotOpacity: PropTypes.number,\n        inactiveDotScale: PropTypes.number,\n        inactiveDotStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        renderDots: PropTypes.func,\n        tappableDots: PropTypes.bool,\n        vertical: PropTypes.bool,\n        accessibilityLabel: PropTypes.string\n    };\n\n    static defaultProps = {\n        inactiveDotOpacity: 0.5,\n        inactiveDotScale: 0.5,\n        tappableDots: false,\n        vertical: false\n    }\n\n    constructor (props) {\n        super(props);\n\n        // Warnings\n        if ((props.dotColor && !props.inactiveDotColor) || (!props.dotColor && props.inactiveDotColor)) {\n            console.warn(\n                'react-native-snap-carousel | Pagination: ' +\n                'You need to specify both `dotColor` and `inactiveDotColor`'\n            );\n        }\n        if ((props.dotElement && !props.inactiveDotElement) || (!props.dotElement && props.inactiveDotElement)) {\n            console.warn(\n                'react-native-snap-carousel | Pagination: ' +\n                'You need to specify both `dotElement` and `inactiveDotElement`'\n            );\n        }\n        if (props.tappableDots && !props.carouselRef) {\n            console.warn(\n                'react-native-snap-carousel | Pagination: ' +\n                'You must specify prop `carouselRef` when setting `tappableDots` to `true`'\n            );\n        }\n    }\n\n    _needsRTLAdaptations () {\n        const { vertical } = this.props;\n        return IS_RTL && !IS_IOS && !vertical;\n    }\n\n    get _activeDotIndex () {\n        const { activeDotIndex, dotsLength } = this.props;\n        return this._needsRTLAdaptations() ? dotsLength - activeDotIndex - 1 : activeDotIndex;\n    }\n\n    get dots () {\n        const {\n            activeOpacity,\n            carouselRef,\n            dotsLength,\n            dotColor,\n            dotContainerStyle,\n            dotElement,\n            dotStyle,\n            inactiveDotColor,\n            inactiveDotElement,\n            inactiveDotOpacity,\n            inactiveDotScale,\n            inactiveDotStyle,\n            renderDots,\n            tappableDots\n        } = this.props;\n\n        if (renderDots) {\n            return renderDots(this._activeDotIndex, dotsLength, this);\n        }\n\n        const DefaultDot = <PaginationDot\n          carouselRef={carouselRef}\n          tappable={tappableDots && typeof carouselRef !== 'undefined'}\n          activeOpacity={activeOpacity}\n          color={dotColor}\n          containerStyle={dotContainerStyle}\n          style={dotStyle}\n          inactiveColor={inactiveDotColor}\n          inactiveOpacity={inactiveDotOpacity}\n          inactiveScale={inactiveDotScale}\n          inactiveStyle={inactiveDotStyle}\n        />;\n\n        let dots = [];\n\n        for (let i = 0; i < dotsLength; i++) {\n            const isActive = i === this._activeDotIndex;\n            dots.push(React.cloneElement(\n                (isActive ? dotElement : inactiveDotElement) || DefaultDot,\n                {\n                    key: `pagination-dot-${i}`,\n                    active: i === this._activeDotIndex,\n                    index: i\n                }\n            ));\n        }\n\n        return dots;\n    }\n\n    render () {\n        const { dotsLength, containerStyle, vertical, accessibilityLabel } = this.props;\n\n        if (!dotsLength || dotsLength < 2) {\n            return false;\n        }\n\n        const style = [\n            styles.sliderPagination,\n            { flexDirection: vertical ?\n                'column' :\n                (this._needsRTLAdaptations() ? 'row-reverse' : 'row')\n            },\n            containerStyle || {}\n        ];\n\n        return (\n            <View\n              pointerEvents={'box-none'}\n              style={style}\n              accessible={!!accessibilityLabel}\n              accessibilityLabel={accessibilityLabel}\n            >\n                { this.dots }\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"script"}