{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _LogoHeader = _interopRequireDefault(require(\"../../components/LogoHeader/LogoHeader\"));\n\nvar _ContinueButton = _interopRequireDefault(require(\"../../components/ContinueButton/ContinueButton\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/EmailAdress/EmailAdressScreen.js\";\n\nvar EmailAdressScreen = function (_React$Component) {\n  (0, _inherits2.default)(EmailAdressScreen, _React$Component);\n\n  function EmailAdressScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, EmailAdressScreen);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(EmailAdressScreen).call(this, props));\n\n    _this.onPressButton = function () {\n      _this.props.addUserEmail(_this.state.email);\n\n      _this.props.navigation.navigate('Password');\n    };\n\n    _this.state = {\n      email: ''\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(EmailAdressScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return _reactNative.Keyboard.dismiss();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        }\n      }, _react.default.createElement(_reactNativeGestureHandler.ScrollView, {\n        style: _styles.default.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        }\n      }, _react.default.createElement(_LogoHeader.default, {\n        onPress: function onPress() {\n          _this2.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        }\n      }, \"What is your email address?\"), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: _styles.default.input,\n        placeholder: \"Enter your email address\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        }\n      })), _react.default.createElement(_ContinueButton.default, {\n        onPress: function onPress() {\n          return _this2.onPressButton();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        }\n      })));\n    }\n  }]);\n  return EmailAdressScreen;\n}(_react.default.Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addUserEmail: function addUserEmail(email) {\n      return dispatch({\n        type: 'ADD_USEREMAIL',\n        email: email\n      });\n    }\n  };\n}\n\nvar _default = (0, _reactRedux.connect)(null, mapDispatchToProps)(EmailAdressScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/EmailAdress/EmailAdressScreen.js"],"names":["EmailAdressScreen","props","onPressButton","addUserEmail","state","email","navigation","navigate","Keyboard","dismiss","styles","container","goBack","title","inputContainer","input","text","setState","React","Component","mapDispatchToProps","dispatch","type"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;IAEMA,iB;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,uHAAMA,KAAN;;AADiB,UAOnBC,aAPmB,GAOH,YAAM;AACpB,YAAKD,KAAL,CAAWE,YAAX,CAAwB,MAAKC,KAAL,CAAWC,KAAnC;;AACA,YAAKJ,KAAL,CAAWK,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B;AACD,KAVkB;;AAEjB,UAAKH,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAFiB;AAKlB;;;;6BAOQ;AAAA;;AACP,aACE,6BAAC,qCAAD;AAA0B,QAAA,OAAO,EAAE;AAAA,iBAAMG,sBAASC,OAAT,EAAN;AAAA,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,qCAAD;AAAY,QAAA,KAAK,EAAEC,gBAAOC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,mBAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACV,KAAL,CAAWK,UAAX,CAAsBM,MAAtB;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEF,gBAAOG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,uCAPF,EAQE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEH,gBAAOI,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,sBAAD;AACE,QAAA,KAAK,EAAEJ,gBAAOK,KADhB;AAEE,QAAA,WAAW,EAAC,0BAFd;AAGE,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAAEZ,YAAAA,KAAK,EAAEW;AAAT,WAAd,CAAJ;AAAA,SAHpB;AAIE,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,KAJpB;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CARF,EAiBE,6BAAC,uBAAD;AAAgB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACH,aAAL,EAAN;AAAA,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,CADF,CADF;AAuBD;;;EArC6BgB,eAAMC,S;;AAwCtC,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLlB,IAAAA,YAAY,EAAE,sBAAAE,KAAK;AAAA,aAAIgB,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,eAAR;AAAyBjB,QAAAA,KAAK,EAALA;AAAzB,OAAD,CAAZ;AAAA;AADd,GAAP;AAGD;;eAEc,yBACb,IADa,EAEbe,kBAFa,EAGbpB,iBAHa,C","sourcesContent":["import React from 'react';\nimport { Text, View, TextInput, TouchableWithoutFeedback, Keyboard } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { connect } from 'react-redux';\nimport LogoHeader from '../../components/LogoHeader/LogoHeader';\nimport ContinueButton from '../../components/ContinueButton/ContinueButton';\nimport styles from './styles';\n\nclass EmailAdressScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: ''\n    };\n  }\n\n  onPressButton = () => {\n    this.props.addUserEmail(this.state.email);\n    this.props.navigation.navigate('Password');\n  };\n\n  render() {\n    return (\n      <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n        <ScrollView style={styles.container}>\n          <LogoHeader\n            onPress={() => {\n              this.props.navigation.goBack();\n            }}\n          />\n\n          <Text style={styles.title}>What is your email address?</Text>\n          <View style={styles.inputContainer}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Enter your email address\"\n              onChangeText={text => this.setState({ email: text })}\n              value={this.state.email}\n            />\n          </View>\n\n          <ContinueButton onPress={() => this.onPressButton()} />\n        </ScrollView>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addUserEmail: email => dispatch({ type: 'ADD_USEREMAIL', email })\n  };\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(EmailAdressScreen);\n"]},"metadata":{},"sourceType":"script"}