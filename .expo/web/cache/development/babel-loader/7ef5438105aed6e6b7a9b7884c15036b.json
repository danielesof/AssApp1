{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/node_modules/react-native-progress-circle/src/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar ViewPropTypesStyle = _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style;\nvar direction = _reactNative.I18nManager.isRTL ? 'right' : 'left';\n\nvar styles = _reactNative.StyleSheet.create({\n  outerCircle: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  innerCircle: {\n    overflow: 'hidden',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  leftWrap: (0, _defineProperty2.default)({\n    position: 'absolute',\n    top: 0\n  }, \"\" + direction, 0),\n  halfCircle: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0\n  }\n});\n\nfunction percentToDegrees(percent) {\n  return percent * 3.6;\n}\n\nvar PercentageCircle = function (_Component) {\n  (0, _inherits2.default)(PercentageCircle, _Component);\n\n  function PercentageCircle(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PercentageCircle);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PercentageCircle).call(this, props));\n    _this.state = _this.getInitialStateFromProps(props);\n    return _this;\n  }\n\n  (0, _createClass2.default)(PercentageCircle, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState(this.getInitialStateFromProps(nextProps));\n    }\n  }, {\n    key: \"getInitialStateFromProps\",\n    value: function getInitialStateFromProps(props) {\n      var percent = Math.max(Math.min(100, props.percent), 0);\n      var needHalfCircle2 = percent > 50;\n      var halfCircle1Degree;\n      var halfCircle2Degree;\n\n      if (needHalfCircle2) {\n        halfCircle1Degree = 180;\n        halfCircle2Degree = percentToDegrees(percent);\n      } else {\n        halfCircle1Degree = percentToDegrees(percent);\n        halfCircle2Degree = 0;\n      }\n\n      return {\n        halfCircle1Degree: halfCircle1Degree,\n        halfCircle2Degree: halfCircle2Degree,\n        halfCircle2Styles: {\n          backgroundColor: needHalfCircle2 ? props.color : props.shadowColor\n        }\n      };\n    }\n  }, {\n    key: \"renderHalfCircle\",\n    value: function renderHalfCircle(rotateDegrees, halfCircleStyles) {\n      var _this$props = this.props,\n          radius = _this$props.radius,\n          color = _this$props.color;\n      var key = _reactNative.I18nManager.isRTL ? 'right' : 'left';\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.leftWrap, {\n          width: radius,\n          height: radius * 2\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: [styles.halfCircle, _objectSpread({\n          width: radius,\n          height: radius * 2,\n          borderRadius: radius,\n          overflow: 'hidden',\n          transform: [{\n            translateX: radius / 2\n          }, {\n            rotate: rotateDegrees + \"deg\"\n          }, {\n            translateX: -radius / 2\n          }],\n          backgroundColor: color\n        }, halfCircleStyles)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        }\n      }));\n    }\n  }, {\n    key: \"renderInnerCircle\",\n    value: function renderInnerCircle() {\n      var radiusMinusBorder = this.props.radius - this.props.borderWidth;\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.innerCircle, _objectSpread({\n          width: radiusMinusBorder * 2,\n          height: radiusMinusBorder * 2,\n          borderRadius: radiusMinusBorder,\n          backgroundColor: this.props.bgColor\n        }, this.props.containerStyle)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        }\n      }, this.props.children);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          halfCircle1Degree = _this$state.halfCircle1Degree,\n          halfCircle2Degree = _this$state.halfCircle2Degree,\n          halfCircle2Styles = _this$state.halfCircle2Styles;\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.outerCircle, _objectSpread({\n          width: this.props.radius * 2,\n          height: this.props.radius * 2,\n          borderRadius: this.props.radius,\n          backgroundColor: this.props.shadowColor\n        }, this.props.outerCircleStyle)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        }\n      }, this.renderHalfCircle(halfCircle1Degree), this.renderHalfCircle(halfCircle2Degree, halfCircle2Styles), this.renderInnerCircle());\n    }\n  }]);\n  return PercentageCircle;\n}(_react.Component);\n\nexports.default = PercentageCircle;\nPercentageCircle.propTypes = {\n  color: _propTypes.default.string,\n  shadowColor: _propTypes.default.string,\n  bgColor: _propTypes.default.string,\n  radius: _propTypes.default.number.isRequired,\n  borderWidth: _propTypes.default.number,\n  percent: _propTypes.default.number.isRequired,\n  children: _propTypes.default.node,\n  containerStyle: ViewPropTypesStyle,\n  outerCircleStyle: ViewPropTypesStyle\n};\nPercentageCircle.defaultProps = {\n  color: '#f00',\n  shadowColor: '#999',\n  bgColor: '#e9e9ef',\n  borderWidth: 2,\n  children: null,\n  containerStyle: null\n};","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/node_modules/react-native-progress-circle/src/index.js"],"names":["ViewPropTypesStyle","ViewPropTypes","style","View","propTypes","direction","I18nManager","isRTL","styles","StyleSheet","create","outerCircle","justifyContent","alignItems","innerCircle","overflow","leftWrap","position","top","halfCircle","left","borderTopRightRadius","borderBottomRightRadius","percentToDegrees","percent","PercentageCircle","props","state","getInitialStateFromProps","nextProps","setState","Math","max","min","needHalfCircle2","halfCircle1Degree","halfCircle2Degree","halfCircle2Styles","backgroundColor","color","shadowColor","rotateDegrees","halfCircleStyles","radius","key","width","height","borderRadius","transform","translateX","rotate","radiusMinusBorder","borderWidth","bgColor","containerStyle","children","outerCircleStyle","renderHalfCircle","renderInnerCircle","Component","PropTypes","string","number","isRequired","node","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StyleSheet, View, ViewPropTypes,I18nManager } from 'react-native'\r\n\r\n// compatability for react-native versions < 0.44\r\nconst ViewPropTypesStyle = ViewPropTypes\r\n  ? ViewPropTypes.style\r\n  : View.propTypes.style\r\nlet direction = I18nManager.isRTL? 'right' : 'left';\r\nconst styles = StyleSheet.create({\r\n  outerCircle: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  innerCircle: {\r\n    overflow: 'hidden',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  leftWrap: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    [`${direction}`]: 0,\r\n  },\r\n  halfCircle: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n  },\r\n})\r\n\r\nfunction percentToDegrees(percent) {\r\n  return percent * 3.6\r\n}\r\n\r\nexport default class PercentageCircle extends Component {\r\n  static propTypes = {\r\n    color: PropTypes.string,\r\n    shadowColor: PropTypes.string,\r\n    bgColor: PropTypes.string,\r\n    radius: PropTypes.number.isRequired,\r\n    borderWidth: PropTypes.number,\r\n    percent: PropTypes.number.isRequired, // eslint-disable-line react/no-unused-prop-types\r\n    children: PropTypes.node,\r\n    containerStyle: ViewPropTypesStyle,\r\n    outerCircleStyle: ViewPropTypesStyle\r\n  };\r\n\r\n  static defaultProps = {\r\n    color: '#f00',\r\n    shadowColor: '#999',\r\n    bgColor: '#e9e9ef',\r\n    borderWidth: 2,\r\n    children: null,\r\n    containerStyle: null,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = this.getInitialStateFromProps(props)\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState(this.getInitialStateFromProps(nextProps))\r\n  }\r\n\r\n  getInitialStateFromProps(props) {\r\n    const percent = Math.max(Math.min(100, props.percent), 0)\r\n    const needHalfCircle2 = percent > 50\r\n    let halfCircle1Degree\r\n    let halfCircle2Degree\r\n    // degrees indicate the 'end' of the half circle, i.e. they span (degree - 180, degree)\r\n    if (needHalfCircle2) {\r\n      halfCircle1Degree = 180\r\n      halfCircle2Degree = percentToDegrees(percent)\r\n    } else {\r\n      halfCircle1Degree = percentToDegrees(percent)\r\n      halfCircle2Degree = 0\r\n    }\r\n\r\n    return {\r\n      halfCircle1Degree,\r\n      halfCircle2Degree,\r\n      halfCircle2Styles: {\r\n        // when the second half circle is not needed, we need it to cover\r\n        // the negative degrees of the first circle\r\n        backgroundColor: needHalfCircle2\r\n          ? props.color\r\n          : props.shadowColor,\r\n      },\r\n    }\r\n  }\r\n\r\n  renderHalfCircle(rotateDegrees, halfCircleStyles) {\r\n    const { radius, color } = this.props\r\n    const key = I18nManager.isRTL ? 'right' : 'left';\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.leftWrap,\r\n          {\r\n            width: radius,\r\n            height: radius * 2,\r\n          },\r\n        ]}\r\n      >\r\n        <View\r\n          style={[\r\n            styles.halfCircle,\r\n            {\r\n              width: radius,\r\n              height: radius * 2,\r\n              borderRadius: radius,\r\n              overflow: 'hidden',\r\n              transform: [\r\n                { translateX: radius / 2 },\r\n                { rotate: `${rotateDegrees}deg` },\r\n                { translateX: -radius / 2 },\r\n              ],\r\n              backgroundColor: color,\r\n              ...halfCircleStyles,\r\n            },\r\n          ]}\r\n        />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  renderInnerCircle() {\r\n    const radiusMinusBorder = this.props.radius - this.props.borderWidth\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.innerCircle,\r\n          {\r\n            width: radiusMinusBorder * 2,\r\n            height: radiusMinusBorder * 2,\r\n            borderRadius: radiusMinusBorder,\r\n            backgroundColor: this.props.bgColor,\r\n            ...this.props.containerStyle,\r\n          },\r\n        ]}\r\n      >\r\n        {this.props.children}\r\n      </View>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      halfCircle1Degree,\r\n      halfCircle2Degree,\r\n      halfCircle2Styles,\r\n    } = this.state\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.outerCircle,\r\n          {\r\n            width: this.props.radius * 2,\r\n            height: this.props.radius * 2,\r\n            borderRadius: this.props.radius,\r\n            backgroundColor: this.props.shadowColor,\r\n            ...this.props.outerCircleStyle,\r\n          },\r\n        ]}\r\n      >\r\n        {this.renderHalfCircle(halfCircle1Degree)}\r\n        {this.renderHalfCircle(halfCircle2Degree, halfCircle2Styles)}\r\n        {this.renderInnerCircle()}\r\n      </View>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}