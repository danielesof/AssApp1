{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSvg = require(\"react-native-svg\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _abstractChart = _interopRequireDefault(require(\"../abstract-chart\"));\n\nvar _constants = require(\"./constants\");\n\nvar _dateHelpers = require(\"./dateHelpers\");\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/node_modules/react-native-chart-kit/src/contribution-graph/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar SQUARE_SIZE = 20;\nvar MONTH_LABEL_GUTTER_SIZE = 8;\nvar paddingLeft = 32;\n\nvar ContributionGraph = function (_AbstractChart) {\n  (0, _inherits2.default)(ContributionGraph, _AbstractChart);\n\n  function ContributionGraph(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ContributionGraph);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ContributionGraph).call(this, props));\n    _this.state = {\n      valueCache: _this.getValueCache(props.values)\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(ContributionGraph, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        valueCache: this.getValueCache(nextProps.values)\n      });\n    }\n  }, {\n    key: \"getSquareSizeWithGutter\",\n    value: function getSquareSizeWithGutter() {\n      return (this.props.squareSize || SQUARE_SIZE) + this.props.gutterSize;\n    }\n  }, {\n    key: \"getMonthLabelSize\",\n    value: function getMonthLabelSize() {\n      var _this$props$squareSiz = this.props.squareSize,\n          squareSize = _this$props$squareSiz === void 0 ? SQUARE_SIZE : _this$props$squareSiz;\n\n      if (!this.props.showMonthLabels) {\n        return 0;\n      }\n\n      if (this.props.horizontal) {\n        return squareSize + MONTH_LABEL_GUTTER_SIZE;\n      }\n\n      return 2 * (squareSize + MONTH_LABEL_GUTTER_SIZE);\n    }\n  }, {\n    key: \"getStartDate\",\n    value: function getStartDate() {\n      return (0, _dateHelpers.shiftDate)(this.getEndDate(), -this.props.numDays + 1);\n    }\n  }, {\n    key: \"getEndDate\",\n    value: function getEndDate() {\n      return (0, _dateHelpers.getBeginningTimeForDate)((0, _dateHelpers.convertToDate)(this.props.endDate));\n    }\n  }, {\n    key: \"getStartDateWithEmptyDays\",\n    value: function getStartDateWithEmptyDays() {\n      return (0, _dateHelpers.shiftDate)(this.getStartDate(), -this.getNumEmptyDaysAtStart());\n    }\n  }, {\n    key: \"getNumEmptyDaysAtStart\",\n    value: function getNumEmptyDaysAtStart() {\n      return this.getStartDate().getDay();\n    }\n  }, {\n    key: \"getNumEmptyDaysAtEnd\",\n    value: function getNumEmptyDaysAtEnd() {\n      return _constants.DAYS_IN_WEEK - 1 - this.getEndDate().getDay();\n    }\n  }, {\n    key: \"getWeekCount\",\n    value: function getWeekCount() {\n      var numDaysRoundedToWeek = this.props.numDays + this.getNumEmptyDaysAtStart() + this.getNumEmptyDaysAtEnd();\n      return Math.ceil(numDaysRoundedToWeek / _constants.DAYS_IN_WEEK);\n    }\n  }, {\n    key: \"getWeekWidth\",\n    value: function getWeekWidth() {\n      return _constants.DAYS_IN_WEEK * this.getSquareSizeWithGutter();\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.getWeekCount() * this.getSquareSizeWithGutter() - this.props.gutterSize;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.getWeekWidth() + (this.getMonthLabelSize() - this.props.gutterSize);\n    }\n  }, {\n    key: \"getValueCache\",\n    value: function getValueCache(values) {\n      var _this2 = this;\n\n      return values.reduce(function (memo, value) {\n        var date = (0, _dateHelpers.convertToDate)(value.date);\n        var index = Math.floor((date - _this2.getStartDateWithEmptyDays()) / _constants.MILLISECONDS_IN_ONE_DAY);\n        memo[index] = {\n          value: value,\n          title: _this2.props.titleForValue ? _this2.props.titleForValue(value) : null,\n          tooltipDataAttrs: _this2.getTooltipDataAttrsForValue(value)\n        };\n        return memo;\n      }, {});\n    }\n  }, {\n    key: \"getValueForIndex\",\n    value: function getValueForIndex(index) {\n      if (this.state.valueCache[index]) {\n        return this.state.valueCache[index].value;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getClassNameForIndex\",\n    value: function getClassNameForIndex(index) {\n      if (this.state.valueCache[index]) {\n        if (this.state.valueCache[index].value) {\n          var count = this.state.valueCache[index].value.count;\n\n          if (count) {\n            var opacity = (count * 0.15 > 1 ? 1 : count * 0.15) + 0.15;\n            return this.props.chartConfig.color(opacity);\n          }\n        }\n      }\n\n      return this.props.chartConfig.color(0.15);\n    }\n  }, {\n    key: \"getTitleForIndex\",\n    value: function getTitleForIndex(index) {\n      if (this.state.valueCache[index]) {\n        return this.state.valueCache[index].title;\n      }\n\n      return this.props.titleForValue ? this.props.titleForValue(null) : null;\n    }\n  }, {\n    key: \"getTooltipDataAttrsForIndex\",\n    value: function getTooltipDataAttrsForIndex(index) {\n      if (this.state.valueCache[index]) {\n        return this.state.valueCache[index].tooltipDataAttrs;\n      }\n\n      return this.getTooltipDataAttrsForValue({\n        date: null,\n        count: null\n      });\n    }\n  }, {\n    key: \"getTooltipDataAttrsForValue\",\n    value: function getTooltipDataAttrsForValue(value) {\n      var tooltipDataAttrs = this.props.tooltipDataAttrs;\n\n      if (typeof tooltipDataAttrs === \"function\") {\n        return tooltipDataAttrs(value);\n      }\n\n      return tooltipDataAttrs;\n    }\n  }, {\n    key: \"getTransformForWeek\",\n    value: function getTransformForWeek(weekIndex) {\n      if (this.props.horizontal) {\n        return [weekIndex * this.getSquareSizeWithGutter(), 50];\n      }\n\n      return [10, weekIndex * this.getSquareSizeWithGutter()];\n    }\n  }, {\n    key: \"getTransformForMonthLabels\",\n    value: function getTransformForMonthLabels() {\n      if (this.props.horizontal) {\n        return null;\n      }\n\n      return this.getWeekWidth() + MONTH_LABEL_GUTTER_SIZE + \", 0\";\n    }\n  }, {\n    key: \"getTransformForAllWeeks\",\n    value: function getTransformForAllWeeks() {\n      if (this.props.horizontal) {\n        return \"0, \" + (this.getMonthLabelSize() - 100);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getViewBox\",\n    value: function getViewBox() {\n      if (this.props.horizontal) {\n        return this.getWidth() + \" \" + this.getHeight();\n      }\n\n      return this.getHeight() + \" \" + this.getWidth();\n    }\n  }, {\n    key: \"getSquareCoordinates\",\n    value: function getSquareCoordinates(dayIndex) {\n      if (this.props.horizontal) {\n        return [0, dayIndex * this.getSquareSizeWithGutter()];\n      }\n\n      return [dayIndex * this.getSquareSizeWithGutter(), 0];\n    }\n  }, {\n    key: \"getMonthLabelCoordinates\",\n    value: function getMonthLabelCoordinates(weekIndex) {\n      if (this.props.horizontal) {\n        return [weekIndex * this.getSquareSizeWithGutter(), this.getMonthLabelSize() - MONTH_LABEL_GUTTER_SIZE];\n      }\n\n      var verticalOffset = -2;\n      return [0, (weekIndex + 1) * this.getSquareSizeWithGutter() + verticalOffset];\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(value) {\n      if (this.props.onClick) {\n        this.props.onClick(value);\n      }\n    }\n  }, {\n    key: \"renderSquare\",\n    value: function renderSquare(dayIndex, index) {\n      var indexOutOfRange = index < this.getNumEmptyDaysAtStart() || index >= this.getNumEmptyDaysAtStart() + this.props.numDays;\n\n      if (indexOutOfRange && !this.props.showOutOfRangeDays) {\n        return null;\n      }\n\n      var _this$getSquareCoordi = this.getSquareCoordinates(dayIndex),\n          _this$getSquareCoordi2 = (0, _slicedToArray2.default)(_this$getSquareCoordi, 2),\n          x = _this$getSquareCoordi2[0],\n          y = _this$getSquareCoordi2[1];\n\n      var _this$props$squareSiz2 = this.props.squareSize,\n          squareSize = _this$props$squareSiz2 === void 0 ? SQUARE_SIZE : _this$props$squareSiz2;\n      return _react.default.createElement(_reactNativeSvg.Rect, (0, _extends2.default)({\n        key: index,\n        width: squareSize,\n        height: squareSize,\n        x: x + paddingLeft,\n        y: y,\n        title: this.getTitleForIndex(index),\n        fill: this.getClassNameForIndex(index)\n      }, this.getTooltipDataAttrsForIndex(index), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        }\n      }));\n    }\n  }, {\n    key: \"renderWeek\",\n    value: function renderWeek(weekIndex) {\n      var _this3 = this;\n\n      var _this$getTransformFor = this.getTransformForWeek(weekIndex),\n          _this$getTransformFor2 = (0, _slicedToArray2.default)(_this$getTransformFor, 2),\n          x = _this$getTransformFor2[0],\n          y = _this$getTransformFor2[1];\n\n      return _react.default.createElement(_reactNativeSvg.G, {\n        key: weekIndex,\n        x: x,\n        y: y,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        }\n      }, _lodash.default.range(_constants.DAYS_IN_WEEK).map(function (dayIndex) {\n        return _this3.renderSquare(dayIndex, weekIndex * _constants.DAYS_IN_WEEK + dayIndex);\n      }));\n    }\n  }, {\n    key: \"renderAllWeeks\",\n    value: function renderAllWeeks() {\n      var _this4 = this;\n\n      return _lodash.default.range(this.getWeekCount()).map(function (weekIndex) {\n        return _this4.renderWeek(weekIndex);\n      });\n    }\n  }, {\n    key: \"renderMonthLabels\",\n    value: function renderMonthLabels() {\n      var _this5 = this;\n\n      if (!this.props.showMonthLabels) {\n        return null;\n      }\n\n      var weekRange = _lodash.default.range(this.getWeekCount() - 1);\n\n      return weekRange.map(function (weekIndex) {\n        var endOfWeek = (0, _dateHelpers.shiftDate)(_this5.getStartDateWithEmptyDays(), (weekIndex + 1) * _constants.DAYS_IN_WEEK);\n\n        var _this5$getMonthLabelC = _this5.getMonthLabelCoordinates(weekIndex),\n            _this5$getMonthLabelC2 = (0, _slicedToArray2.default)(_this5$getMonthLabelC, 2),\n            x = _this5$getMonthLabelC2[0],\n            y = _this5$getMonthLabelC2[1];\n\n        return endOfWeek.getDate() >= 1 && endOfWeek.getDate() <= _constants.DAYS_IN_WEEK ? _react.default.createElement(_reactNativeSvg.Text, (0, _extends2.default)({\n          key: weekIndex,\n          x: x + paddingLeft,\n          y: y + 8\n        }, _this5.getPropsForLabels(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          }\n        }), _constants.MONTH_LABELS[endOfWeek.getMonth()]) : null;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$style = this.props.style,\n          style = _this$props$style === void 0 ? {} : _this$props$style;\n      var _style$borderRadius = style.borderRadius,\n          borderRadius = _style$borderRadius === void 0 ? 0 : _style$borderRadius;\n\n      if (!borderRadius && this.props.chartConfig.style) {\n        var stupidXo = this.props.chartConfig.style.borderRadius;\n        borderRadius = stupidXo;\n      }\n\n      return _react.default.createElement(_reactNative.View, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        }\n      }, _react.default.createElement(_reactNativeSvg.Svg, {\n        height: this.props.height,\n        width: this.props.width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        }\n      }, this.renderDefs(_objectSpread({\n        width: this.props.width,\n        height: this.props.height\n      }, this.props.chartConfig)), _react.default.createElement(_reactNativeSvg.Rect, {\n        width: \"100%\",\n        height: this.props.height,\n        rx: borderRadius,\n        ry: borderRadius,\n        fill: \"url(#backgroundGradient)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        }\n      }), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        }\n      }, this.renderMonthLabels()), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        }\n      }, this.renderAllWeeks())));\n    }\n  }]);\n  return ContributionGraph;\n}(_abstractChart.default);\n\nContributionGraph.ViewPropTypes = {\n  values: _propTypes.default.arrayOf(_propTypes.default.shape({\n    date: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.instanceOf(Date)]).isRequired\n  }).isRequired).isRequired,\n  numDays: _propTypes.default.number,\n  endDate: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.instanceOf(Date)]),\n  gutterSize: _propTypes.default.number,\n  squareSize: _propTypes.default.number,\n  horizontal: _propTypes.default.bool,\n  showMonthLabels: _propTypes.default.bool,\n  showOutOfRangeDays: _propTypes.default.bool,\n  tooltipDataAttrs: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),\n  titleForValue: _propTypes.default.func,\n  classForValue: _propTypes.default.func,\n  onClick: _propTypes.default.func\n};\nContributionGraph.defaultProps = {\n  numDays: 200,\n  endDate: new Date(),\n  gutterSize: 1,\n  squareSize: SQUARE_SIZE,\n  horizontal: true,\n  showMonthLabels: true,\n  showOutOfRangeDays: false,\n  classForValue: function classForValue(value) {\n    return value ? \"black\" : \"#8cc665\";\n  }\n};\nvar _default = ContributionGraph;\nexports.default = _default;","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/node_modules/react-native-chart-kit/src/contribution-graph/index.js"],"names":["SQUARE_SIZE","MONTH_LABEL_GUTTER_SIZE","paddingLeft","ContributionGraph","props","state","valueCache","getValueCache","values","nextProps","setState","squareSize","gutterSize","showMonthLabels","horizontal","getEndDate","numDays","endDate","getStartDate","getNumEmptyDaysAtStart","getDay","DAYS_IN_WEEK","numDaysRoundedToWeek","getNumEmptyDaysAtEnd","Math","ceil","getSquareSizeWithGutter","getWeekCount","getWeekWidth","getMonthLabelSize","reduce","memo","value","date","index","floor","getStartDateWithEmptyDays","MILLISECONDS_IN_ONE_DAY","title","titleForValue","tooltipDataAttrs","getTooltipDataAttrsForValue","count","opacity","chartConfig","color","weekIndex","getWidth","getHeight","dayIndex","verticalOffset","onClick","indexOutOfRange","showOutOfRangeDays","getSquareCoordinates","x","y","getTitleForIndex","getClassNameForIndex","getTooltipDataAttrsForIndex","getTransformForWeek","_","range","map","renderSquare","renderWeek","weekRange","endOfWeek","getMonthLabelCoordinates","getDate","getPropsForLabels","MONTH_LABELS","getMonth","style","borderRadius","stupidXo","height","width","renderDefs","renderMonthLabels","renderAllWeeks","AbstractChart","ViewPropTypes","PropTypes","arrayOf","shape","oneOfType","string","number","instanceOf","Date","isRequired","bool","object","func","classForValue","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View } from \"react-native\";\nimport { Svg, G, Text, Rect } from \"react-native-svg\";\nimport _ from \"lodash\";\nimport AbstractChart from \"../abstract-chart\";\nimport {\n  DAYS_IN_WEEK,\n  MILLISECONDS_IN_ONE_DAY,\n  MONTH_LABELS\n} from \"./constants\";\nimport {\n  shiftDate,\n  getBeginningTimeForDate,\n  convertToDate\n} from \"./dateHelpers\";\n\nconst SQUARE_SIZE = 20;\nconst MONTH_LABEL_GUTTER_SIZE = 8;\nconst paddingLeft = 32;\nclass ContributionGraph extends AbstractChart {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valueCache: this.getValueCache(props.values)\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      valueCache: this.getValueCache(nextProps.values)\n    });\n  }\n\n  getSquareSizeWithGutter() {\n    return (this.props.squareSize || SQUARE_SIZE) + this.props.gutterSize;\n  }\n\n  getMonthLabelSize() {\n    let { squareSize = SQUARE_SIZE } = this.props;\n    if (!this.props.showMonthLabels) {\n      return 0;\n    }\n    if (this.props.horizontal) {\n      return squareSize + MONTH_LABEL_GUTTER_SIZE;\n    }\n    return 2 * (squareSize + MONTH_LABEL_GUTTER_SIZE);\n  }\n\n  getStartDate() {\n    return shiftDate(this.getEndDate(), -this.props.numDays + 1); // +1 because endDate is inclusive\n  }\n\n  getEndDate() {\n    return getBeginningTimeForDate(convertToDate(this.props.endDate));\n  }\n\n  getStartDateWithEmptyDays() {\n    return shiftDate(this.getStartDate(), -this.getNumEmptyDaysAtStart());\n  }\n\n  getNumEmptyDaysAtStart() {\n    return this.getStartDate().getDay();\n  }\n\n  getNumEmptyDaysAtEnd() {\n    return DAYS_IN_WEEK - 1 - this.getEndDate().getDay();\n  }\n\n  getWeekCount() {\n    const numDaysRoundedToWeek =\n      this.props.numDays +\n      this.getNumEmptyDaysAtStart() +\n      this.getNumEmptyDaysAtEnd();\n    return Math.ceil(numDaysRoundedToWeek / DAYS_IN_WEEK);\n  }\n\n  getWeekWidth() {\n    return DAYS_IN_WEEK * this.getSquareSizeWithGutter();\n  }\n\n  getWidth() {\n    return (\n      this.getWeekCount() * this.getSquareSizeWithGutter() -\n      this.props.gutterSize\n    );\n  }\n\n  getHeight() {\n    return (\n      this.getWeekWidth() + (this.getMonthLabelSize() - this.props.gutterSize)\n    );\n  }\n\n  getValueCache(values) {\n    return values.reduce((memo, value) => {\n      const date = convertToDate(value.date);\n      const index = Math.floor(\n        (date - this.getStartDateWithEmptyDays()) / MILLISECONDS_IN_ONE_DAY\n      );\n      memo[index] = {\n        value,\n        title: this.props.titleForValue\n          ? this.props.titleForValue(value)\n          : null,\n        tooltipDataAttrs: this.getTooltipDataAttrsForValue(value)\n      };\n      return memo;\n    }, {});\n  }\n\n  getValueForIndex(index) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].value;\n    }\n    return null;\n  }\n\n  getClassNameForIndex(index) {\n    if (this.state.valueCache[index]) {\n      if (this.state.valueCache[index].value) {\n        const count = this.state.valueCache[index].value.count;\n        if (count) {\n          const opacity = (count * 0.15 > 1 ? 1 : count * 0.15) + 0.15;\n          return this.props.chartConfig.color(opacity);\n        }\n      }\n    }\n    return this.props.chartConfig.color(0.15);\n  }\n\n  getTitleForIndex(index) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].title;\n    }\n    return this.props.titleForValue ? this.props.titleForValue(null) : null;\n  }\n\n  getTooltipDataAttrsForIndex(index) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].tooltipDataAttrs;\n    }\n    return this.getTooltipDataAttrsForValue({ date: null, count: null });\n  }\n\n  getTooltipDataAttrsForValue(value) {\n    const { tooltipDataAttrs } = this.props;\n\n    if (typeof tooltipDataAttrs === \"function\") {\n      return tooltipDataAttrs(value);\n    }\n    return tooltipDataAttrs;\n  }\n\n  getTransformForWeek(weekIndex) {\n    if (this.props.horizontal) {\n      return [weekIndex * this.getSquareSizeWithGutter(), 50];\n    }\n    return [10, weekIndex * this.getSquareSizeWithGutter()];\n  }\n\n  getTransformForMonthLabels() {\n    if (this.props.horizontal) {\n      return null;\n    }\n    return `${this.getWeekWidth() + MONTH_LABEL_GUTTER_SIZE}, 0`;\n  }\n\n  getTransformForAllWeeks() {\n    if (this.props.horizontal) {\n      return `0, ${this.getMonthLabelSize() - 100}`;\n    }\n    return null;\n  }\n\n  getViewBox() {\n    if (this.props.horizontal) {\n      return `${this.getWidth()} ${this.getHeight()}`;\n    }\n    return `${this.getHeight()} ${this.getWidth()}`;\n  }\n\n  getSquareCoordinates(dayIndex) {\n    if (this.props.horizontal) {\n      return [0, dayIndex * this.getSquareSizeWithGutter()];\n    }\n    return [dayIndex * this.getSquareSizeWithGutter(), 0];\n  }\n\n  getMonthLabelCoordinates(weekIndex) {\n    if (this.props.horizontal) {\n      return [\n        weekIndex * this.getSquareSizeWithGutter(),\n        this.getMonthLabelSize() - MONTH_LABEL_GUTTER_SIZE\n      ];\n    }\n    const verticalOffset = -2;\n    return [\n      0,\n      (weekIndex + 1) * this.getSquareSizeWithGutter() + verticalOffset\n    ];\n  }\n\n  handleClick(value) {\n    if (this.props.onClick) {\n      this.props.onClick(value);\n    }\n  }\n\n  renderSquare(dayIndex, index) {\n    const indexOutOfRange =\n      index < this.getNumEmptyDaysAtStart() ||\n      index >= this.getNumEmptyDaysAtStart() + this.props.numDays;\n    if (indexOutOfRange && !this.props.showOutOfRangeDays) {\n      return null;\n    }\n    const [x, y] = this.getSquareCoordinates(dayIndex);\n    const { squareSize = SQUARE_SIZE } = this.props;\n    return (\n      <Rect\n        key={index}\n        width={squareSize}\n        height={squareSize}\n        x={x + paddingLeft}\n        y={y}\n        title={this.getTitleForIndex(index)}\n        fill={this.getClassNameForIndex(index)}\n        {...this.getTooltipDataAttrsForIndex(index)}\n      />\n    );\n  }\n\n  renderWeek(weekIndex) {\n    const [x, y] = this.getTransformForWeek(weekIndex);\n    return (\n      <G key={weekIndex} x={x} y={y}>\n        {_.range(DAYS_IN_WEEK).map(dayIndex =>\n          this.renderSquare(dayIndex, weekIndex * DAYS_IN_WEEK + dayIndex)\n        )}\n      </G>\n    );\n  }\n\n  renderAllWeeks() {\n    return _.range(this.getWeekCount()).map(weekIndex =>\n      this.renderWeek(weekIndex)\n    );\n  }\n\n  renderMonthLabels() {\n    if (!this.props.showMonthLabels) {\n      return null;\n    }\n    const weekRange = _.range(this.getWeekCount() - 1); // don't render for last week, because label will be cut off\n    return weekRange.map(weekIndex => {\n      const endOfWeek = shiftDate(\n        this.getStartDateWithEmptyDays(),\n        (weekIndex + 1) * DAYS_IN_WEEK\n      );\n      const [x, y] = this.getMonthLabelCoordinates(weekIndex);\n      return endOfWeek.getDate() >= 1 && endOfWeek.getDate() <= DAYS_IN_WEEK ? (\n        <Text\n          key={weekIndex}\n          x={x + paddingLeft}\n          y={y + 8}\n          {...this.getPropsForLabels()}\n        >\n          {MONTH_LABELS[endOfWeek.getMonth()]}\n        </Text>\n      ) : null;\n    });\n  }\n\n  render() {\n    const { style = {} } = this.props;\n    let { borderRadius = 0 } = style;\n    if (!borderRadius && this.props.chartConfig.style) {\n      const stupidXo = this.props.chartConfig.style.borderRadius;\n      borderRadius = stupidXo;\n    }\n    return (\n      <View style={style}>\n        <Svg height={this.props.height} width={this.props.width}>\n          {this.renderDefs({\n            width: this.props.width,\n            height: this.props.height,\n            ...this.props.chartConfig\n          })}\n          <Rect\n            width=\"100%\"\n            height={this.props.height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill=\"url(#backgroundGradient)\"\n          />\n          <G>{this.renderMonthLabels()}</G>\n          <G>{this.renderAllWeeks()}</G>\n        </Svg>\n      </View>\n    );\n  }\n}\n\nContributionGraph.ViewPropTypes = {\n  values: PropTypes.arrayOf(\n    // array of objects with date and arbitrary metadata\n    PropTypes.shape({\n      date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.instanceOf(Date)\n      ]).isRequired\n    }).isRequired\n  ).isRequired,\n  numDays: PropTypes.number, // number of days back from endDate to show\n  endDate: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.instanceOf(Date)\n  ]), // end of date range\n  gutterSize: PropTypes.number, // size of space between squares\n  squareSize: PropTypes.number, // size of squares\n  horizontal: PropTypes.bool, // whether to orient horizontally or vertically\n  showMonthLabels: PropTypes.bool, // whether to show month labels\n  showOutOfRangeDays: PropTypes.bool, // whether to render squares for extra days in week after endDate, and before start date\n  tooltipDataAttrs: PropTypes.oneOfType([PropTypes.object, PropTypes.func]), // data attributes to add to square for setting 3rd party tooltips, e.g. { 'data-toggle': 'tooltip' } for bootstrap tooltips\n  titleForValue: PropTypes.func, // function which returns title text for value\n  classForValue: PropTypes.func, // function which returns html class for value\n  onClick: PropTypes.func // callback function when a square is clicked\n};\n\nContributionGraph.defaultProps = {\n  numDays: 200,\n  endDate: new Date(),\n  gutterSize: 1,\n  squareSize: SQUARE_SIZE,\n  horizontal: true,\n  showMonthLabels: true,\n  showOutOfRangeDays: false,\n  classForValue: value => (value ? \"black\" : \"#8cc665\")\n};\n\nexport default ContributionGraph;\n"]},"metadata":{},"sourceType":"script"}