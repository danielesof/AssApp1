{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSvg = require(\"react-native-svg\");\n\nvar _abstractChart = _interopRequireDefault(require(\"./abstract-chart\"));\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/node_modules/react-native-chart-kit/src/progress-chart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Pie = require(\"paths-js/pie\");\n\nvar ProgressChart = function (_AbstractChart) {\n  (0, _inherits2.default)(ProgressChart, _AbstractChart);\n\n  function ProgressChart() {\n    (0, _classCallCheck2.default)(this, ProgressChart);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ProgressChart).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(ProgressChart, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          width = _this$props.width,\n          height = _this$props.height,\n          _this$props$style = _this$props.style,\n          style = _this$props$style === void 0 ? {} : _this$props$style,\n          data = _this$props.data;\n      var _style$borderRadius = style.borderRadius,\n          borderRadius = _style$borderRadius === void 0 ? 0 : _style$borderRadius;\n\n      if (Array.isArray(data)) {\n        data = {\n          data: data\n        };\n      }\n\n      var pies = data.data.map(function (pieData, i) {\n        var r = (height / 2 - 32) / data.data.length * i + 32;\n        return Pie({\n          r: r,\n          R: r,\n          center: [0, 0],\n          data: [pieData, 1 - pieData],\n          accessor: function accessor(x) {\n            return x;\n          }\n        });\n      });\n      var pieBackgrounds = data.data.map(function (pieData, i) {\n        var r = (height / 2 - 32) / data.data.length * i + 32;\n        return Pie({\n          r: r,\n          R: r,\n          center: [0, 0],\n          data: [0.999, 0.001],\n          accessor: function accessor(x) {\n            return x;\n          }\n        });\n      });\n\n      var withLabel = function withLabel(i) {\n        return data.labels && data.labels[i];\n      };\n\n      return _react.default.createElement(_reactNative.View, {\n        style: _objectSpread({\n          width: width,\n          height: height,\n          padding: 0\n        }, style),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        }\n      }, _react.default.createElement(_reactNativeSvg.Svg, {\n        width: width,\n        height: height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      }, this.renderDefs(_objectSpread({\n        width: this.props.height,\n        height: this.props.height\n      }, this.props.chartConfig)), _react.default.createElement(_reactNativeSvg.Rect, {\n        width: \"100%\",\n        height: this.props.height,\n        rx: borderRadius,\n        ry: borderRadius,\n        fill: \"url(#backgroundGradient)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        }\n      }), _react.default.createElement(_reactNativeSvg.G, {\n        x: this.props.width / 2.5,\n        y: this.props.height / 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        }\n      }, _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      }, pieBackgrounds.map(function (pie) {\n        return _react.default.createElement(_reactNativeSvg.Path, {\n          key: Math.random(),\n          d: pie.curves[0].sector.path.print(),\n          strokeWidth: 16,\n          stroke: _this.props.chartConfig.color(0.2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          }\n        });\n      })), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        }\n      }, pies.map(function (pie, i) {\n        return _react.default.createElement(_reactNativeSvg.Path, {\n          key: Math.random(),\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          d: pie.curves[0].sector.path.print(),\n          strokeWidth: 16,\n          stroke: _this.props.chartConfig.color(i / pies.length * 0.5 + 0.5),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          }\n        });\n      })), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }, pies.map(function (_, i) {\n        return _react.default.createElement(_reactNativeSvg.Rect, {\n          key: Math.random(),\n          width: \"16px\",\n          height: \"16px\",\n          fill: _this.props.chartConfig.color(0.2 * (i + 1)),\n          rx: 8,\n          ry: 8,\n          x: _this.props.width / 2.5 - 24,\n          y: -(_this.props.height / 2.5) + _this.props.height * 0.8 / data.data.length * i + 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          }\n        });\n      })), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        }\n      }, pies.map(function (_, i) {\n        return _react.default.createElement(_reactNativeSvg.Text, (0, _extends2.default)({\n          key: Math.random(),\n          x: _this.props.width / 2.5,\n          y: -(_this.props.height / 2.5) + _this.props.height * 0.8 / data.data.length * i + 12 * 2\n        }, _this.getPropsForLabels(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          }\n        }), withLabel(i) ? data.labels[i] + \" \" + Math.round(100 * data.data[i]) + \"%\" : Math.round(100 * data.data[i]) + \"%\");\n      })))));\n    }\n  }]);\n  return ProgressChart;\n}(_abstractChart.default);\n\nvar _default = ProgressChart;\nexports.default = _default;","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/node_modules/react-native-chart-kit/src/progress-chart.js"],"names":["Pie","require","ProgressChart","props","width","height","style","data","borderRadius","Array","isArray","pies","map","pieData","i","r","length","R","center","accessor","x","pieBackgrounds","withLabel","labels","padding","renderDefs","chartConfig","pie","Math","random","curves","sector","path","print","color","_","getPropsForLabels","round","AbstractChart"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View } from \"react-native\";\nimport { Svg, Text, G, Rect, Path } from \"react-native-svg\";\nimport AbstractChart from \"./abstract-chart\";\n\nconst Pie = require(\"paths-js/pie\");\n\nclass ProgressChart extends AbstractChart {\n  render() {\n    let { width, height, style = {}, data } = this.props;\n    const { borderRadius = 0 } = style;\n\n    if (Array.isArray(data)) {\n      data = {\n        data\n      };\n    }\n\n    const pies = data.data.map((pieData, i) => {\n      const r = ((height / 2 - 32) / data.data.length) * i + 32;\n      return Pie({\n        r,\n        R: r,\n        center: [0, 0],\n        data: [pieData, 1 - pieData],\n        accessor(x) {\n          return x;\n        }\n      });\n    });\n\n    const pieBackgrounds = data.data.map((pieData, i) => {\n      const r = ((height / 2 - 32) / data.data.length) * i + 32;\n      return Pie({\n        r,\n        R: r,\n        center: [0, 0],\n        data: [0.999, 0.001],\n        accessor(x) {\n          return x;\n        }\n      });\n    });\n\n    const withLabel = i => data.labels && data.labels[i];\n\n    return (\n      <View\n        style={{\n          width,\n          height,\n          padding: 0,\n          ...style\n        }}\n      >\n        <Svg width={width} height={height}>\n          {this.renderDefs({\n            width: this.props.height,\n            height: this.props.height,\n            ...this.props.chartConfig\n          })}\n          <Rect\n            width=\"100%\"\n            height={this.props.height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill=\"url(#backgroundGradient)\"\n          />\n          <G x={this.props.width / 2.5} y={this.props.height / 2}>\n            <G>\n              {pieBackgrounds.map(pie => {\n                return (\n                  <Path\n                    key={Math.random()}\n                    d={pie.curves[0].sector.path.print()}\n                    strokeWidth={16}\n                    stroke={this.props.chartConfig.color(0.2)}\n                  />\n                );\n              })}\n            </G>\n            <G>\n              {pies.map((pie, i) => {\n                return (\n                  <Path\n                    key={Math.random()}\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d={pie.curves[0].sector.path.print()}\n                    strokeWidth={16}\n                    stroke={this.props.chartConfig.color(\n                      (i / pies.length) * 0.5 + 0.5\n                    )}\n                  />\n                );\n              })}\n            </G>\n            <G>\n              {pies.map((_, i) => {\n                return (\n                  <Rect\n                    key={Math.random()}\n                    width=\"16px\"\n                    height=\"16px\"\n                    fill={this.props.chartConfig.color(0.2 * (i + 1))}\n                    rx={8}\n                    ry={8}\n                    x={this.props.width / 2.5 - 24}\n                    y={\n                      -(this.props.height / 2.5) +\n                      ((this.props.height * 0.8) / data.data.length) * i +\n                      12\n                    }\n                  />\n                );\n              })}\n            </G>\n            <G>\n              {pies.map((_, i) => {\n                return (\n                  <Text\n                    key={Math.random()}\n                    x={this.props.width / 2.5}\n                    y={\n                      -(this.props.height / 2.5) +\n                      ((this.props.height * 0.8) / data.data.length) * i +\n                      12 * 2\n                    }\n                    {...this.getPropsForLabels()}\n                  >\n                    {withLabel(i)\n                      ? `${data.labels[i]} ${Math.round(100 * data.data[i])}%`\n                      : `${Math.round(100 * data.data[i])}%`}\n                  </Text>\n                );\n              })}\n            </G>\n          </G>\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default ProgressChart;\n"]},"metadata":{},"sourceType":"script"}