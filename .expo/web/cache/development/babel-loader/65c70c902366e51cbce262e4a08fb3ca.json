{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSvg = require(\"react-native-svg\");\n\nvar _abstractChart = _interopRequireDefault(require(\"./abstract-chart\"));\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/node_modules/react-native-chart-kit/src/line-chart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar LineChart = function (_AbstractChart) {\n  (0, _inherits2.default)(LineChart, _AbstractChart);\n\n  function LineChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, LineChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(LineChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getColor = function (dataset, opacity) {\n      return (dataset.color || _this.props.chartConfig.color)(opacity);\n    };\n\n    _this.getStrokeWidth = function (dataset) {\n      return dataset.strokeWidth || _this.props.chartConfig.strokeWidth || 3;\n    };\n\n    _this.getDatas = function (data) {\n      return data.reduce(function (acc, item) {\n        return item.data ? [].concat((0, _toConsumableArray2.default)(acc), (0, _toConsumableArray2.default)(item.data)) : acc;\n      }, []);\n    };\n\n    _this.getPropsForDots = function (x, i) {\n      var _this$props = _this.props,\n          getDotProps = _this$props.getDotProps,\n          _this$props$chartConf = _this$props.chartConfig,\n          chartConfig = _this$props$chartConf === void 0 ? {} : _this$props$chartConf;\n\n      if (typeof getDotProps === \"function\") {\n        return getDotProps(x, i);\n      }\n\n      var _chartConfig$propsFor = chartConfig.propsForDots,\n          propsForDots = _chartConfig$propsFor === void 0 ? {} : _chartConfig$propsFor;\n      return _objectSpread({\n        r: \"4\"\n      }, propsForDots);\n    };\n\n    _this.renderDots = function (config) {\n      var data = config.data,\n          width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight,\n          onDataPointClick = config.onDataPointClick;\n      var output = [];\n\n      var datas = _this.getDatas(data);\n\n      var baseHeight = _this.calcBaseHeight(datas, height);\n\n      var _this$props2 = _this.props,\n          getDotColor = _this$props2.getDotColor,\n          _this$props2$hidePoin = _this$props2.hidePointsAtIndex,\n          hidePointsAtIndex = _this$props2$hidePoin === void 0 ? [] : _this$props2$hidePoin;\n      data.forEach(function (dataset) {\n        dataset.data.forEach(function (x, i) {\n          if (hidePointsAtIndex.includes(i)) {\n            return;\n          }\n\n          var cx = paddingRight + i * (width - paddingRight) / dataset.data.length;\n          var cy = (baseHeight - _this.calcHeight(x, datas, height)) / 4 * 3 + paddingTop;\n\n          var onPress = function onPress() {\n            if (!onDataPointClick || hidePointsAtIndex.includes(i)) {\n              return;\n            }\n\n            onDataPointClick({\n              index: i,\n              value: x,\n              dataset: dataset,\n              x: cx,\n              y: cy,\n              getColor: function getColor(opacity) {\n                return _this.getColor(dataset, opacity);\n              }\n            });\n          };\n\n          output.push(_react.default.createElement(_reactNativeSvg.Circle, (0, _extends2.default)({\n            key: Math.random(),\n            cx: cx,\n            cy: cy,\n            fill: typeof getDotColor === \"function\" ? getDotColor(x, i) : _this.getColor(dataset, 0.9),\n            onPress: onPress\n          }, _this.getPropsForDots(x, i), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            }\n          })), _react.default.createElement(_reactNativeSvg.Circle, {\n            key: Math.random(),\n            cx: cx,\n            cy: cy,\n            r: \"12\",\n            fill: \"#fff\",\n            fillOpacity: 0,\n            onPress: onPress,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            }\n          }));\n        });\n      });\n      return output;\n    };\n\n    _this.renderShadow = function (config) {\n      if (_this.props.bezier) {\n        return _this.renderBezierShadow(config);\n      }\n\n      var data = config.data,\n          width = config.width,\n          height = config.height,\n          paddingRight = config.paddingRight,\n          paddingTop = config.paddingTop;\n\n      var datas = _this.getDatas(data);\n\n      var baseHeight = _this.calcBaseHeight(datas, height);\n\n      return config.data.map(function (dataset, index) {\n        return _react.default.createElement(_reactNativeSvg.Polygon, {\n          key: index,\n          points: dataset.data.map(function (d, i) {\n            var x = paddingRight + i * (width - paddingRight) / dataset.data.length;\n            var y = (baseHeight - _this.calcHeight(d, datas, height)) / 4 * 3 + paddingTop;\n            return x + \",\" + y;\n          }).join(\" \") + (\" \" + (paddingRight + (width - paddingRight) / dataset.data.length * (dataset.data.length - 1)) + \",\" + (height / 4 * 3 + paddingTop) + \" \" + paddingRight + \",\" + (height / 4 * 3 + paddingTop)),\n          fill: \"url(#fillShadowGradient)\",\n          strokeWidth: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          }\n        });\n      });\n    };\n\n    _this.renderLine = function (config) {\n      if (_this.props.bezier) {\n        return _this.renderBezierLine(config);\n      }\n\n      var width = config.width,\n          height = config.height,\n          paddingRight = config.paddingRight,\n          paddingTop = config.paddingTop,\n          data = config.data;\n      var output = [];\n\n      var datas = _this.getDatas(data);\n\n      var baseHeight = _this.calcBaseHeight(datas, height);\n\n      data.forEach(function (dataset, index) {\n        var points = dataset.data.map(function (d, i) {\n          var x = i * (width - paddingRight) / dataset.data.length + paddingRight;\n          var y = (baseHeight - _this.calcHeight(d, datas, height)) / 4 * 3 + paddingTop;\n          return x + \",\" + y;\n        });\n        output.push(_react.default.createElement(_reactNativeSvg.Polyline, {\n          key: index,\n          points: points.join(\" \"),\n          fill: \"none\",\n          stroke: _this.getColor(dataset, 0.2),\n          strokeWidth: _this.getStrokeWidth(dataset),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          }\n        }));\n      });\n      return output;\n    };\n\n    _this.getBezierLinePoints = function (dataset, config) {\n      var width = config.width,\n          height = config.height,\n          paddingRight = config.paddingRight,\n          paddingTop = config.paddingTop,\n          data = config.data;\n\n      if (dataset.data.length === 0) {\n        return \"M0,0\";\n      }\n\n      var datas = _this.getDatas(data);\n\n      var x = function x(i) {\n        return Math.floor(paddingRight + i * (width - paddingRight) / dataset.data.length);\n      };\n\n      var baseHeight = _this.calcBaseHeight(datas, height);\n\n      var y = function y(i) {\n        var yHeight = _this.calcHeight(dataset.data[i], datas, height);\n\n        return Math.floor((baseHeight - yHeight) / 4 * 3 + paddingTop);\n      };\n\n      return [\"M\" + x(0) + \",\" + y(0)].concat(dataset.data.slice(0, -1).map(function (_, i) {\n        var x_mid = (x(i) + x(i + 1)) / 2;\n        var y_mid = (y(i) + y(i + 1)) / 2;\n        var cp_x1 = (x_mid + x(i)) / 2;\n        var cp_x2 = (x_mid + x(i + 1)) / 2;\n        return \"Q \" + cp_x1 + \", \" + y(i) + \", \" + x_mid + \", \" + y_mid + (\" Q \" + cp_x2 + \", \" + y(i + 1) + \", \" + x(i + 1) + \", \" + y(i + 1));\n      })).join(\" \");\n    };\n\n    _this.renderBezierLine = function (config) {\n      return config.data.map(function (dataset, index) {\n        var result = _this.getBezierLinePoints(dataset, config);\n\n        return _react.default.createElement(_reactNativeSvg.Path, {\n          key: index,\n          d: result,\n          fill: \"none\",\n          stroke: _this.getColor(dataset, 0.2),\n          strokeWidth: _this.getStrokeWidth(dataset),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          }\n        });\n      });\n    };\n\n    _this.renderBezierShadow = function (config) {\n      var width = config.width,\n          height = config.height,\n          paddingRight = config.paddingRight,\n          paddingTop = config.paddingTop,\n          data = config.data;\n      return data.map(function (dataset, index) {\n        var d = _this.getBezierLinePoints(dataset, config) + (\" L\" + (paddingRight + (width - paddingRight) / dataset.data.length * (dataset.data.length - 1)) + \",\" + (height / 4 * 3 + paddingTop) + \" L\" + paddingRight + \",\" + (height / 4 * 3 + paddingTop) + \" Z\");\n        return _react.default.createElement(_reactNativeSvg.Path, {\n          key: index,\n          d: d,\n          fill: \"url(#fillShadowGradient)\",\n          strokeWidth: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          }\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(LineChart, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          width = _this$props3.width,\n          height = _this$props3.height,\n          data = _this$props3.data,\n          _this$props3$withShad = _this$props3.withShadow,\n          withShadow = _this$props3$withShad === void 0 ? true : _this$props3$withShad,\n          _this$props3$withDots = _this$props3.withDots,\n          withDots = _this$props3$withDots === void 0 ? true : _this$props3$withDots,\n          _this$props3$withInne = _this$props3.withInnerLines,\n          withInnerLines = _this$props3$withInne === void 0 ? true : _this$props3$withInne,\n          _this$props3$withOute = _this$props3.withOuterLines,\n          withOuterLines = _this$props3$withOute === void 0 ? true : _this$props3$withOute,\n          _this$props3$withHori = _this$props3.withHorizontalLabels,\n          withHorizontalLabels = _this$props3$withHori === void 0 ? true : _this$props3$withHori,\n          _this$props3$withVert = _this$props3.withVerticalLabels,\n          withVerticalLabels = _this$props3$withVert === void 0 ? true : _this$props3$withVert,\n          _this$props3$style = _this$props3.style,\n          style = _this$props3$style === void 0 ? {} : _this$props3$style,\n          decorator = _this$props3.decorator,\n          onDataPointClick = _this$props3.onDataPointClick,\n          _this$props3$vertical = _this$props3.verticalLabelRotation,\n          verticalLabelRotation = _this$props3$vertical === void 0 ? 0 : _this$props3$vertical,\n          _this$props3$horizont = _this$props3.horizontalLabelRotation,\n          horizontalLabelRotation = _this$props3$horizont === void 0 ? 0 : _this$props3$horizont,\n          _this$props3$formatYL = _this$props3.formatYLabel,\n          formatYLabel = _this$props3$formatYL === void 0 ? function (yLabel) {\n        return yLabel;\n      } : _this$props3$formatYL,\n          _this$props3$formatXL = _this$props3.formatXLabel,\n          formatXLabel = _this$props3$formatXL === void 0 ? function (xLabel) {\n        return xLabel;\n      } : _this$props3$formatXL;\n      var _data$labels = data.labels,\n          labels = _data$labels === void 0 ? [] : _data$labels;\n      var _style$borderRadius = style.borderRadius,\n          borderRadius = _style$borderRadius === void 0 ? 0 : _style$borderRadius,\n          _style$paddingTop = style.paddingTop,\n          paddingTop = _style$paddingTop === void 0 ? 16 : _style$paddingTop,\n          _style$paddingRight = style.paddingRight,\n          paddingRight = _style$paddingRight === void 0 ? 64 : _style$paddingRight;\n      var config = {\n        width: width,\n        height: height,\n        verticalLabelRotation: verticalLabelRotation,\n        horizontalLabelRotation: horizontalLabelRotation\n      };\n      var datas = this.getDatas(data.datasets);\n      return _react.default.createElement(_reactNative.View, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        }\n      }, _react.default.createElement(_reactNativeSvg.Svg, {\n        height: height,\n        width: width - width / data.datasets[0].data.length + paddingRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        }\n      }, _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        }\n      }, this.renderDefs(_objectSpread({}, config, {}, this.props.chartConfig)), _react.default.createElement(_reactNativeSvg.Rect, {\n        width: \"100%\",\n        height: height,\n        rx: borderRadius,\n        ry: borderRadius,\n        fill: \"url(#backgroundGradient)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        }\n      }), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        }\n      }, withInnerLines ? this.renderHorizontalLines(_objectSpread({}, config, {\n        count: 4,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })) : withOuterLines ? this.renderHorizontalLine(_objectSpread({}, config, {\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })) : null), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        }\n      }, withHorizontalLabels ? this.renderHorizontalLabels(_objectSpread({}, config, {\n        count: Math.min.apply(Math, (0, _toConsumableArray2.default)(datas)) === Math.max.apply(Math, (0, _toConsumableArray2.default)(datas)) ? 1 : 4,\n        data: datas,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight,\n        formatYLabel: formatYLabel\n      })) : null), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        }\n      }, withInnerLines ? this.renderVerticalLines(_objectSpread({}, config, {\n        data: data.datasets[0].data,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })) : withOuterLines ? this.renderVerticalLine(_objectSpread({}, config, {\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })) : null), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        }\n      }, withVerticalLabels ? this.renderVerticalLabels(_objectSpread({}, config, {\n        labels: labels,\n        paddingRight: paddingRight,\n        paddingTop: paddingTop,\n        formatXLabel: formatXLabel\n      })) : null), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        }\n      }, this.renderLine(_objectSpread({}, config, {\n        paddingRight: paddingRight,\n        paddingTop: paddingTop,\n        data: data.datasets\n      }))), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        }\n      }, withShadow && this.renderShadow(_objectSpread({}, config, {\n        data: data.datasets,\n        paddingRight: paddingRight,\n        paddingTop: paddingTop\n      }))), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        }\n      }, withDots && this.renderDots(_objectSpread({}, config, {\n        data: data.datasets,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight,\n        onDataPointClick: onDataPointClick\n      }))), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        }\n      }, decorator && decorator(_objectSpread({}, config, {\n        data: data.datasets,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      }))))));\n    }\n  }]);\n  return LineChart;\n}(_abstractChart.default);\n\nvar _default = LineChart;\nexports.default = _default;","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/node_modules/react-native-chart-kit/src/line-chart.js"],"names":["LineChart","getColor","dataset","opacity","color","props","chartConfig","getStrokeWidth","strokeWidth","getDatas","data","reduce","acc","item","getPropsForDots","x","i","getDotProps","propsForDots","r","renderDots","config","width","height","paddingTop","paddingRight","onDataPointClick","output","datas","baseHeight","calcBaseHeight","getDotColor","hidePointsAtIndex","forEach","includes","cx","length","cy","calcHeight","onPress","index","value","y","push","Math","random","renderShadow","bezier","renderBezierShadow","map","d","join","renderLine","renderBezierLine","points","getBezierLinePoints","floor","yHeight","concat","slice","_","x_mid","y_mid","cp_x1","cp_x2","result","withShadow","withDots","withInnerLines","withOuterLines","withHorizontalLabels","withVerticalLabels","style","decorator","verticalLabelRotation","horizontalLabelRotation","formatYLabel","yLabel","formatXLabel","xLabel","labels","borderRadius","datasets","renderDefs","renderHorizontalLines","count","renderHorizontalLine","renderHorizontalLabels","min","max","renderVerticalLines","renderVerticalLine","renderVerticalLabels","AbstractChart"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View } from \"react-native\";\nimport {\n  Svg,\n  Circle,\n  Polygon,\n  Polyline,\n  Path,\n  Rect,\n  G\n} from \"react-native-svg\";\nimport AbstractChart from \"./abstract-chart\";\n\nclass LineChart extends AbstractChart {\n  getColor = (dataset, opacity) => {\n    return (dataset.color || this.props.chartConfig.color)(opacity);\n  };\n\n  getStrokeWidth = dataset => {\n    return dataset.strokeWidth || this.props.chartConfig.strokeWidth || 3;\n  };\n\n  getDatas = data =>\n    data.reduce((acc, item) => (item.data ? [...acc, ...item.data] : acc), []);\n\n  getPropsForDots = (x, i) => {\n    const { getDotProps, chartConfig = {} } = this.props;\n    if (typeof getDotProps === \"function\") {\n      return getDotProps(x, i);\n    }\n    const { propsForDots = {} } = chartConfig;\n    return { r: \"4\", ...propsForDots };\n  };\n  renderDots = config => {\n    const {\n      data,\n      width,\n      height,\n      paddingTop,\n      paddingRight,\n      onDataPointClick\n    } = config;\n    const output = [];\n    const datas = this.getDatas(data);\n    const baseHeight = this.calcBaseHeight(datas, height);\n    const { getDotColor, hidePointsAtIndex = [] } = this.props;\n    data.forEach(dataset => {\n      dataset.data.forEach((x, i) => {\n        if (hidePointsAtIndex.includes(i)) {\n          return;\n        }\n        const cx =\n          paddingRight + (i * (width - paddingRight)) / dataset.data.length;\n        const cy =\n          ((baseHeight - this.calcHeight(x, datas, height)) / 4) * 3 +\n          paddingTop;\n        const onPress = () => {\n          if (!onDataPointClick || hidePointsAtIndex.includes(i)) {\n            return;\n          }\n\n          onDataPointClick({\n            index: i,\n            value: x,\n            dataset,\n            x: cx,\n            y: cy,\n            getColor: opacity => this.getColor(dataset, opacity)\n          });\n        };\n\n        output.push(\n          <Circle\n            key={Math.random()}\n            cx={cx}\n            cy={cy}\n            fill={\n              typeof getDotColor === \"function\"\n                ? getDotColor(x, i)\n                : this.getColor(dataset, 0.9)\n            }\n            onPress={onPress}\n            {...this.getPropsForDots(x, i)}\n          />,\n          <Circle\n            key={Math.random()}\n            cx={cx}\n            cy={cy}\n            r=\"12\"\n            fill=\"#fff\"\n            fillOpacity={0}\n            onPress={onPress}\n          />\n        );\n      });\n    });\n    return output;\n  };\n\n  renderShadow = config => {\n    if (this.props.bezier) {\n      return this.renderBezierShadow(config);\n    }\n\n    const { data, width, height, paddingRight, paddingTop } = config;\n    const datas = this.getDatas(data);\n    const baseHeight = this.calcBaseHeight(datas, height);\n    return config.data.map((dataset, index) => {\n      return (\n        <Polygon\n          key={index}\n          points={\n            dataset.data\n              .map((d, i) => {\n                const x =\n                  paddingRight +\n                  (i * (width - paddingRight)) / dataset.data.length;\n                const y =\n                  ((baseHeight - this.calcHeight(d, datas, height)) / 4) * 3 +\n                  paddingTop;\n                return `${x},${y}`;\n              })\n              .join(\" \") +\n            ` ${paddingRight +\n              ((width - paddingRight) / dataset.data.length) *\n                (dataset.data.length - 1)},${(height / 4) * 3 +\n              paddingTop} ${paddingRight},${(height / 4) * 3 + paddingTop}`\n          }\n          fill=\"url(#fillShadowGradient)\"\n          strokeWidth={0}\n        />\n      );\n    });\n  };\n\n  renderLine = config => {\n    if (this.props.bezier) {\n      return this.renderBezierLine(config);\n    }\n\n    const { width, height, paddingRight, paddingTop, data } = config;\n    const output = [];\n    const datas = this.getDatas(data);\n    const baseHeight = this.calcBaseHeight(datas, height);\n    data.forEach((dataset, index) => {\n      const points = dataset.data.map((d, i) => {\n        const x =\n          (i * (width - paddingRight)) / dataset.data.length + paddingRight;\n        const y =\n          ((baseHeight - this.calcHeight(d, datas, height)) / 4) * 3 +\n          paddingTop;\n        return `${x},${y}`;\n      });\n\n      output.push(\n        <Polyline\n          key={index}\n          points={points.join(\" \")}\n          fill=\"none\"\n          stroke={this.getColor(dataset, 0.2)}\n          strokeWidth={this.getStrokeWidth(dataset)}\n        />\n      );\n    });\n\n    return output;\n  };\n\n  getBezierLinePoints = (dataset, config) => {\n    const { width, height, paddingRight, paddingTop, data } = config;\n    if (dataset.data.length === 0) {\n      return \"M0,0\";\n    }\n\n    const datas = this.getDatas(data);\n    const x = i =>\n      Math.floor(\n        paddingRight + (i * (width - paddingRight)) / dataset.data.length\n      );\n    const baseHeight = this.calcBaseHeight(datas, height);\n    const y = i => {\n      const yHeight = this.calcHeight(dataset.data[i], datas, height);\n      return Math.floor(((baseHeight - yHeight) / 4) * 3 + paddingTop);\n    };\n\n    return [`M${x(0)},${y(0)}`]\n      .concat(\n        dataset.data.slice(0, -1).map((_, i) => {\n          const x_mid = (x(i) + x(i + 1)) / 2;\n          const y_mid = (y(i) + y(i + 1)) / 2;\n          const cp_x1 = (x_mid + x(i)) / 2;\n          const cp_x2 = (x_mid + x(i + 1)) / 2;\n          return (\n            `Q ${cp_x1}, ${y(i)}, ${x_mid}, ${y_mid}` +\n            ` Q ${cp_x2}, ${y(i + 1)}, ${x(i + 1)}, ${y(i + 1)}`\n          );\n        })\n      )\n      .join(\" \");\n  };\n\n  renderBezierLine = config => {\n    return config.data.map((dataset, index) => {\n      const result = this.getBezierLinePoints(dataset, config);\n      return (\n        <Path\n          key={index}\n          d={result}\n          fill=\"none\"\n          stroke={this.getColor(dataset, 0.2)}\n          strokeWidth={this.getStrokeWidth(dataset)}\n        />\n      );\n    });\n  };\n\n  renderBezierShadow = config => {\n    const { width, height, paddingRight, paddingTop, data } = config;\n    return data.map((dataset, index) => {\n      const d =\n        this.getBezierLinePoints(dataset, config) +\n        ` L${paddingRight +\n          ((width - paddingRight) / dataset.data.length) *\n            (dataset.data.length - 1)},${(height / 4) * 3 +\n          paddingTop} L${paddingRight},${(height / 4) * 3 + paddingTop} Z`;\n      return (\n        <Path\n          key={index}\n          d={d}\n          fill=\"url(#fillShadowGradient)\"\n          strokeWidth={0}\n        />\n      );\n    });\n  };\n\n  render() {\n    const {\n      width,\n      height,\n      data,\n      withShadow = true,\n      withDots = true,\n      withInnerLines = true,\n      withOuterLines = true,\n      withHorizontalLabels = true,\n      withVerticalLabels = true,\n      style = {},\n      decorator,\n      onDataPointClick,\n      verticalLabelRotation = 0,\n      horizontalLabelRotation = 0,\n      formatYLabel = yLabel => yLabel,\n      formatXLabel = xLabel => xLabel\n    } = this.props;\n    const { labels = [] } = data;\n    const { borderRadius = 0, paddingTop = 16, paddingRight = 64 } = style;\n    const config = {\n      width,\n      height,\n      verticalLabelRotation,\n      horizontalLabelRotation\n    };\n    const datas = this.getDatas(data.datasets);\n    return (\n      <View style={style}>\n        <Svg\n          height={height}\n          width={width - width / data.datasets[0].data.length + paddingRight}\n        >\n          <G>\n            {this.renderDefs({\n              ...config,\n              ...this.props.chartConfig\n            })}\n            <Rect\n              width=\"100%\"\n              height={height}\n              rx={borderRadius}\n              ry={borderRadius}\n              fill=\"url(#backgroundGradient)\"\n            />\n            <G>\n              {withInnerLines\n                ? this.renderHorizontalLines({\n                    ...config,\n                    count: 4,\n                    paddingTop,\n                    paddingRight\n                  })\n                : withOuterLines\n                ? this.renderHorizontalLine({\n                    ...config,\n                    paddingTop,\n                    paddingRight\n                  })\n                : null}\n            </G>\n            <G>\n              {withHorizontalLabels\n                ? this.renderHorizontalLabels({\n                    ...config,\n                    count: Math.min(...datas) === Math.max(...datas) ? 1 : 4,\n                    data: datas,\n                    paddingTop,\n                    paddingRight,\n                    formatYLabel\n                  })\n                : null}\n            </G>\n            <G>\n              {withInnerLines\n                ? this.renderVerticalLines({\n                    ...config,\n                    data: data.datasets[0].data,\n                    paddingTop,\n                    paddingRight\n                  })\n                : withOuterLines\n                ? this.renderVerticalLine({\n                    ...config,\n                    paddingTop,\n                    paddingRight\n                  })\n                : null}\n            </G>\n            <G>\n              {withVerticalLabels\n                ? this.renderVerticalLabels({\n                    ...config,\n                    labels,\n                    paddingRight,\n                    paddingTop,\n                    formatXLabel\n                  })\n                : null}\n            </G>\n            <G>\n              {this.renderLine({\n                ...config,\n                paddingRight,\n                paddingTop,\n                data: data.datasets\n              })}\n            </G>\n            <G>\n              {withShadow &&\n                this.renderShadow({\n                  ...config,\n                  data: data.datasets,\n                  paddingRight,\n                  paddingTop\n                })}\n            </G>\n            <G>\n              {withDots &&\n                this.renderDots({\n                  ...config,\n                  data: data.datasets,\n                  paddingTop,\n                  paddingRight,\n                  onDataPointClick\n                })}\n            </G>\n            <G>\n              {decorator &&\n                decorator({\n                  ...config,\n                  data: data.datasets,\n                  paddingTop,\n                  paddingRight\n                })}\n            </G>\n          </G>\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"script"}