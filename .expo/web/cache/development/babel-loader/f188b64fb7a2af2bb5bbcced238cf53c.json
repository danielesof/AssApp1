{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSvg = require(\"react-native-svg\");\n\nvar _abstractChart = _interopRequireDefault(require(\"./abstract-chart\"));\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/node_modules/react-native-chart-kit/src/bar-chart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar barWidth = 32;\n\nvar BarChart = function (_AbstractChart) {\n  (0, _inherits2.default)(BarChart, _AbstractChart);\n\n  function BarChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, BarChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(BarChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getBarPercentage = function () {\n      var _this$props$chartConf = _this.props.chartConfig.barPercentage,\n          barPercentage = _this$props$chartConf === void 0 ? 1 : _this$props$chartConf;\n      return barPercentage;\n    };\n\n    _this.renderBars = function (config) {\n      var data = config.data,\n          width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight;\n\n      var baseHeight = _this.calcBaseHeight(data, height);\n\n      return data.map(function (x, i) {\n        var barHeight = _this.calcHeight(x, data, height);\n\n        var barWidth = 32 * _this.getBarPercentage();\n\n        return _react.default.createElement(_reactNativeSvg.Rect, {\n          key: Math.random(),\n          x: paddingRight + i * (width - paddingRight) / data.length + barWidth / 2,\n          y: (barHeight > 0 ? baseHeight - barHeight : baseHeight) / 4 * 3 + paddingTop,\n          width: barWidth,\n          height: Math.abs(barHeight) / 4 * 3,\n          fill: \"url(#fillShadowGradient)\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          }\n        });\n      });\n    };\n\n    _this.renderBarTops = function (config) {\n      var data = config.data,\n          width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight;\n\n      var baseHeight = _this.calcBaseHeight(data, height);\n\n      return data.map(function (x, i) {\n        var barHeight = _this.calcHeight(x, data, height);\n\n        var barWidth = 32 * _this.getBarPercentage();\n\n        return _react.default.createElement(_reactNativeSvg.Rect, {\n          key: Math.random(),\n          x: paddingRight + i * (width - paddingRight) / data.length + barWidth / 2,\n          y: (baseHeight - barHeight) / 4 * 3 + paddingTop,\n          width: barWidth,\n          height: 2,\n          fill: _this.props.chartConfig.color(0.6),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          }\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(BarChart, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          width = _this$props.width,\n          height = _this$props.height,\n          data = _this$props.data,\n          _this$props$style = _this$props.style,\n          style = _this$props$style === void 0 ? {} : _this$props$style,\n          _this$props$withHoriz = _this$props.withHorizontalLabels,\n          withHorizontalLabels = _this$props$withHoriz === void 0 ? true : _this$props$withHoriz,\n          _this$props$withVerti = _this$props.withVerticalLabels,\n          withVerticalLabels = _this$props$withVerti === void 0 ? true : _this$props$withVerti,\n          _this$props$verticalL = _this$props.verticalLabelRotation,\n          verticalLabelRotation = _this$props$verticalL === void 0 ? 0 : _this$props$verticalL,\n          _this$props$horizonta = _this$props.horizontalLabelRotation,\n          horizontalLabelRotation = _this$props$horizonta === void 0 ? 0 : _this$props$horizonta,\n          _this$props$withInner = _this$props.withInnerLines,\n          withInnerLines = _this$props$withInner === void 0 ? true : _this$props$withInner;\n      var _style$borderRadius = style.borderRadius,\n          borderRadius = _style$borderRadius === void 0 ? 0 : _style$borderRadius,\n          _style$paddingTop = style.paddingTop,\n          paddingTop = _style$paddingTop === void 0 ? 16 : _style$paddingTop,\n          _style$paddingRight = style.paddingRight,\n          paddingRight = _style$paddingRight === void 0 ? 64 : _style$paddingRight;\n      var config = {\n        width: width,\n        height: height,\n        verticalLabelRotation: verticalLabelRotation,\n        horizontalLabelRotation: horizontalLabelRotation\n      };\n      return _react.default.createElement(_reactNative.View, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        }\n      }, _react.default.createElement(_reactNativeSvg.Svg, {\n        height: height,\n        width: width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      }, this.renderDefs(_objectSpread({}, config, {}, this.props.chartConfig)), _react.default.createElement(_reactNativeSvg.Rect, {\n        width: \"100%\",\n        height: height,\n        rx: borderRadius,\n        ry: borderRadius,\n        fill: \"url(#backgroundGradient)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      }), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        }\n      }, withInnerLines ? this.renderHorizontalLines(_objectSpread({}, config, {\n        count: 4,\n        paddingTop: paddingTop\n      })) : null), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        }\n      }, withHorizontalLabels ? this.renderHorizontalLabels(_objectSpread({}, config, {\n        count: 4,\n        data: data.datasets[0].data,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })) : null), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        }\n      }, withVerticalLabels ? this.renderVerticalLabels(_objectSpread({}, config, {\n        labels: data.labels,\n        paddingRight: paddingRight,\n        paddingTop: paddingTop,\n        horizontalOffset: barWidth * this.getBarPercentage()\n      })) : null), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        }\n      }, this.renderBars(_objectSpread({}, config, {\n        data: data.datasets[0].data,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      }))), _react.default.createElement(_reactNativeSvg.G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        }\n      }, this.renderBarTops(_objectSpread({}, config, {\n        data: data.datasets[0].data,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })))));\n    }\n  }]);\n  return BarChart;\n}(_abstractChart.default);\n\nvar _default = BarChart;\nexports.default = _default;","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/node_modules/react-native-chart-kit/src/bar-chart.js"],"names":["barWidth","BarChart","getBarPercentage","props","chartConfig","barPercentage","renderBars","config","data","width","height","paddingTop","paddingRight","baseHeight","calcBaseHeight","map","x","i","barHeight","calcHeight","Math","random","length","abs","renderBarTops","color","style","withHorizontalLabels","withVerticalLabels","verticalLabelRotation","horizontalLabelRotation","withInnerLines","borderRadius","renderDefs","renderHorizontalLines","count","renderHorizontalLabels","datasets","renderVerticalLabels","labels","horizontalOffset","AbstractChart"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View } from \"react-native\";\nimport { Svg, Rect, G } from \"react-native-svg\";\nimport AbstractChart from \"./abstract-chart\";\n\nconst barWidth = 32;\n\nclass BarChart extends AbstractChart {\n  getBarPercentage = () => {\n    const { barPercentage = 1 } = this.props.chartConfig;\n    return barPercentage;\n  };\n\n  renderBars = config => {\n    const { data, width, height, paddingTop, paddingRight } = config;\n    const baseHeight = this.calcBaseHeight(data, height);\n    return data.map((x, i) => {\n      const barHeight = this.calcHeight(x, data, height);\n      const barWidth = 32 * this.getBarPercentage();\n      return (\n        <Rect\n          key={Math.random()}\n          x={\n            paddingRight +\n            (i * (width - paddingRight)) / data.length +\n            barWidth / 2\n          }\n          y={\n            ((barHeight > 0 ? baseHeight - barHeight : baseHeight) / 4) * 3 +\n            paddingTop\n          }\n          width={barWidth}\n          height={(Math.abs(barHeight) / 4) * 3}\n          fill=\"url(#fillShadowGradient)\"\n        />\n      );\n    });\n  };\n\n  renderBarTops = config => {\n    const { data, width, height, paddingTop, paddingRight } = config;\n    const baseHeight = this.calcBaseHeight(data, height);\n    return data.map((x, i) => {\n      const barHeight = this.calcHeight(x, data, height);\n      const barWidth = 32 * this.getBarPercentage();\n      return (\n        <Rect\n          key={Math.random()}\n          x={\n            paddingRight +\n            (i * (width - paddingRight)) / data.length +\n            barWidth / 2\n          }\n          y={((baseHeight - barHeight) / 4) * 3 + paddingTop}\n          width={barWidth}\n          height={2}\n          fill={this.props.chartConfig.color(0.6)}\n        />\n      );\n    });\n  };\n\n  render() {\n    const {\n      width,\n      height,\n      data,\n      style = {},\n      withHorizontalLabels = true,\n      withVerticalLabels = true,\n      verticalLabelRotation = 0,\n      horizontalLabelRotation = 0,\n      withInnerLines = true\n    } = this.props;\n    const { borderRadius = 0, paddingTop = 16, paddingRight = 64 } = style;\n    const config = {\n      width,\n      height,\n      verticalLabelRotation,\n      horizontalLabelRotation\n    };\n    return (\n      <View style={style}>\n        <Svg height={height} width={width}>\n          {this.renderDefs({\n            ...config,\n            ...this.props.chartConfig\n          })}\n          <Rect\n            width=\"100%\"\n            height={height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill=\"url(#backgroundGradient)\"\n          />\n          <G>\n            {withInnerLines\n              ? this.renderHorizontalLines({\n                  ...config,\n                  count: 4,\n                  paddingTop\n                })\n              : null}\n          </G>\n          <G>\n            {withHorizontalLabels\n              ? this.renderHorizontalLabels({\n                  ...config,\n                  count: 4,\n                  data: data.datasets[0].data,\n                  paddingTop,\n                  paddingRight\n                })\n              : null}\n          </G>\n          <G>\n            {withVerticalLabels\n              ? this.renderVerticalLabels({\n                  ...config,\n                  labels: data.labels,\n                  paddingRight,\n                  paddingTop,\n                  horizontalOffset: barWidth * this.getBarPercentage()\n                })\n              : null}\n          </G>\n          <G>\n            {this.renderBars({\n              ...config,\n              data: data.datasets[0].data,\n              paddingTop,\n              paddingRight\n            })}\n          </G>\n          <G>\n            {this.renderBarTops({\n              ...config,\n              data: data.datasets[0].data,\n              paddingTop,\n              paddingRight\n            })}\n          </G>\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"script"}