{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnavailabilityError = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _Platform = _interopRequireDefault(require(\"../Platform\"));\n\nvar _CodedError2 = require(\"./CodedError\");\n\nvar UnavailabilityError = function (_CodedError) {\n  (0, _inherits2.default)(UnavailabilityError, _CodedError);\n\n  function UnavailabilityError(moduleName, propertyName) {\n    (0, _classCallCheck2.default)(this, UnavailabilityError);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(UnavailabilityError).call(this, 'ERR_UNAVAILABLE', \"The method or property \" + moduleName + \".\" + propertyName + \" is not available on \" + _Platform.default.OS + \", are you sure you've linked all the native dependencies properly?\"));\n  }\n\n  return UnavailabilityError;\n}(_CodedError2.CodedError);\n\nexports.UnavailabilityError = UnavailabilityError;","map":{"version":3,"sources":["../../src/errors/UnavailabilityError.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;IAOa,mB;;;AACX,+BAAY,UAAZ,EAAgC,YAAhC,EAAoD;AAAA;AAAA,wHAEhD,iBAFgD,8BAGtB,UAHsB,SAGR,YAHQ,6BAG4B,kBAAS,EAHrC;AAKnD;;;EANsC,uB","sourcesContent":["import Platform from '../Platform';\nimport { CodedError } from './CodedError';\n\n/**\n * A class for errors to be thrown when a property is accessed which is\n * unavailable, unsupported, or not currently implemented on the running\n * platform.\n */\nexport class UnavailabilityError extends CodedError {\n  constructor(moduleName: string, propertyName: string) {\n    super(\n      'ERR_UNAVAILABLE',\n      `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}