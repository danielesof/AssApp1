{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _reactNativeModal = _interopRequireDefault(require(\"react-native-modal\"));\n\nvar _CreateCommentScreen = _interopRequireDefault(require(\"../CreateComment/CreateCommentScreen\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Comment/CommentScreen.js\";\n\nvar CommentScreen = function (_React$Component) {\n  (0, _inherits2.default)(CommentScreen, _React$Component);\n\n  function CommentScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CommentScreen);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CommentScreen).call(this, props));\n\n    _this.toggleModal = function () {\n      _this.setState({\n        visibleModal: null\n      });\n    };\n\n    _this.renderComment = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return _react.default.createElement(_reactNative.View, {\n        style: index == 0 ? _styles.default.commentContainerBorderless : _styles.default.commentContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.rowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.authorImg,\n        source: {\n          uri: item.authorPhoto\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: {\n          alignSelf: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.authorName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }, item.authorName), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        }\n      }, item.time))), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.commentText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      }, item.text));\n    };\n\n    _this.state = {\n      visibleModalId: null\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(CommentScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      var params = navigation.state.params;\n      var userPhoto = navigation.getParam('userPhoto');\n      var itemId = navigation.getParam('itemId');\n      var item = this.props.posts[itemId];\n      return _react.default.createElement(_reactNative.ScrollView, {\n        style: _styles.default.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.postContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.rowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.authorImg,\n        source: {\n          uri: item.authorImg\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: {\n          alignSelf: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.authorName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      }, item.author), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      }, item.time))), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.postTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        }\n      }, item.title), _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.postImg,\n        source: {\n          uri: item.photoUrl\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.likesContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        }\n      }, _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: function onPress() {\n          return params.onPressLike(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.icon,\n        source: item.liked ? require('../../../assets/icons/fillLike.png') : require('../../../assets/icons/like.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        }\n      })), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.iconText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }, item.likes), _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.icon,\n        source: require('../../../assets/icons/comments.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.iconText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        }\n      }, item.comments.length)))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.commentsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.commentTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        }\n      }, \"Comments\"), _react.default.createElement(_reactNative.View, {\n        style: {\n          marginBottom: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        data: item.comments,\n        renderItem: this.renderComment,\n        extraData: this.state,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.id;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        }\n      }))), _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        style: _styles.default.writeCommentContainer,\n        onPress: function onPress() {\n          return _this2.setState({\n            visibleModal: 'swipeable'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.writeCommentText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        }\n      }, \"Write comment...\")), _react.default.createElement(_reactNativeModal.default, {\n        isVisible: this.state.visibleModal === 'swipeable',\n        onSwipeComplete: function onSwipeComplete() {\n          return _this2.setState({\n            visibleModal: null\n          });\n        },\n        swipeDirection: ['down'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        }\n      }, _react.default.createElement(_CreateCommentScreen.default, {\n        userPhoto: userPhoto,\n        onPressPostComment: params.onPressPostComment,\n        postId: item.id,\n        toggleModal: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        }\n      })));\n    }\n  }]);\n  return CommentScreen;\n}(_react.default.Component);\n\nCommentScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    headerStyle: {\n      backgroundColor: '#ffffff',\n      elevation: 0,\n      shadowColor: 'transparent',\n      borderBottomWidth: 0\n    }\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.community.posts\n  };\n}\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps)(CommentScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Comment/CommentScreen.js"],"names":["CommentScreen","props","toggleModal","setState","visibleModal","renderComment","item","index","styles","commentContainerBorderless","commentContainer","rowContainer","authorImg","uri","authorPhoto","alignSelf","authorName","date","time","commentText","text","state","visibleModalId","navigation","params","userPhoto","getParam","itemId","posts","container","postContainer","author","postTitle","title","postImg","photoUrl","likesContainer","onPressLike","id","icon","liked","require","iconText","likes","comments","length","commentsContainer","commentTitle","marginBottom","writeCommentContainer","writeCommentText","onPressPostComment","React","Component","navigationOptions","headerStyle","backgroundColor","elevation","shadowColor","borderBottomWidth","mapStateToProps","community"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableHighlight, Image, ScrollView, FlatList } from 'react-native';\nimport styles from './styles';\nimport Modal from 'react-native-modal';\nimport CreateCommentScreen from '../CreateComment/CreateCommentScreen';\nimport { connect } from 'react-redux';\n\nclass CommentScreen extends React.Component {\n  static navigationOptions = ({ navigation }) => ({\n    headerStyle: {\n      backgroundColor: '#ffffff',\n      elevation: 0,\n      shadowColor: 'transparent',\n      borderBottomWidth: 0\n    }\n  });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      visibleModalId: null\n    };\n  }\n\n  toggleModal = () => {\n    this.setState({\n      visibleModal: null\n    });\n  };\n\n  renderComment = ({ item, index }) => (\n    <View style={index == 0 ? styles.commentContainerBorderless : styles.commentContainer}>\n      <View style={styles.rowContainer}>\n        <Image style={styles.authorImg} source={{ uri: item.authorPhoto }} />\n        <View style={{ alignSelf: 'center' }}>\n          <Text style={styles.authorName}>{item.authorName}</Text>\n          <Text style={styles.date}>{item.time}</Text>\n        </View>\n      </View>\n      <Text style={styles.commentText}>{item.text}</Text>\n    </View>\n  );\n\n  render() {\n    const { navigation } = this.props;\n    const { params } = navigation.state;\n    const userPhoto = navigation.getParam('userPhoto');\n    const itemId = navigation.getParam('itemId');\n    const item = this.props.posts[itemId];\n\n    return (\n      <ScrollView style={styles.container}>\n        <View style={styles.postContainer}>\n          <View>\n            <View style={styles.rowContainer}>\n              <Image style={styles.authorImg} source={{ uri: item.authorImg }} />\n              <View style={{ alignSelf: 'center' }}>\n                <Text style={styles.authorName}>{item.author}</Text>\n                <Text style={styles.date}>{item.time}</Text>\n              </View>\n            </View>\n            <Text style={styles.postTitle}>{item.title}</Text>\n            <Image style={styles.postImg} source={{ uri: item.photoUrl }} />\n            <View style={styles.likesContainer}>\n              <TouchableHighlight\n                underlayColor=\"rgba(73,182,77,1,0.9)\"\n                onPress={() => params.onPressLike(item.id)}\n              >\n                <Image\n                  style={styles.icon}\n                  source={\n                    item.liked\n                      ? require('../../../assets/icons/fillLike.png')\n                      : require('../../../assets/icons/like.png')\n                  }\n                />\n              </TouchableHighlight>\n              <Text style={styles.iconText}>{item.likes}</Text>\n              <Image style={styles.icon} source={require('../../../assets/icons/comments.png')} />\n              <Text style={styles.iconText}>{item.comments.length}</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.commentsContainer}>\n          <Text style={styles.commentTitle}>Comments</Text>\n          <View style={{ marginBottom: 100 }}>\n            <FlatList\n              vertical\n              showsVerticalScrollIndicator={false}\n              data={item.comments}\n              renderItem={this.renderComment}\n              extraData={this.state}\n              keyExtractor={item => `${item.id}`}\n            />\n          </View>\n        </View>\n        <TouchableHighlight\n          underlayColor=\"rgba(73,182,77,1,0.9)\"\n          style={styles.writeCommentContainer}\n          onPress={() => this.setState({ visibleModal: 'swipeable' })}\n        >\n          <Text style={styles.writeCommentText}>Write comment...</Text>\n        </TouchableHighlight>\n        <Modal\n          isVisible={this.state.visibleModal === 'swipeable'}\n          onSwipeComplete={() => this.setState({ visibleModal: null })}\n          swipeDirection={['down']}\n        >\n          <CreateCommentScreen\n            userPhoto={userPhoto}\n            onPressPostComment={params.onPressPostComment}\n            postId={item.id}\n            toggleModal={this.toggleModal}\n          />\n        </Modal>\n      </ScrollView>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.community.posts\n  };\n}\n\nexport default connect(mapStateToProps)(CommentScreen);\n"]},"metadata":{},"sourceType":"script"}