{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _MenuImage = _interopRequireDefault(require(\"../../components/MenuImage/MenuImage\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Notifications/NotificationsScreeen.js\";\n\nvar NotificationsScreen = function (_React$Component) {\n  (0, _inherits2.default)(NotificationsScreen, _React$Component);\n\n  function NotificationsScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, NotificationsScreen);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NotificationsScreen).call(this, props));\n\n    _this.countUnreadNotifications = function () {\n      var count = 0;\n\n      _this.props.notifications.map(function (data) {\n        if (!data.read) {\n          count += 1;\n        }\n      });\n\n      return count;\n    };\n\n    _this.renderUnreadMark = function (read) {\n      if (!read) return _react.default.createElement(_reactNative.View, {\n        style: _styles.default.unreadMark,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        }\n      });\n    };\n\n    _this.renderNotification = function (_ref) {\n      var item = _ref.item;\n      return _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: _styles.default.notificationContainer,\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: function onPress() {\n          return _this.props.update(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.rowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.authorImg,\n        source: {\n          uri: item.authorImg\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: {\n          alignSelf: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.authorName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        }\n      }, item.authorName, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.notificationText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        }\n      }, \" \", item.text)))), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.notificationTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      }, item.time), _this.renderUnreadMark(item.read)));\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(NotificationsScreen, [{\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactNative.ScrollView, {\n        style: _styles.default.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        }\n      }, \"Notifications\"), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.secText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        }\n      }, this.countUnreadNotifications(), \" unread notifications\")), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.notificationsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        data: this.props.notifications,\n        renderItem: this.renderNotification,\n        extraData: this.state,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.id;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        }\n      })));\n    }\n  }]);\n  return NotificationsScreen;\n}(_react.default.Component);\n\nNotificationsScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    headerStyle: {\n      backgroundColor: '#F4F6FA',\n      elevation: 0,\n      shadowColor: 'transparent',\n      borderBottomWidth: 0\n    },\n    headerLeft: _react.default.createElement(_MenuImage.default, {\n      onPress: function onPress() {\n        navigation.openDrawer();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      }\n    })\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    update: function update(id) {\n      return dispatch({\n        type: 'UPDATE_NOTIFICATIONS',\n        id: id\n      });\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    notifications: state.notification.notifications\n  };\n}\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(NotificationsScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Notifications/NotificationsScreeen.js"],"names":["NotificationsScreen","props","countUnreadNotifications","count","notifications","map","data","read","renderUnreadMark","styles","unreadMark","renderNotification","item","notificationContainer","update","id","rowContainer","authorImg","uri","alignSelf","authorName","notificationText","text","notificationTime","time","container","header","title","secText","notificationsContainer","state","React","Component","navigationOptions","navigation","headerStyle","backgroundColor","elevation","shadowColor","borderBottomWidth","headerLeft","openDrawer","mapDispatchToProps","dispatch","type","mapStateToProps","notification"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableHighlight, Image, ScrollView, FlatList } from 'react-native';\nimport MenuImage from '../../components/MenuImage/MenuImage';\nimport styles from './styles';\nimport { connect } from 'react-redux';\n\nclass NotificationsScreen extends React.Component {\n  static navigationOptions = ({ navigation }) => ({\n    headerStyle: {\n      backgroundColor: '#F4F6FA',\n      elevation: 0,\n      shadowColor: 'transparent',\n      borderBottomWidth: 0\n    },\n    headerLeft: (\n      <MenuImage\n        onPress={() => {\n          navigation.openDrawer();\n        }}\n      />\n    )\n  });\n\n  constructor(props) {\n    super(props);\n  }\n\n  countUnreadNotifications = () => {\n    var count = 0;\n    this.props.notifications.map(data => {\n      if (!data.read) {\n        count += 1;\n      }\n    });\n    return count;\n  };\n\n  renderUnreadMark = read => {\n    if (!read) return <View style={styles.unreadMark}></View>;\n  };\n\n  renderNotification = ({ item }) => (\n    <TouchableHighlight\n      style={styles.notificationContainer}\n      underlayColor=\"rgba(73,182,77,1,0.9)\"\n      onPress={() => this.props.update(item.id)}\n    >\n      <View>\n        <View style={styles.rowContainer}>\n          <Image style={styles.authorImg} source={{ uri: item.authorImg }} />\n          <View style={{ alignSelf: 'center' }}>\n            <Text style={styles.authorName}>\n              {item.authorName}\n              <Text style={styles.notificationText}> {item.text}</Text>\n            </Text>\n          </View>\n        </View>\n        <Text style={styles.notificationTime}>{item.time}</Text>\n        {this.renderUnreadMark(item.read)}\n      </View>\n    </TouchableHighlight>\n  );\n\n  render() {\n    return (\n      <ScrollView style={styles.container}>\n        <View style={styles.header}>\n          <Text style={styles.title}>Notifications</Text>\n          <Text style={styles.secText}>{this.countUnreadNotifications()} unread notifications</Text>\n        </View>\n\n        <View style={styles.notificationsContainer}>\n          <FlatList\n            vertical\n            showsVerticalScrollIndicator={false}\n            data={this.props.notifications}\n            renderItem={this.renderNotification}\n            extraData={this.state}\n            keyExtractor={item => `${item.id}`}\n          />\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    update: id => dispatch({ type: 'UPDATE_NOTIFICATIONS', id })\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    notifications: state.notification.notifications\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NotificationsScreen);\n"]},"metadata":{},"sourceType":"script"}