{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _LogoHeader = _interopRequireDefault(require(\"../../components/LogoHeader/LogoHeader\"));\n\nvar _ContinueButton = _interopRequireDefault(require(\"../../components/ContinueButton/ContinueButton\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/SignIn/SignInScreen.js\";\n\nvar SignInScreen = function (_React$Component) {\n  (0, _inherits2.default)(SignInScreen, _React$Component);\n\n  function SignInScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, SignInScreen);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SignInScreen).call(this, props));\n\n    _this.onPressButton = function () {\n      _this.props.navigation.navigate('Home');\n    };\n\n    _this.onPressAccount = function () {};\n\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(SignInScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return _reactNative.Keyboard.dismiss();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        }\n      }, _react.default.createElement(_reactNative.ScrollView, {\n        style: _styles.default.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        }\n      }, _react.default.createElement(_LogoHeader.default, {\n        onPress: function onPress() {\n          _this2.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.mainContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.icon,\n        source: require('../../../assets/icons/email.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        }\n      }), _react.default.createElement(_reactNative.TextInput, {\n        style: _styles.default.input,\n        placeholder: \"Email Address\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.icon,\n        source: require('../../../assets/icons/password.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        }\n      }), _react.default.createElement(_reactNative.TextInput, {\n        secureTextEntry: true,\n        style: _styles.default.input,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        }\n      }))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.signContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.txt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      }, \"Sign in with\"), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.rowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        }\n      }, _react.default.createElement(_reactNativeGestureHandler.TouchableHighlight, {\n        style: _styles.default.iconContainer,\n        onPress: function onPress() {\n          return _this2.onPressAccount();\n        },\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.accountIcon,\n        source: require('../../../assets/icons/twitter.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      })), _react.default.createElement(_reactNativeGestureHandler.TouchableHighlight, {\n        style: _styles.default.iconContainer,\n        onPress: function onPress() {\n          return _this2.onPressAccount();\n        },\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.accountIcon,\n        source: require('../../../assets/icons/facebook.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        }\n      })), _react.default.createElement(_reactNativeGestureHandler.TouchableHighlight, {\n        style: _styles.default.iconContainer,\n        onPress: function onPress() {\n          return _this2.onPressAccount();\n        },\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.accountIcon,\n        source: require('../../../assets/icons/google.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        }\n      })))), _react.default.createElement(_ContinueButton.default, {\n        onPress: function onPress() {\n          return _this2.onPressButton();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      })));\n    }\n  }]);\n  return SignInScreen;\n}(_react.default.Component);\n\nexports.default = SignInScreen;","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/SignIn/SignInScreen.js"],"names":["SignInScreen","props","onPressButton","navigation","navigate","onPressAccount","state","email","password","Keyboard","dismiss","styles","container","goBack","mainContainer","inputContainer","icon","require","input","text","setState","signContainer","txt","rowContainer","iconContainer","accountIcon","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Text,\n  View,\n  TextInput,\n  TouchableWithoutFeedback,\n  Keyboard,\n  ScrollView,\n  Image\n} from 'react-native';\nimport LogoHeader from '../../components/LogoHeader/LogoHeader';\nimport ContinueButton from '../../components/ContinueButton/ContinueButton';\nimport styles from './styles';\nimport { TouchableHighlight } from 'react-native-gesture-handler';\n\nexport default class SignInScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  onPressButton = () => {\n    this.props.navigation.navigate('Home');\n  };\n\n  onPressAccount = () => {};\n\n  render() {\n    return (\n      <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n        <ScrollView style={styles.container}>\n          <LogoHeader\n            onPress={() => {\n              this.props.navigation.goBack();\n            }}\n          />\n          <View style={styles.mainContainer}>\n            <View style={styles.inputContainer}>\n              <Image style={styles.icon} source={require('../../../assets/icons/email.png')} />\n              <TextInput\n                style={styles.input}\n                placeholder=\"Email Address\"\n                onChangeText={text => this.setState({ email: text })}\n                value={this.state.email}\n              />\n            </View>\n            <View style={styles.inputContainer}>\n              <Image style={styles.icon} source={require('../../../assets/icons/password.png')} />\n              <TextInput\n                secureTextEntry\n                style={styles.input}\n                placeholder=\"Password\"\n                onChangeText={text => this.setState({ password: text })}\n                value={this.state.password}\n              />\n            </View>\n          </View>\n\n          <View style={styles.signContainer}>\n            <Text style={styles.txt}>Sign in with</Text>\n            <View style={styles.rowContainer}>\n              <TouchableHighlight\n                style={styles.iconContainer}\n                onPress={() => this.onPressAccount()}\n                underlayColor=\"rgba(73,182,77,1,0.9)\"\n              >\n                <Image\n                  style={styles.accountIcon}\n                  source={require('../../../assets/icons/twitter.png')}\n                />\n              </TouchableHighlight>\n\n              <TouchableHighlight\n                style={styles.iconContainer}\n                onPress={() => this.onPressAccount()}\n                underlayColor=\"rgba(73,182,77,1,0.9)\"\n              >\n                <Image\n                  style={styles.accountIcon}\n                  source={require('../../../assets/icons/facebook.png')}\n                />\n              </TouchableHighlight>\n              <TouchableHighlight\n                style={styles.iconContainer}\n                onPress={() => this.onPressAccount()}\n                underlayColor=\"rgba(73,182,77,1,0.9)\"\n              >\n                <Image\n                  style={styles.accountIcon}\n                  source={require('../../../assets/icons/google.png')}\n                />\n              </TouchableHighlight>\n            </View>\n          </View>\n          <ContinueButton onPress={() => this.onPressButton()} />\n        </ScrollView>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}