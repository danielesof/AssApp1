{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSnapCarousel = _interopRequireWildcard(require(\"react-native-snap-carousel\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _dataArrays = require(\"../../data/dataArrays\");\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Landing/LandingScreen.js\";\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar SCREEN_WIDTH = width < height ? width : height;\n\nvar LandingScreen = function (_React$Component) {\n  (0, _inherits2.default)(LandingScreen, _React$Component);\n\n  function LandingScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, LandingScreen);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LandingScreen).call(this, props));\n\n    _this.renderImage = function (_ref) {\n      var item = _ref.item;\n      return _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.imageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.image,\n        source: {\n          uri: item.photoUrl\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        }\n      })));\n    };\n\n    _this.onPressGetStarted = function () {\n      _this.props.navigation.navigate('Email');\n    };\n\n    _this.onPressLogin = function () {\n      _this.props.navigation.navigate('SignIn');\n    };\n\n    _this.state = {\n      activeSlide: 0\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(LandingScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var activeSlide = this.state.activeSlide;\n      var navigation = this.props.navigation;\n      return _react.default.createElement(_reactNative.ScrollView, {\n        style: _styles.default.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.headerContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.logo,\n        source: require('../../../assets/icons/logo.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.infoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      }, _dataArrays.landingArray[activeSlide].title), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        }\n      }, _dataArrays.landingArray[activeSlide].description)), _react.default.createElement(_reactNative.ScrollView, {\n        style: _styles.default.carouselContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.carousel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        }\n      }, _react.default.createElement(_reactNativeSnapCarousel.default, {\n        ref: function ref(c) {\n          _this2.slider1Ref = c;\n        },\n        data: _dataArrays.landingArray,\n        renderItem: this.renderImage,\n        sliderWidth: SCREEN_WIDTH,\n        itemWidth: SCREEN_WIDTH,\n        inactiveSlideScale: 1,\n        inactiveSlideOpacity: 1,\n        firstItem: 0,\n        loop: false,\n        autoplay: false,\n        autoplayDelay: 500,\n        autoplayInterval: 3000,\n        onSnapToItem: function onSnapToItem(index) {\n          return _this2.setState({\n            activeSlide: index\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        }\n      }), _react.default.createElement(_reactNativeSnapCarousel.Pagination, {\n        dotsLength: _dataArrays.landingArray.length,\n        activeDotIndex: activeSlide,\n        containerStyle: _styles.default.paginationContainer,\n        dotColor: \"rgba(255, 255, 255, 0.92)\",\n        dotStyle: _styles.default.paginationDot,\n        inactiveDotColor: \"white\",\n        inactiveDotOpacity: 0.4,\n        inactiveDotScale: 0.6,\n        carouselRef: this.slider1Ref,\n        tappableDots: !!this.slider1Ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      }))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.logContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }, _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        style: _styles.default.btnContainer,\n        onPress: function onPress() {\n          return _this2.onPressGetStarted();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.btnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        }\n      }, \"Get Started\")), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.bottomRowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      }, \"Already have an account?\"), _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: function onPress() {\n          return _this2.onPressLogin();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.signText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }, \"Sign in\")))));\n    }\n  }]);\n  return LandingScreen;\n}(_react.default.Component);\n\nexports.default = LandingScreen;","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Landing/LandingScreen.js"],"names":["Dimensions","get","width","height","SCREEN_WIDTH","LandingScreen","props","renderImage","item","styles","imageContainer","image","uri","photoUrl","onPressGetStarted","navigation","navigate","onPressLogin","state","activeSlide","container","headerContainer","logo","require","infoContainer","title","landingArray","description","carouselContainer","carousel","c","slider1Ref","index","setState","length","paginationContainer","paginationDot","logContainer","btnContainer","btnText","bottomRowContainer","text","signText","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableHighlight, Image, Dimensions, ScrollView } from 'react-native';\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport styles from './styles';\nimport { landingArray } from '../../data/dataArrays';\n\nconst { width, height } = Dimensions.get('window');\nconst SCREEN_WIDTH = width < height ? width : height;\n\nexport default class LandingScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSlide: 0\n    };\n  }\n\n  renderImage = ({ item }) => (\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,1,0.9)\">\n      <View style={styles.imageContainer}>\n        <Image style={styles.image} source={{ uri: item.photoUrl }} />\n      </View>\n    </TouchableHighlight>\n  );\n\n  onPressGetStarted = () => {\n    this.props.navigation.navigate('Email');\n  };\n\n  onPressLogin = () => {\n    this.props.navigation.navigate('SignIn');\n  };\n\n  render() {\n    const { activeSlide } = this.state;\n    const { navigation } = this.props;\n    return (\n      <ScrollView style={styles.container}>\n        <View style={styles.headerContainer}>\n          <Image style={styles.logo} source={require('../../../assets/icons/logo.png')} />\n        </View>\n        <View style={styles.infoContainer}>\n          <Text style={styles.title}>{landingArray[activeSlide].title}</Text>\n          <Text style={styles.description}>{landingArray[activeSlide].description}</Text>\n        </View>\n        <ScrollView style={styles.carouselContainer}>\n          <View style={styles.carousel}>\n            <Carousel\n              ref={c => {\n                this.slider1Ref = c;\n              }}\n              data={landingArray}\n              renderItem={this.renderImage}\n              sliderWidth={SCREEN_WIDTH}\n              itemWidth={SCREEN_WIDTH}\n              inactiveSlideScale={1}\n              inactiveSlideOpacity={1}\n              firstItem={0}\n              loop={false}\n              autoplay={false}\n              autoplayDelay={500}\n              autoplayInterval={3000}\n              onSnapToItem={index => this.setState({ activeSlide: index })}\n            />\n            <Pagination\n              dotsLength={landingArray.length}\n              activeDotIndex={activeSlide}\n              containerStyle={styles.paginationContainer}\n              dotColor=\"rgba(255, 255, 255, 0.92)\"\n              dotStyle={styles.paginationDot}\n              inactiveDotColor=\"white\"\n              inactiveDotOpacity={0.4}\n              inactiveDotScale={0.6}\n              carouselRef={this.slider1Ref}\n              tappableDots={!!this.slider1Ref}\n            />\n          </View>\n        </ScrollView>\n        <View style={styles.logContainer}>\n          <TouchableHighlight\n            underlayColor=\"rgba(73,182,77,1,0.9)\"\n            style={styles.btnContainer}\n            onPress={() => this.onPressGetStarted()}\n          >\n            <Text style={styles.btnText}>Get Started</Text>\n          </TouchableHighlight>\n\n          <View style={styles.bottomRowContainer}>\n            <Text style={styles.text}>Already have an account?</Text>\n            <TouchableHighlight\n              underlayColor=\"rgba(73,182,77,1,0.9)\"\n              onPress={() => this.onPressLogin()}\n            >\n              <Text style={styles.signText}>Sign in</Text>\n            </TouchableHighlight>\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}