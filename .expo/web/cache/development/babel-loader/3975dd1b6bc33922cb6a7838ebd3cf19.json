{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeModal = _interopRequireDefault(require(\"react-native-modal\"));\n\nvar _MenuImage = _interopRequireDefault(require(\"../../components/MenuImage/MenuImage\"));\n\nvar _CreatePostScreen = _interopRequireDefault(require(\"../CreatePost/CreatePostScreen\"));\n\nvar _dataArrays = require(\"../../data/dataArrays\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Community/CommunityScreen.js\";\n\nvar CommunityScreen = function (_React$Component) {\n  (0, _inherits2.default)(CommunityScreen, _React$Component);\n\n  function CommunityScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CommunityScreen);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CommunityScreen).call(this, props));\n\n    _this.toggleModal = function () {\n      _this.setState({\n        visibleModal: null\n      });\n    };\n\n    _this.renderCard = function (item) {\n      return _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.cardImg,\n        source: {\n          uri: item.photo\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        }\n      });\n    };\n\n    _this.onPressPostPost = function (postText) {\n      var posts = _this.props.posts;\n      var post = {\n        title: postText,\n        photoUrl: 'https://scontent.fotp1-1.fna.fbcdn.net/v/t1.0-9/14064032_1211439115574722_4008304366512255154_n.jpg?_nc_cat=108&_nc_oc=AQnBE7o9_hppxwN1vTI9pf7psutWjHM8yrRyT8FujlPuDQfSeX6_t7n8L7OU6_G-428&_nc_ht=scontent.fotp1-1.fna&oh=dc47657793c14d6b1697f4e1af37bde6&oe=5DE8E357',\n        author: _this.props.userName,\n        authorImg: _this.props.userPhoto,\n        time: '15 seconds',\n        id: posts[posts.length - 1].id + 1,\n        likes: 0,\n        liked: false,\n        comments: []\n      };\n\n      _this.props.addPost(post);\n    };\n\n    _this.onPressLike = function (postId) {\n      _this.props.addLike(postId);\n    };\n\n    _this.renderPost = function (_ref) {\n      var item = _ref.item;\n      return _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: _styles.default.postContainer,\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('Comment', {\n            userPhoto: _this.props.userPhoto,\n            userName: _this.props.userName,\n            itemId: item.id,\n            onPressPostComment: _this.onPressPostComment.bind((0, _assertThisInitialized2.default)(_this)),\n            onPressLike: _this.onPressLike.bind((0, _assertThisInitialized2.default)(_this))\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.rowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.authorImg,\n        source: {\n          uri: item.authorImg\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: {\n          alignSelf: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.authorName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        }\n      }, item.author), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        }\n      }, item.time))), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.postTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        }\n      }, item.title), _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.postImg,\n        source: {\n          uri: item.photoUrl\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.rowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        }\n      }, _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: function onPress() {\n          return _this.onPressLike(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.icon,\n        source: item.liked ? require('../../../assets/icons/fillLike.png') : require('../../../assets/icons/like.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        }\n      })), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.iconText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        }\n      }, item.likes), _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.icon,\n        source: require('../../../assets/icons/comments.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.iconText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        }\n      }, item.comments.length))));\n    };\n\n    _this.state = {\n      visibleModalId: null,\n      userName: 'Ben Andressen',\n      userPhoto: 'https://scontent.fotp1-1.fna.fbcdn.net/v/t1.0-9/14064032_1211439115574722_4008304366512255154_n.jpg?_nc_cat=108&_nc_oc=AQnBE7o9_hppxwN1vTI9pf7psutWjHM8yrRyT8FujlPuDQfSeX6_t7n8L7OU6_G-428&_nc_ht=scontent.fotp1-1.fna&oh=dc47657793c14d6b1697f4e1af37bde6&oe=5DE8E357'\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(CommunityScreen, [{\n    key: \"onPressPostComment\",\n    value: function onPressPostComment(commentText, postId) {\n      var _this2 = this;\n\n      var posts = this.props.posts;\n      var comment = {};\n      posts.map(function (post) {\n        if (post.id == postId) {\n          var id = 0;\n\n          if (post.comments.length != 0) {\n            id = post.comments[post.comments.length - 1].id + 1;\n          }\n\n          comment = {\n            text: commentText,\n            authorName: _this2.props.userName,\n            authorPhoto: _this2.props.userPhoto,\n            time: '15 seconds',\n            id: id\n          };\n        }\n      });\n      this.props.addComment(postId, comment);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _react.default.createElement(_reactNative.ScrollView, {\n        style: _styles.default.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.titleContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        }\n      }, \"Community\"), _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: function onPress() {\n          return _this3.setState({\n            visibleModal: 'swipeable'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.inscription,\n        source: require('../../../assets/icons/inscription.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        }\n      }))), _react.default.createElement(_reactNativeModal.default, {\n        isVisible: this.state.visibleModal === 'swipeable',\n        onSwipeComplete: function onSwipeComplete() {\n          return _this3.setState({\n            visibleModal: null\n          });\n        },\n        swipeDirection: ['down'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        }\n      }, _react.default.createElement(_CreatePostScreen.default, {\n        userPhoto: this.props.userPhoto,\n        onPressPostPost: this.onPressPostPost,\n        toggleModal: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        }\n      })), _react.default.createElement(_reactNative.ScrollView, {\n        horizontal: true,\n        style: _styles.default.carouselContainer,\n        showsHorizontalScrollIndicator: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        }\n      }, _dataArrays.profilePictures.map(function (item) {\n        return _this3.renderCard(item);\n      })), _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        data: this.props.posts,\n        renderItem: this.renderPost,\n        extraData: this.state,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.id;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        }\n      })));\n    }\n  }]);\n  return CommunityScreen;\n}(_react.default.Component);\n\nCommunityScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  var _navigation$state$par = navigation.state.params,\n      params = _navigation$state$par === void 0 ? {} : _navigation$state$par;\n  return {\n    headerStyle: {\n      backgroundColor: '#F4F6FA',\n      elevation: 0,\n      height: 60,\n      shadowColor: 'transparent',\n      borderBottomWidth: 0\n    },\n    headerLeft: _react.default.createElement(_MenuImage.default, {\n      onPress: function onPress() {\n        navigation.openDrawer();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      }\n    })\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.community.posts,\n    userName: state.registration.userName,\n    userPhoto: state.registration.userPhoto\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addPost: function addPost(post) {\n      return dispatch({\n        type: 'ADD_POST',\n        post: post\n      });\n    },\n    addLike: function addLike(id) {\n      return dispatch({\n        type: 'ADD_LIKE',\n        id: id\n      });\n    },\n    addComment: function addComment(postId, comment) {\n      return dispatch({\n        type: 'ADD_COMMENT',\n        postId: postId,\n        comment: comment\n      });\n    }\n  };\n}\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(CommunityScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Community/CommunityScreen.js"],"names":["CommunityScreen","props","toggleModal","setState","visibleModal","renderCard","item","styles","cardImg","uri","photo","onPressPostPost","postText","posts","post","title","photoUrl","author","userName","authorImg","userPhoto","time","id","length","likes","liked","comments","addPost","onPressLike","postId","addLike","renderPost","postContainer","navigation","navigate","itemId","onPressPostComment","bind","rowContainer","alignSelf","authorName","date","postTitle","postImg","icon","require","iconText","state","visibleModalId","commentText","comment","map","text","authorPhoto","addComment","container","titleContainer","inscription","carouselContainer","profilePictures","React","Component","navigationOptions","params","headerStyle","backgroundColor","elevation","height","shadowColor","borderBottomWidth","headerLeft","openDrawer","mapStateToProps","community","registration","mapDispatchToProps","dispatch","type"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;IAEMA,e;;;AAqBJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,qHAAMA,KAAN;;AADiB,UAUnBC,WAVmB,GAUL,YAAM;AAClB,YAAKC,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAE;AADF,OAAd;AAGD,KAdkB;;AAAA,UAgBnBC,UAhBmB,GAgBN,UAAAC,IAAI;AAAA,aAAI,6BAAC,kBAAD;AAAO,QAAA,KAAK,EAAEC,gBAAOC,OAArB;AAA8B,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEH,IAAI,CAACI;AAAZ,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ;AAAA,KAhBE;;AAAA,UAuCnBC,eAvCmB,GAuCD,UAAAC,QAAQ,EAAI;AAC5B,UAAIC,KAAK,GAAG,MAAKZ,KAAL,CAAWY,KAAvB;AACA,UAAIC,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAEH,QADE;AAETI,QAAAA,QAAQ,EACN,wQAHO;AAITC,QAAAA,MAAM,EAAE,MAAKhB,KAAL,CAAWiB,QAJV;AAKTC,QAAAA,SAAS,EAAE,MAAKlB,KAAL,CAAWmB,SALb;AAMTC,QAAAA,IAAI,EAAE,YANG;AAOTC,QAAAA,EAAE,EAAET,KAAK,CAACA,KAAK,CAACU,MAAN,GAAe,CAAhB,CAAL,CAAwBD,EAAxB,GAA6B,CAPxB;AAQTE,QAAAA,KAAK,EAAE,CARE;AASTC,QAAAA,KAAK,EAAE,KATE;AAUTC,QAAAA,QAAQ,EAAE;AAVD,OAAX;;AAYA,YAAKzB,KAAL,CAAW0B,OAAX,CAAmBb,IAAnB;AACD,KAtDkB;;AAAA,UAwDnBc,WAxDmB,GAwDL,UAAAC,MAAM,EAAI;AACtB,YAAK5B,KAAL,CAAW6B,OAAX,CAAmBD,MAAnB;AACD,KA1DkB;;AAAA,UA4DnBE,UA5DmB,GA4DN,gBAAc;AAAA,UAAXzB,IAAW,QAAXA,IAAW;AACzB,aACE,6BAAC,+BAAD;AACE,QAAA,KAAK,EAAEC,gBAAOyB,aADhB;AAEE,QAAA,aAAa,EAAC,uBAFhB;AAGE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAK/B,KAAL,CAAWgC,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B,EAA0C;AACxCd,YAAAA,SAAS,EAAE,MAAKnB,KAAL,CAAWmB,SADkB;AAExCF,YAAAA,QAAQ,EAAE,MAAKjB,KAAL,CAAWiB,QAFmB;AAGxCiB,YAAAA,MAAM,EAAE7B,IAAI,CAACgB,EAH2B;AAIxCc,YAAAA,kBAAkB,EAAE,MAAKA,kBAAL,CAAwBC,IAAxB,6CAJoB;AAKxCT,YAAAA,WAAW,EAAE,MAAKA,WAAL,CAAiBS,IAAjB;AAL2B,WAA1C,CADO;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA,SAaE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE9B,gBAAO+B,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,kBAAD;AAAO,QAAA,KAAK,EAAE/B,gBAAOY,SAArB;AAAgC,QAAA,MAAM,EAAE;AAAEV,UAAAA,GAAG,EAAEH,IAAI,CAACa;AAAZ,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE;AAAEoB,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEhC,gBAAOiC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiClC,IAAI,CAACW,MAAtC,CADF,EAEE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEV,gBAAOkC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BnC,IAAI,CAACe,IAAhC,CAFF,CAFF,CADF,EAQE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEd,gBAAOmC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCpC,IAAI,CAACS,KAArC,CARF,EASE,6BAAC,kBAAD;AAAO,QAAA,KAAK,EAAER,gBAAOoC,OAArB;AAA8B,QAAA,MAAM,EAAE;AAAElC,UAAAA,GAAG,EAAEH,IAAI,CAACU;AAAZ,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAUE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAET,gBAAO+B,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,+BAAD;AACE,QAAA,aAAa,EAAC,uBADhB;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKV,WAAL,CAAiBtB,IAAI,CAACgB,EAAtB,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,6BAAC,kBAAD;AACE,QAAA,KAAK,EAAEf,gBAAOqC,IADhB;AAEE,QAAA,MAAM,EACJtC,IAAI,CAACmB,KAAL,GACIoB,OAAO,CAAC,oCAAD,CADX,GAEIA,OAAO,CAAC,gCAAD,CALf;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,EAcE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEtC,gBAAOuC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BxC,IAAI,CAACkB,KAApC,CAdF,EAeE,6BAAC,kBAAD;AAAO,QAAA,KAAK,EAAEjB,gBAAOqC,IAArB;AAA2B,QAAA,MAAM,EAAEC,OAAO,CAAC,oCAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EAgBE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEtC,gBAAOuC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BxC,IAAI,CAACoB,QAAL,CAAcH,MAA7C,CAhBF,CAVF,CAbF,CADF;AA6CD,KA1GkB;;AAEjB,UAAKwB,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,IADL;AAEX9B,MAAAA,QAAQ,EAAE,eAFC;AAGXE,MAAAA,SAAS,EACP;AAJS,KAAb;AAFiB;AAQlB;;;;uCAUkB6B,W,EAAapB,M,EAAQ;AAAA;;AACtC,UAAIhB,KAAK,GAAG,KAAKZ,KAAL,CAAWY,KAAvB;AACA,UAAIqC,OAAO,GAAG,EAAd;AACArC,MAAAA,KAAK,CAACsC,GAAN,CAAU,UAAArC,IAAI,EAAI;AAChB,YAAIA,IAAI,CAACQ,EAAL,IAAWO,MAAf,EAAuB;AACrB,cAAIP,EAAE,GAAG,CAAT;;AACA,cAAIR,IAAI,CAACY,QAAL,CAAcH,MAAd,IAAwB,CAA5B,EAA+B;AAC7BD,YAAAA,EAAE,GAAGR,IAAI,CAACY,QAAL,CAAcZ,IAAI,CAACY,QAAL,CAAcH,MAAd,GAAuB,CAArC,EAAwCD,EAAxC,GAA6C,CAAlD;AACD;;AACD4B,UAAAA,OAAO,GAAG;AACRE,YAAAA,IAAI,EAAEH,WADE;AAERT,YAAAA,UAAU,EAAE,MAAI,CAACvC,KAAL,CAAWiB,QAFf;AAGRmC,YAAAA,WAAW,EAAE,MAAI,CAACpD,KAAL,CAAWmB,SAHhB;AAIRC,YAAAA,IAAI,EAAE,YAJE;AAKRC,YAAAA,EAAE,EAAEA;AALI,WAAV;AAOD;AACF,OAdD;AAeA,WAAKrB,KAAL,CAAWqD,UAAX,CAAsBzB,MAAtB,EAA8BqB,OAA9B;AACD;;;6BAuEQ;AAAA;;AACP,aACE,6BAAC,uBAAD;AAAY,QAAA,KAAK,EAAE3C,gBAAOgD,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEhD,gBAAOiD,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEjD,gBAAOQ,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,6BAAC,+BAAD;AACE,QAAA,aAAa,EAAC,uBADhB;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACZ,QAAL,CAAc;AAAEC,YAAAA,YAAY,EAAE;AAAhB,WAAd,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,6BAAC,kBAAD;AACE,QAAA,KAAK,EAAEG,gBAAOkD,WADhB;AAEE,QAAA,MAAM,EAAEZ,OAAO,CAAC,uCAAD,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAFF,CADF,EAaE,6BAAC,yBAAD;AACE,QAAA,SAAS,EAAE,KAAKE,KAAL,CAAW3C,YAAX,KAA4B,WADzC;AAEE,QAAA,eAAe,EAAE;AAAA,iBAAM,MAAI,CAACD,QAAL,CAAc;AAAEC,YAAAA,YAAY,EAAE;AAAhB,WAAd,CAAN;AAAA,SAFnB;AAGE,QAAA,cAAc,EAAE,CAAC,MAAD,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,6BAAC,yBAAD;AACE,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWmB,SADxB;AAEE,QAAA,eAAe,EAAE,KAAKT,eAFxB;AAGE,QAAA,WAAW,EAAE,KAAKT,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAbF,EAyBE,6BAAC,uBAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,KAAK,EAAEK,gBAAOmD,iBAFhB;AAGE,QAAA,8BAA8B,EAAE,KAHlC;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGC,4BAAgBR,GAAhB,CAAoB,UAAA7C,IAAI;AAAA,eAAI,MAAI,CAACD,UAAL,CAAgBC,IAAhB,CAAJ;AAAA,OAAxB,CALH,CAzBF,EAgCE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,qBAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,4BAA4B,EAAE,KAFhC;AAGE,QAAA,IAAI,EAAE,KAAKL,KAAL,CAAWY,KAHnB;AAIE,QAAA,UAAU,EAAE,KAAKkB,UAJnB;AAKE,QAAA,SAAS,EAAE,KAAKgB,KALlB;AAME,QAAA,YAAY,EAAE,sBAAAzC,IAAI;AAAA,sBAAOA,IAAI,CAACgB,EAAZ;AAAA,SANpB;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAhCF,CADF;AA6CD;;;EA/K2BsC,eAAMC,S;;AAA9B7D,e,CACG8D,iB,GAAoB,iBAAoB;AAAA,MAAjB7B,UAAiB,SAAjBA,UAAiB;AAAA,8BACrBA,UAAU,CAACc,KADU,CACrCgB,MADqC;AAAA,MACrCA,MADqC,sCAC5B,EAD4B;AAE7C,SAAO;AACLC,IAAAA,WAAW,EAAE;AACXC,MAAAA,eAAe,EAAE,SADN;AAEXC,MAAAA,SAAS,EAAE,CAFA;AAGXC,MAAAA,MAAM,EAAE,EAHG;AAIXC,MAAAA,WAAW,EAAE,aAJF;AAKXC,MAAAA,iBAAiB,EAAE;AALR,KADR;AAQLC,IAAAA,UAAU,EACR,6BAAC,kBAAD;AACE,MAAA,OAAO,EAAE,mBAAM;AACbrC,QAAAA,UAAU,CAACsC,UAAX;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AATG,GAAP;AAgBD,C;;AA+JH,SAASC,eAAT,CAAyBzB,KAAzB,EAAgC;AAC9B,SAAO;AACLlC,IAAAA,KAAK,EAAEkC,KAAK,CAAC0B,SAAN,CAAgB5D,KADlB;AAELK,IAAAA,QAAQ,EAAE6B,KAAK,CAAC2B,YAAN,CAAmBxD,QAFxB;AAGLE,IAAAA,SAAS,EAAE2B,KAAK,CAAC2B,YAAN,CAAmBtD;AAHzB,GAAP;AAKD;;AAED,SAASuD,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLjD,IAAAA,OAAO,EAAE,iBAAAb,IAAI;AAAA,aAAI8D,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,UAAR;AAAoB/D,QAAAA,IAAI,EAAJA;AAApB,OAAD,CAAZ;AAAA,KADR;AAELgB,IAAAA,OAAO,EAAE,iBAAAR,EAAE;AAAA,aAAIsD,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,UAAR;AAAoBvD,QAAAA,EAAE,EAAFA;AAApB,OAAD,CAAZ;AAAA,KAFN;AAGLgC,IAAAA,UAAU,EAAE,oBAACzB,MAAD,EAASqB,OAAT;AAAA,aAAqB0B,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBhD,QAAAA,MAAM,EAANA,MAAvB;AAA+BqB,QAAAA,OAAO,EAAPA;AAA/B,OAAD,CAA7B;AAAA;AAHP,GAAP;AAKD;;eAEc,yBACbsB,eADa,EAEbG,kBAFa,EAGb3E,eAHa,C","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableHighlight, Image, ScrollView, FlatList } from 'react-native';\nimport Modal from 'react-native-modal';\nimport MenuImage from '../../components/MenuImage/MenuImage';\nimport CreatePostScreen from '../CreatePost/CreatePostScreen';\nimport { profilePictures } from '../../data/dataArrays';\nimport styles from './styles';\nimport { connect } from 'react-redux';\n\nclass CommunityScreen extends React.Component {\n  static navigationOptions = ({ navigation }) => {\n    const { params = {} } = navigation.state;\n    return {\n      headerStyle: {\n        backgroundColor: '#F4F6FA',\n        elevation: 0,\n        height: 60,\n        shadowColor: 'transparent',\n        borderBottomWidth: 0\n      },\n      headerLeft: (\n        <MenuImage\n          onPress={() => {\n            navigation.openDrawer();\n          }}\n        />\n      )\n    };\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      visibleModalId: null,\n      userName: 'Ben Andressen',\n      userPhoto:\n        'https://scontent.fotp1-1.fna.fbcdn.net/v/t1.0-9/14064032_1211439115574722_4008304366512255154_n.jpg?_nc_cat=108&_nc_oc=AQnBE7o9_hppxwN1vTI9pf7psutWjHM8yrRyT8FujlPuDQfSeX6_t7n8L7OU6_G-428&_nc_ht=scontent.fotp1-1.fna&oh=dc47657793c14d6b1697f4e1af37bde6&oe=5DE8E357'\n    };\n  }\n\n  toggleModal = () => {\n    this.setState({\n      visibleModal: null\n    });\n  };\n\n  renderCard = item => <Image style={styles.cardImg} source={{ uri: item.photo }} />;\n\n  onPressPostComment(commentText, postId) {\n    var posts = this.props.posts;\n    var comment = {};\n    posts.map(post => {\n      if (post.id == postId) {\n        let id = 0;\n        if (post.comments.length != 0) {\n          id = post.comments[post.comments.length - 1].id + 1;\n        }\n        comment = {\n          text: commentText,\n          authorName: this.props.userName,\n          authorPhoto: this.props.userPhoto,\n          time: '15 seconds',\n          id: id\n        };\n      }\n    });\n    this.props.addComment(postId, comment);\n  }\n\n  onPressPostPost = postText => {\n    var posts = this.props.posts;\n    let post = {\n      title: postText,\n      photoUrl:\n        'https://scontent.fotp1-1.fna.fbcdn.net/v/t1.0-9/14064032_1211439115574722_4008304366512255154_n.jpg?_nc_cat=108&_nc_oc=AQnBE7o9_hppxwN1vTI9pf7psutWjHM8yrRyT8FujlPuDQfSeX6_t7n8L7OU6_G-428&_nc_ht=scontent.fotp1-1.fna&oh=dc47657793c14d6b1697f4e1af37bde6&oe=5DE8E357',\n      author: this.props.userName,\n      authorImg: this.props.userPhoto,\n      time: '15 seconds',\n      id: posts[posts.length - 1].id + 1,\n      likes: 0,\n      liked: false,\n      comments: []\n    };\n    this.props.addPost(post);\n  };\n\n  onPressLike = postId => {\n    this.props.addLike(postId);\n  };\n\n  renderPost = ({ item }) => {\n    return (\n      <TouchableHighlight\n        style={styles.postContainer}\n        underlayColor=\"rgba(73,182,77,1,0.9)\"\n        onPress={() =>\n          this.props.navigation.navigate('Comment', {\n            userPhoto: this.props.userPhoto,\n            userName: this.props.userName,\n            itemId: item.id,\n            onPressPostComment: this.onPressPostComment.bind(this),\n            onPressLike: this.onPressLike.bind(this)\n          })\n        }\n      >\n        <View>\n          <View style={styles.rowContainer}>\n            <Image style={styles.authorImg} source={{ uri: item.authorImg }} />\n            <View style={{ alignSelf: 'center' }}>\n              <Text style={styles.authorName}>{item.author}</Text>\n              <Text style={styles.date}>{item.time}</Text>\n            </View>\n          </View>\n          <Text style={styles.postTitle}>{item.title}</Text>\n          <Image style={styles.postImg} source={{ uri: item.photoUrl }} />\n          <View style={styles.rowContainer}>\n            <TouchableHighlight\n              underlayColor=\"rgba(73,182,77,1,0.9)\"\n              onPress={() => this.onPressLike(item.id)}\n            >\n              <Image\n                style={styles.icon}\n                source={\n                  item.liked\n                    ? require('../../../assets/icons/fillLike.png')\n                    : require('../../../assets/icons/like.png')\n                }\n              />\n            </TouchableHighlight>\n            <Text style={styles.iconText}>{item.likes}</Text>\n            <Image style={styles.icon} source={require('../../../assets/icons/comments.png')} />\n            <Text style={styles.iconText}>{item.comments.length}</Text>\n          </View>\n        </View>\n      </TouchableHighlight>\n    );\n  };\n\n  render() {\n    return (\n      <ScrollView style={styles.container}>\n        <View style={styles.titleContainer}>\n          <Text style={styles.title}>Community</Text>\n          <TouchableHighlight\n            underlayColor=\"rgba(73,182,77,1,0.9)\"\n            onPress={() => this.setState({ visibleModal: 'swipeable' })}\n          >\n            <Image\n              style={styles.inscription}\n              source={require('../../../assets/icons/inscription.png')}\n            />\n          </TouchableHighlight>\n        </View>\n        <Modal\n          isVisible={this.state.visibleModal === 'swipeable'}\n          onSwipeComplete={() => this.setState({ visibleModal: null })}\n          swipeDirection={['down']}\n        >\n          <CreatePostScreen\n            userPhoto={this.props.userPhoto}\n            onPressPostPost={this.onPressPostPost}\n            toggleModal={this.toggleModal}\n          />\n        </Modal>\n\n        <ScrollView\n          horizontal={true}\n          style={styles.carouselContainer}\n          showsHorizontalScrollIndicator={false}\n        >\n          {profilePictures.map(item => this.renderCard(item))}\n        </ScrollView>\n        <View>\n          <FlatList\n            vertical\n            showsVerticalScrollIndicator={false}\n            data={this.props.posts}\n            renderItem={this.renderPost}\n            extraData={this.state}\n            keyExtractor={item => `${item.id}`}\n          />\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.community.posts,\n    userName: state.registration.userName,\n    userPhoto: state.registration.userPhoto\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addPost: post => dispatch({ type: 'ADD_POST', post }),\n    addLike: id => dispatch({ type: 'ADD_LIKE', id }),\n    addComment: (postId, comment) => dispatch({ type: 'ADD_COMMENT', postId, comment })\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CommunityScreen);\n"]},"metadata":{},"sourceType":"script"}