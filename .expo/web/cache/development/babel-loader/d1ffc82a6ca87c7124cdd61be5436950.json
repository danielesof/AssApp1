{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Pagination = _interopRequireDefault(require(\"./Pagination.style\"));\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/node_modules/react-native-snap-carousel/src/pagination/PaginationDot.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar PaginationDot = function (_PureComponent) {\n  (0, _inherits2.default)(PaginationDot, _PureComponent);\n\n  function PaginationDot(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PaginationDot);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PaginationDot).call(this, props));\n    _this.state = {\n      animColor: new _reactNative.Animated.Value(0),\n      animOpacity: new _reactNative.Animated.Value(0),\n      animTransform: new _reactNative.Animated.Value(0)\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(PaginationDot, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this._animate(1);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.active !== this.props.active) {\n        this._animate(nextProps.active ? 1 : 0);\n      }\n    }\n  }, {\n    key: \"_animate\",\n    value: function _animate() {\n      var toValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var _this$state = this.state,\n          animColor = _this$state.animColor,\n          animOpacity = _this$state.animOpacity,\n          animTransform = _this$state.animTransform;\n      var commonProperties = {\n        toValue: toValue,\n        duration: 250,\n        isInteraction: false,\n        useNativeDriver: !this._shouldAnimateColor\n      };\n      var animations = [_reactNative.Animated.timing(animOpacity, _objectSpread({\n        easing: _reactNative.Easing.linear\n      }, commonProperties)), _reactNative.Animated.spring(animTransform, _objectSpread({\n        friction: 4,\n        tension: 50\n      }, commonProperties))];\n\n      if (this._shouldAnimateColor) {\n        animations.push(_reactNative.Animated.timing(animColor, _objectSpread({\n          easing: _reactNative.Easing.linear\n        }, commonProperties)));\n      }\n\n      _reactNative.Animated.parallel(animations).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          animColor = _this$state2.animColor,\n          animOpacity = _this$state2.animOpacity,\n          animTransform = _this$state2.animTransform;\n      var _this$props = this.props,\n          active = _this$props.active,\n          activeOpacity = _this$props.activeOpacity,\n          carouselRef = _this$props.carouselRef,\n          color = _this$props.color,\n          containerStyle = _this$props.containerStyle,\n          inactiveColor = _this$props.inactiveColor,\n          inactiveStyle = _this$props.inactiveStyle,\n          inactiveOpacity = _this$props.inactiveOpacity,\n          inactiveScale = _this$props.inactiveScale,\n          index = _this$props.index,\n          style = _this$props.style,\n          tappable = _this$props.tappable;\n      var animatedStyle = {\n        opacity: animOpacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [inactiveOpacity, 1]\n        }),\n        transform: [{\n          scale: animTransform.interpolate({\n            inputRange: [0, 1],\n            outputRange: [inactiveScale, 1]\n          })\n        }]\n      };\n      var animatedColor = this._shouldAnimateColor ? {\n        backgroundColor: animColor.interpolate({\n          inputRange: [0, 1],\n          outputRange: [inactiveColor, color]\n        })\n      } : {};\n      var dotContainerStyle = [_Pagination.default.sliderPaginationDotContainer, containerStyle || {}];\n      var dotStyle = [_Pagination.default.sliderPaginationDot, style || {}, !active && inactiveStyle || {}, animatedStyle, animatedColor];\n      var onPress = tappable ? function () {\n        carouselRef && carouselRef._snapToItem(carouselRef._getPositionIndex(index));\n      } : undefined;\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        accessible: false,\n        style: dotContainerStyle,\n        activeOpacity: tappable ? activeOpacity : 1,\n        onPress: onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        }\n      }, _react.default.createElement(_reactNative.Animated.View, {\n        style: dotStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        }\n      }));\n    }\n  }, {\n    key: \"_shouldAnimateColor\",\n    get: function get() {\n      var _this$props2 = this.props,\n          color = _this$props2.color,\n          inactiveColor = _this$props2.inactiveColor;\n      return color && inactiveColor;\n    }\n  }]);\n  return PaginationDot;\n}(_react.PureComponent);\n\nexports.default = PaginationDot;\nPaginationDot.propTypes = {\n  inactiveOpacity: _propTypes.default.number.isRequired,\n  inactiveScale: _propTypes.default.number.isRequired,\n  active: _propTypes.default.bool,\n  activeOpacity: _propTypes.default.number,\n  carouselRef: _propTypes.default.object,\n  color: _propTypes.default.string,\n  containerStyle: _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style,\n  inactiveColor: _propTypes.default.string,\n  inactiveStyle: _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style,\n  index: _propTypes.default.number,\n  style: _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style,\n  tappable: _propTypes.default.bool\n};","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/node_modules/react-native-snap-carousel/src/pagination/PaginationDot.js"],"names":["PaginationDot","props","state","animColor","Animated","Value","animOpacity","animTransform","active","_animate","nextProps","toValue","commonProperties","duration","isInteraction","useNativeDriver","_shouldAnimateColor","animations","timing","easing","Easing","linear","spring","friction","tension","push","parallel","start","activeOpacity","carouselRef","color","containerStyle","inactiveColor","inactiveStyle","inactiveOpacity","inactiveScale","index","style","tappable","animatedStyle","opacity","interpolate","inputRange","outputRange","transform","scale","animatedColor","backgroundColor","dotContainerStyle","styles","sliderPaginationDotContainer","dotStyle","sliderPaginationDot","onPress","_snapToItem","_getPositionIndex","undefined","PureComponent","propTypes","PropTypes","number","isRequired","bool","object","string","ViewPropTypes","View"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { View, Animated, Easing, TouchableOpacity, ViewPropTypes } from 'react-native';\nimport PropTypes from 'prop-types';\nimport styles from './Pagination.style';\n\nexport default class PaginationDot extends PureComponent {\n\n    static propTypes = {\n        inactiveOpacity: PropTypes.number.isRequired,\n        inactiveScale: PropTypes.number.isRequired,\n        active: PropTypes.bool,\n        activeOpacity: PropTypes.number,\n        carouselRef: PropTypes.object,\n        color: PropTypes.string,\n        containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        inactiveColor: PropTypes.string,\n        inactiveStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        index: PropTypes.number,\n        style: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        tappable: PropTypes.bool\n    };\n\n    constructor (props) {\n        super(props);\n        this.state = {\n            animColor: new Animated.Value(0),\n            animOpacity: new Animated.Value(0),\n            animTransform: new Animated.Value(0)\n        };\n    }\n\n    componentDidMount () {\n        if (this.props.active) {\n            this._animate(1);\n        }\n    }\n\n    componentWillReceiveProps (nextProps) {\n        if (nextProps.active !== this.props.active) {\n            this._animate(nextProps.active ? 1 : 0);\n        }\n    }\n\n    _animate (toValue = 0) {\n        const { animColor, animOpacity, animTransform } = this.state;\n\n        const commonProperties = {\n            toValue,\n            duration: 250,\n            isInteraction: false,\n            useNativeDriver: !this._shouldAnimateColor\n        };\n\n        let animations = [\n            Animated.timing(animOpacity, {\n                easing: Easing.linear,\n                ...commonProperties\n            }),\n            Animated.spring(animTransform, {\n                friction: 4,\n                tension: 50,\n                ...commonProperties\n            })\n        ];\n\n        if (this._shouldAnimateColor) {\n            animations.push(Animated.timing(animColor, {\n                easing: Easing.linear,\n                ...commonProperties\n            }));\n        }\n\n        Animated.parallel(animations).start();\n    }\n\n    get _shouldAnimateColor () {\n        const { color, inactiveColor } = this.props;\n        return color && inactiveColor;\n    }\n\n    render () {\n        const { animColor, animOpacity, animTransform } = this.state;\n        const {\n            active,\n            activeOpacity,\n            carouselRef,\n            color,\n            containerStyle,\n            inactiveColor,\n            inactiveStyle,\n            inactiveOpacity,\n            inactiveScale,\n            index,\n            style,\n            tappable\n        } = this.props;\n\n        const animatedStyle = {\n            opacity: animOpacity.interpolate({\n                inputRange: [0, 1],\n                outputRange: [inactiveOpacity, 1]\n            }),\n            transform: [{\n                scale: animTransform.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [inactiveScale, 1]\n                })\n            }]\n        };\n        const animatedColor = this._shouldAnimateColor ? {\n            backgroundColor: animColor.interpolate({\n                inputRange: [0, 1],\n                outputRange: [inactiveColor, color]\n            })\n        } : {};\n\n        const dotContainerStyle = [\n            styles.sliderPaginationDotContainer,\n            containerStyle || {}\n        ];\n\n        const dotStyle = [\n            styles.sliderPaginationDot,\n            style || {},\n            (!active && inactiveStyle) || {},\n            animatedStyle,\n            animatedColor\n        ];\n\n        const onPress = tappable ? () => {\n            carouselRef && carouselRef._snapToItem(carouselRef._getPositionIndex(index));\n        } : undefined;\n\n        return (\n            <TouchableOpacity\n              accessible={false}\n              style={dotContainerStyle}\n              activeOpacity={tappable ? activeOpacity : 1}\n              onPress={onPress}\n            >\n                <Animated.View style={dotStyle} />\n            </TouchableOpacity>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"script"}