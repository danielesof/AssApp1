{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _ModalMealScreen = _interopRequireDefault(require(\"../ModalMeal/ModalMealScreen\"));\n\nvar _reactNativeChartKit = require(\"react-native-chart-kit\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _reactNativeModal = _interopRequireDefault(require(\"react-native-modal\"));\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Nutrition/NutritionScreen.js\";\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar SCREEN_WIDTH = width < height ? width : height;\n\nvar NutritionScreen = function (_React$Component) {\n  (0, _inherits2.default)(NutritionScreen, _React$Component);\n\n  function NutritionScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, NutritionScreen);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NutritionScreen).call(this, props));\n\n    _this.toggleModal = function () {\n      _this.setState({\n        visibleModal: null\n      });\n    };\n\n    _this.onPressModal = function () {\n      _this.setState({\n        visibleModal: 'swipeable'\n      });\n    };\n\n    _this.onPressDeleteIcon = function (mealId) {\n      _this.setState(function (prevState) {\n        return {\n          deleteModal: !prevState.deleteModal,\n          deleteMealId: mealId\n        };\n      });\n    };\n\n    _this.onPressDeleteMeal = function () {\n      _this.props.removeMeal(_this.state.deleteMealId);\n\n      _this.setState(function (prevState) {\n        return {\n          deleteMealId: -1\n        };\n      });\n    };\n\n    _this.onPressCancel = function () {\n      _this.setState(function (prevState) {\n        return {\n          deleteMealId: -1\n        };\n      });\n    };\n\n    _this.showDeleteScreen = function (id) {\n      _this.onPressDeleteIcon(id);\n\n      _reactNative.Alert.alert('Are you sure you want to delete this meal?', '', [{\n        text: 'Yes',\n        onPress: function onPress() {\n          return _this.onPressDeleteMeal();\n        }\n      }, {\n        text: 'Cancel',\n        onPress: function onPress() {\n          return _this.onPressCancel();\n        },\n        style: 'cancel'\n      }], {\n        cancelable: false\n      });\n    };\n\n    _this.renderFood = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return _react.default.createElement(_reactNative.View, {\n        style: index == 0 ? _styles.default.foodContainerBoarderless : _styles.default.foodContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.rowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.foodName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }, item.name), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.foodQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        }\n      }, item.quantity)), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.foodCalories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        }\n      }, item.calories)));\n    };\n\n    _this.renderMeal = function (_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return _react.default.createElement(_reactNative.View, {\n        style: _styles.default.mealContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.mealName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      }, item.meal), _react.default.createElement(_reactNative.FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        data: item.foods,\n        renderItem: _this.renderFood,\n        extraData: _this.state,\n        listKey: function listKey(index) {\n          return \"\" + index;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        }\n      }), _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: _styles.default.deleteIconContainer,\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: function onPress() {\n          return _this.showDeleteScreen(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.deleteIcon,\n        source: require('../../../assets/icons/deleteIcon.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        }\n      })));\n    };\n\n    _this.state = {\n      visibleModalId: null,\n      deleteModal: false,\n      deleteMealId: -1\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(NutritionScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.navigation.setParams({\n        onPressModal: this.onPressModal\n      });\n    }\n  }, {\n    key: \"getCaloriesDone\",\n    value: function getCaloriesDone() {\n      var calories = 0;\n      this.props.nutrition.map(function (data) {\n        data.foods.map(function (food) {\n          calories += food.calories;\n        });\n      });\n      return calories;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var macroNutrients = this.props.navigation.getParam('macroNutrients');\n      var caloriesDone = this.getCaloriesDone();\n      var data = {\n        labels: ['Protien', 'Carb', 'Fat'],\n        data: [macroNutrients.proteinDone / macroNutrients.proteinGoal, macroNutrients.carbDone / macroNutrients.carbGoal, macroNutrients.fatDone / macroNutrients.fatGoal],\n        strokeWidth: 2\n      };\n      return _react.default.createElement(_reactNative.ScrollView, {\n        style: _styles.default.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.titleContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        }\n      }, \"You burned \", _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.caloriesText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        }\n      }, caloriesDone), \" calories today\")), _react.default.createElement(_reactNative.View, {\n        style: {\n          alignSelf: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        }\n      }, _react.default.createElement(_reactNativeChartKit.ProgressChart, {\n        data: data,\n        width: SCREEN_WIDTH,\n        height: 200,\n        chartConfig: {\n          backgroundGradientFrom: '#F4F6FA',\n          backgroundGradientTo: '#F4F6FA',\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(114, 101, 290, \" + opacity + \")\";\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.macroRowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.orangeBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.macroNutrientName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        }\n      }, \"Protein\")), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.macroNutrientGrams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        }\n      }, macroNutrients.proteinDone, \"g\"), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.macroNutrientProcent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        }\n      }, (macroNutrients.proteinDone / macroNutrients.proteinGoal * 100).toPrecision(2), \"%\")), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.macroRowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.purpleBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.macroNutrientName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        }\n      }, \"Carb\")), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.macroNutrientGrams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        }\n      }, macroNutrients.carbDone, \"g\"), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.macroNutrientProcent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        }\n      }, (macroNutrients.carbDone / macroNutrients.carbGoal * 100).toPrecision(2), \"%\")), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.macroRowContainerBorderless,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.greenBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.macroNutrientName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        }\n      }, \"Fat\")), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.macroNutrientGrams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        }\n      }, macroNutrients.fatDone, \"g\"), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.macroNutrientProcent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        }\n      }, (macroNutrients.fatDone / macroNutrients.fatGoal * 100).toPrecision(2), \"%\"))), _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        data: this.props.nutrition,\n        renderItem: this.renderMeal,\n        extraData: this.state,\n        listKey: -1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        }\n      })), _react.default.createElement(_reactNativeModal.default, {\n        isVisible: this.state.visibleModal === 'swipeable',\n        onSwipeComplete: function onSwipeComplete() {\n          return _this2.setState({\n            visibleModal: null\n          });\n        },\n        swipeDirection: ['down'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        }\n      }, _react.default.createElement(_ModalMealScreen.default, {\n        toggleModal: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        }\n      })));\n    }\n  }]);\n  return NutritionScreen;\n}(_react.default.Component);\n\nNutritionScreen.navigationOptions = function (_ref3) {\n  var navigation = _ref3.navigation;\n  var _navigation$state$par = navigation.state.params,\n      params = _navigation$state$par === void 0 ? {} : _navigation$state$par;\n  return {\n    headerStyle: {\n      backgroundColor: '#F4F6FA',\n      elevation: 0,\n      shadowColor: 'transparent',\n      borderBottomWidth: 0\n    },\n    headerRight: _react.default.createElement(_reactNative.TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,1,0.9)\",\n      onPress: function onPress() {\n        return params.onPressModal();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      }\n    }, _react.default.createElement(_reactNative.Image, {\n      style: _styles.default.addIcon,\n      source: require('../../../assets/icons/addIcon.png'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      }\n    }))\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    nutritionDone: state.nutrition.nutritionDone,\n    nutritionGoal: state.nutrition.nutritionGoal,\n    nutrition: state.nutrition.nutrition\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeMeal: function removeMeal(mealId) {\n      return dispatch({\n        type: 'REMOVE_MEAL',\n        mealId: mealId\n      });\n    }\n  };\n}\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(NutritionScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Nutrition/NutritionScreen.js"],"names":["Dimensions","get","width","height","SCREEN_WIDTH","NutritionScreen","props","toggleModal","setState","visibleModal","onPressModal","onPressDeleteIcon","mealId","prevState","deleteModal","deleteMealId","onPressDeleteMeal","removeMeal","state","onPressCancel","showDeleteScreen","id","Alert","alert","text","onPress","style","cancelable","renderFood","item","index","styles","foodContainerBoarderless","foodContainer","rowContainer","foodName","name","foodQuantity","quantity","foodCalories","calories","renderMeal","mealContainer","mealName","meal","foods","deleteIconContainer","deleteIcon","require","visibleModalId","navigation","setParams","nutrition","map","data","food","macroNutrients","getParam","caloriesDone","getCaloriesDone","labels","proteinDone","proteinGoal","carbDone","carbGoal","fatDone","fatGoal","strokeWidth","container","titleContainer","title","caloriesText","alignSelf","backgroundGradientFrom","backgroundGradientTo","color","opacity","macroRowContainer","flexDirection","orangeBox","macroNutrientName","macroNutrientGrams","macroNutrientProcent","toPrecision","purpleBox","macroRowContainerBorderless","greenBox","React","Component","navigationOptions","params","headerStyle","backgroundColor","elevation","shadowColor","borderBottomWidth","headerRight","addIcon","mapStateToProps","nutritionDone","nutritionGoal","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableHighlight, Image, ScrollView, FlatList, Alert } from 'react-native';\nimport styles from './styles';\nimport ModalMealScreen from '../ModalMeal/ModalMealScreen';\nimport { ProgressChart } from 'react-native-chart-kit';\nimport { Dimensions } from 'react-native';\nconst { width, height } = Dimensions.get('window');\nconst SCREEN_WIDTH = width < height ? width : height;\nimport { connect } from 'react-redux';\nimport Modal from 'react-native-modal';\n\nclass NutritionScreen extends React.Component {\n  static navigationOptions = ({ navigation }) => {\n    const { params = {} } = navigation.state;\n    return {\n      headerStyle: {\n        backgroundColor: '#F4F6FA',\n        elevation: 0,\n        shadowColor: 'transparent',\n        borderBottomWidth: 0\n      },\n      headerRight: (\n        <TouchableHighlight\n          underlayColor=\"rgba(73,182,77,1,0.9)\"\n          onPress={() => params.onPressModal()}\n        >\n          <Image style={styles.addIcon} source={require('../../../assets/icons/addIcon.png')} />\n        </TouchableHighlight>\n      )\n    };\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { visibleModalId: null, deleteModal: false, deleteMealId: -1 };\n  }\n\n  componentDidMount() {\n    this.props.navigation.setParams({\n      onPressModal: this.onPressModal\n    });\n  }\n\n  toggleModal = () => {\n    this.setState({\n      visibleModal: null\n    });\n  };\n\n  onPressModal = () => {\n    this.setState({\n      visibleModal: 'swipeable'\n    });\n  };\n\n  onPressDeleteIcon = mealId => {\n    this.setState(prevState => ({ deleteModal: !prevState.deleteModal, deleteMealId: mealId }));\n  };\n\n  onPressDeleteMeal = () => {\n    this.props.removeMeal(this.state.deleteMealId);\n    this.setState(prevState => ({ deleteMealId: -1 }));\n\n    //for initial delete screen\n    //this.setState(prevState => ({ deleteModal: !prevState.deleteModal,deleteMealId: -1 }));\n  };\n\n  onPressCancel = () => {\n    this.setState(prevState => ({\n      deleteMealId: -1\n    }));\n\n    //for initial delete screen\n    //this.setState(prevState => ({ deleteModal: !prevState.deleteModal,deleteMealId: -1 }));\n  };\n\n  showDeleteScreen = id => {\n    this.onPressDeleteIcon(id);\n    Alert.alert(\n      'Are you sure you want to delete this meal?',\n      '',\n      [\n        { text: 'Yes', onPress: () => this.onPressDeleteMeal() },\n        {\n          text: 'Cancel',\n          onPress: () => this.onPressCancel(),\n          style: 'cancel'\n        }\n      ],\n      { cancelable: false }\n    );\n  };\n\n  renderFood = ({ item, index }) => (\n    <View style={index == 0 ? styles.foodContainerBoarderless : styles.foodContainer}>\n      <View style={styles.rowContainer}>\n        <View>\n          <Text style={styles.foodName}>{item.name}</Text>\n          <Text style={styles.foodQuantity}>{item.quantity}</Text>\n        </View>\n        <Text style={styles.foodCalories}>{item.calories}</Text>\n      </View>\n    </View>\n  );\n\n  renderMeal = ({ item, index }) => (\n    <View style={styles.mealContainer}>\n      <Text style={styles.mealName}>{item.meal}</Text>\n      <FlatList\n        vertical\n        showsVerticalScrollIndicator={false}\n        data={item.foods}\n        renderItem={this.renderFood}\n        extraData={this.state}\n        //keyExtractor={item => `${item.id}`}\n        listKey={index => `${index}`}\n      />\n      <TouchableHighlight\n        style={styles.deleteIconContainer}\n        underlayColor=\"rgba(73,182,77,1,0.9)\"\n        //onPress={() => this.onPressDeleteIcon(item.id)}\n        onPress={() => this.showDeleteScreen(item.id)}\n      >\n        <Image style={styles.deleteIcon} source={require('../../../assets/icons/deleteIcon.png')} />\n      </TouchableHighlight>\n    </View>\n  );\n\n  getCaloriesDone() {\n    var calories = 0;\n    this.props.nutrition.map(data => {\n      data.foods.map(food => {\n        calories += food.calories;\n      });\n    });\n    return calories;\n  }\n\n  render() {\n    const macroNutrients = this.props.navigation.getParam('macroNutrients');\n    const caloriesDone = this.getCaloriesDone();\n    const data = {\n      labels: ['Protien', 'Carb', 'Fat'], // optional\n      data: [\n        macroNutrients.proteinDone / macroNutrients.proteinGoal,\n        macroNutrients.carbDone / macroNutrients.carbGoal,\n        macroNutrients.fatDone / macroNutrients.fatGoal\n      ],\n      strokeWidth: 2\n    };\n    return (\n      <ScrollView style={styles.container}>\n        <View style={styles.titleContainer}>\n          <Text style={styles.title}>\n            You burned <Text style={styles.caloriesText}>{caloriesDone}</Text> calories\n            today\n          </Text>\n        </View>\n        <View style={{ alignSelf: 'center' }}>\n          <ProgressChart\n            data={data}\n            width={SCREEN_WIDTH}\n            height={200}\n            chartConfig={{\n              backgroundGradientFrom: '#F4F6FA',\n              backgroundGradientTo: '#F4F6FA',\n              color: (opacity = 1) => `rgba(114, 101, 290, ${opacity})`\n            }}\n          />\n        </View>\n        <View>\n          <View style={styles.macroRowContainer}>\n            <View style={{ flexDirection: 'row' }}>\n              <View style={styles.orangeBox} />\n              <Text style={styles.macroNutrientName}>Protein</Text>\n            </View>\n            <Text style={styles.macroNutrientGrams}>{macroNutrients.proteinDone}g</Text>\n            <Text style={styles.macroNutrientProcent}>\n              {((macroNutrients.proteinDone / macroNutrients.proteinGoal) * 100).toPrecision(2)}%\n            </Text>\n          </View>\n          <View style={styles.macroRowContainer}>\n            <View style={{ flexDirection: 'row' }}>\n              <View style={styles.purpleBox} />\n              <Text style={styles.macroNutrientName}>Carb</Text>\n            </View>\n            <Text style={styles.macroNutrientGrams}>{macroNutrients.carbDone}g</Text>\n            <Text style={styles.macroNutrientProcent}>\n              {((macroNutrients.carbDone / macroNutrients.carbGoal) * 100).toPrecision(2)}%\n            </Text>\n          </View>\n          <View style={styles.macroRowContainerBorderless}>\n            <View style={{ flexDirection: 'row' }}>\n              <View style={styles.greenBox} />\n              <Text style={styles.macroNutrientName}>Fat</Text>\n            </View>\n            <Text style={styles.macroNutrientGrams}>{macroNutrients.fatDone}g</Text>\n            <Text style={styles.macroNutrientProcent}>\n              {((macroNutrients.fatDone / macroNutrients.fatGoal) * 100).toPrecision(2)}%\n            </Text>\n          </View>\n        </View>\n        <View>\n          <FlatList\n            vertical\n            showsVerticalScrollIndicator={false}\n            data={this.props.nutrition}\n            renderItem={this.renderMeal}\n            extraData={this.state}\n            //keyExtractor={item => `${item.id}`}\n            listKey={-1}\n          />\n        </View>\n        <Modal\n          isVisible={this.state.visibleModal === 'swipeable'}\n          onSwipeComplete={() => this.setState({ visibleModal: null })}\n          swipeDirection={['down']}\n        >\n          <ModalMealScreen toggleModal={this.toggleModal} />\n        </Modal>\n      </ScrollView>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    nutritionDone: state.nutrition.nutritionDone,\n    nutritionGoal: state.nutrition.nutritionGoal,\n    nutrition: state.nutrition.nutrition\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeMeal: mealId => dispatch({ type: 'REMOVE_MEAL', mealId })\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NutritionScreen);\n\n//initial alert screen for delete meal - line 221\n/*\n <Modal isVisible={this.state.deleteModal}>\n          <View style={styles.deleteContainer}>\n            <Text style={styles.deleteTxt}>Are you sure you want to delete this meal?</Text>\n            <View style={{ flexDirection: 'row', alignSelf: 'center' }}>\n              <TouchableHighlight\n                underlayColor=\"rgba(73,182,77,1,0.9)\"\n                onPress={() => this.onPressDeleteMeal()}\n              >\n                <Text style={styles.deleteSecTxt}>Yes</Text>\n              </TouchableHighlight>\n              <Text> / </Text>\n              <TouchableHighlight\n                underlayColor=\"rgba(73,182,77,1,0.9)\"\n                onPress={() => this.onPressCancel()}\n              >\n                <Text style={styles.deleteSecTxt}>Cancel</Text>\n              </TouchableHighlight>\n            </View>\n          </View>\n        </Modal>\n        */\n"]},"metadata":{},"sourceType":"script"}