{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _reactNativeSnapCarousel = _interopRequireWildcard(require(\"react-native-snap-carousel\"));\n\nvar _MenuImage = _interopRequireDefault(require(\"../../components/MenuImage/MenuImage\"));\n\nvar _dataArrays = require(\"../../data/dataArrays\");\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Premium/PremiumScreen.js\";\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar SCREEN_WIDTH = width < height ? width : height;\n\nvar PremiumScreen = function (_React$Component) {\n  (0, _inherits2.default)(PremiumScreen, _React$Component);\n\n  function PremiumScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PremiumScreen);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PremiumScreen).call(this, props));\n\n    _this.renderImage = function (_ref) {\n      var item = _ref.item;\n      return _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.imageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.image,\n        source: {\n          uri: item.photoUrl\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        }\n      })));\n    };\n\n    _this.onPressPurchase = function () {};\n\n    _this.state = {\n      activeSlide: 0,\n      type: ''\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(PremiumScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var activeSlide = this.state.activeSlide;\n      var navigation = this.props.navigation;\n      return _react.default.createElement(_reactNative.ScrollView, {\n        style: _styles.default.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      }, _react.default.createElement(_reactNative.ScrollView, {\n        style: _styles.default.carouselContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.carousel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        }\n      }, _react.default.createElement(_reactNativeSnapCarousel.default, {\n        ref: function ref(c) {\n          _this2.slider1Ref = c;\n        },\n        data: _dataArrays.premiumArray,\n        renderItem: this.renderImage,\n        sliderWidth: SCREEN_WIDTH,\n        itemWidth: SCREEN_WIDTH,\n        inactiveSlideScale: 1,\n        inactiveSlideOpacity: 1,\n        firstItem: 0,\n        loop: false,\n        autoplay: false,\n        autoplayDelay: 500,\n        autoplayInterval: 3000,\n        onSnapToItem: function onSnapToItem(index) {\n          return _this2.setState({\n            activeSlide: index\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      }), _react.default.createElement(_reactNativeSnapCarousel.Pagination, {\n        dotsLength: _dataArrays.premiumArray.length,\n        activeDotIndex: activeSlide,\n        containerStyle: _styles.default.paginationContainer,\n        dotColor: \"rgba(255, 255, 255, 0.92)\",\n        dotStyle: _styles.default.paginationDot,\n        inactiveDotColor: \"white\",\n        inactiveDotOpacity: 0.4,\n        inactiveDotScale: 0.6,\n        carouselRef: this.slider1Ref,\n        tappableDots: !!this.slider1Ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.titleContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        }\n      }, _dataArrays.premiumArray[activeSlide].title), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        }\n      }, _dataArrays.premiumArray[activeSlide].description)), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.buttonsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }, _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: function onPress() {\n          return _this2.state.type != 'month' ? _this2.setState({\n            type: 'month'\n          }) : _this2.setState({\n            type: ''\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.btnContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.rowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.circle,\n        source: this.state.type == 'month' ? require('../../../assets/icons/fullCircle.png') : require('../../../assets/icons/emptyWhiteCircle.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      }, \"$4.99\", _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.month,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }, \"/month\"))), _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: _styles.default.secBtnContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.secBtnTxt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        }\n      }, \"Free Trial\")))), _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: function onPress() {\n          return _this2.state.type != 'year' ? _this2.setState({\n            type: 'year'\n          }) : _this2.setState({\n            type: ''\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.btnContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.rowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.circle,\n        source: this.state.type == 'year' ? require('../../../assets/icons/fullCircle.png') : require('../../../assets/icons/emptyWhiteCircle.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        }\n      }, \"$89.99\", _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.month,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        }\n      }, \"/year\"))), _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: _styles.default.secBtnContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.secBtnTxt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        }\n      }, \"Free Trial\"))))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.infoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.mainInfoTxt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        }\n      }, \"Recurring billing, cancel anytime\"), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.secInfoTxt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        }\n      }, \"Contrary to what many people think, eating healthy is not easier said than done. Just a few good habits can make a great difference.\")), _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: _styles.default.purchaseBtnContainer,\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: function onPress() {\n          return _this2.onPressPurchase();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.purchaseBtnTxt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        }\n      }, \"Purchase\")));\n    }\n  }]);\n  return PremiumScreen;\n}(_react.default.Component);\n\nexports.default = PremiumScreen;\n\nPremiumScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    headerTransparent: 'true',\n    headerStyle: {\n      height: 60\n    }\n  };\n};","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Premium/PremiumScreen.js"],"names":["Dimensions","get","width","height","SCREEN_WIDTH","PremiumScreen","props","renderImage","item","styles","imageContainer","image","uri","photoUrl","onPressPurchase","state","activeSlide","type","navigation","container","carouselContainer","carousel","c","slider1Ref","premiumArray","index","setState","length","paginationContainer","paginationDot","titleContainer","title","description","buttonsContainer","btnContainer","rowContainer","circle","require","price","month","secBtnContainer","secBtnTxt","infoContainer","mainInfoTxt","secInfoTxt","purchaseBtnContainer","purchaseBtnTxt","React","Component","navigationOptions","headerTransparent","headerStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableHighlight, Image, ScrollView, Dimensions } from 'react-native';\nimport styles from './styles';\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport MenuImage from '../../components/MenuImage/MenuImage';\nimport { premiumArray } from '../../data/dataArrays';\nconst { width, height } = Dimensions.get('window');\nconst SCREEN_WIDTH = width < height ? width : height;\n\nexport default class PremiumScreen extends React.Component {\n  static navigationOptions = ({ navigation }) => ({\n    headerTransparent: 'true',\n    headerStyle: {\n      height: 60\n    }\n  });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSlide: 0,\n      type: ''\n    };\n  }\n\n  renderImage = ({ item }) => (\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,1,0.9)\">\n      <View style={styles.imageContainer}>\n        <Image style={styles.image} source={{ uri: item.photoUrl }} />\n      </View>\n    </TouchableHighlight>\n  );\n\n  onPressPurchase = () => {};\n\n  render() {\n    const { activeSlide } = this.state;\n    const { navigation } = this.props;\n    return (\n      <ScrollView style={styles.container}>\n        <ScrollView style={styles.carouselContainer}>\n          <View style={styles.carousel}>\n            <Carousel\n              ref={c => {\n                this.slider1Ref = c;\n              }}\n              data={premiumArray}\n              renderItem={this.renderImage}\n              sliderWidth={SCREEN_WIDTH}\n              itemWidth={SCREEN_WIDTH}\n              inactiveSlideScale={1}\n              inactiveSlideOpacity={1}\n              firstItem={0}\n              loop={false}\n              autoplay={false}\n              autoplayDelay={500}\n              autoplayInterval={3000}\n              onSnapToItem={index => this.setState({ activeSlide: index })}\n            />\n            <Pagination\n              dotsLength={premiumArray.length}\n              activeDotIndex={activeSlide}\n              containerStyle={styles.paginationContainer}\n              dotColor=\"rgba(255, 255, 255, 0.92)\"\n              dotStyle={styles.paginationDot}\n              inactiveDotColor=\"white\"\n              inactiveDotOpacity={0.4}\n              inactiveDotScale={0.6}\n              carouselRef={this.slider1Ref}\n              tappableDots={!!this.slider1Ref}\n            />\n          </View>\n        </ScrollView>\n        <View style={styles.titleContainer}>\n          <Text style={styles.title}>{premiumArray[activeSlide].title}</Text>\n          <Text style={styles.description}>{premiumArray[activeSlide].description}</Text>\n        </View>\n        <View style={styles.buttonsContainer}>\n          <TouchableHighlight\n            underlayColor=\"rgba(73,182,77,1,0.9)\"\n            onPress={() =>\n              this.state.type != 'month'\n                ? this.setState({ type: 'month' })\n                : this.setState({ type: '' })\n            }\n          >\n            <View style={styles.btnContainer}>\n              <View style={styles.rowContainer}>\n                <Image\n                  style={styles.circle}\n                  source={\n                    this.state.type == 'month'\n                      ? require('../../../assets/icons/fullCircle.png')\n                      : require('../../../assets/icons/emptyWhiteCircle.png')\n                  }\n                />\n                <Text style={styles.price}>\n                  $4.99<Text style={styles.month}>/month</Text>\n                </Text>\n              </View>\n              <TouchableHighlight style={styles.secBtnContainer}>\n                <Text style={styles.secBtnTxt}>Free Trial</Text>\n              </TouchableHighlight>\n            </View>\n          </TouchableHighlight>\n          <TouchableHighlight\n            underlayColor=\"rgba(73,182,77,1,0.9)\"\n            onPress={() =>\n              this.state.type != 'year'\n                ? this.setState({ type: 'year' })\n                : this.setState({ type: '' })\n            }\n          >\n            <View style={styles.btnContainer}>\n              <View style={styles.rowContainer}>\n                <Image\n                  style={styles.circle}\n                  source={\n                    this.state.type == 'year'\n                      ? require('../../../assets/icons/fullCircle.png')\n                      : require('../../../assets/icons/emptyWhiteCircle.png')\n                  }\n                />\n                <Text style={styles.price}>\n                  $89.99<Text style={styles.month}>/year</Text>\n                </Text>\n              </View>\n              <TouchableHighlight style={styles.secBtnContainer}>\n                <Text style={styles.secBtnTxt}>Free Trial</Text>\n              </TouchableHighlight>\n            </View>\n          </TouchableHighlight>\n        </View>\n        <View style={styles.infoContainer}>\n          <Text style={styles.mainInfoTxt}>Recurring billing, cancel anytime</Text>\n          <Text style={styles.secInfoTxt}>\n            Contrary to what many people think, eating healthy is not easier said than done. Just a\n            few good habits can make a great difference.\n          </Text>\n        </View>\n        <TouchableHighlight\n          style={styles.purchaseBtnContainer}\n          underlayColor=\"rgba(73,182,77,1,0.9)\"\n          onPress={() => this.onPressPurchase()}\n        >\n          <Text style={styles.purchaseBtnTxt}>Purchase</Text>\n        </TouchableHighlight>\n      </ScrollView>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}