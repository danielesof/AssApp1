{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _LogoHeader = _interopRequireDefault(require(\"../../components/LogoHeader/LogoHeader\"));\n\nvar _ContinueButton = _interopRequireDefault(require(\"../../components/ContinueButton/ContinueButton\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _dataArrays = require(\"../../data/dataArrays\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Interests/InterestsScreen.js\";\n\nvar InterestsScreen = function (_React$Component) {\n  (0, _inherits2.default)(InterestsScreen, _React$Component);\n\n  function InterestsScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, InterestsScreen);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InterestsScreen).call(this, props));\n\n    _this.onPressCard = function (item) {\n      var arr = _this.state.selected;\n\n      if (arr.includes(item)) {\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i] === item) {\n            arr.splice(i, 1);\n            break;\n          }\n        }\n      } else {\n        arr.push(item);\n      }\n\n      _this.setState({\n        selected: arr\n      });\n    };\n\n    _this.onPressButton = function () {\n      _this.props.navigation.navigate('Gender');\n\n      _this.props.addUserInterests(_this.state.selected);\n    };\n\n    _this.renderCard = function (_ref) {\n      var item = _ref.item;\n      return _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      }, _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        style: _this.state.selected.includes(item.id) ? _styles.default.selectedCardContainer : _styles.default.cardContainer,\n        onPress: function onPress() {\n          return _this.onPressCard(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.cardImg,\n        source: {\n          uri: item.icon\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        }\n      })), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        }\n      }, item.title));\n    };\n\n    _this.state = {\n      selected: []\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(InterestsScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.ScrollView, {\n        style: _styles.default.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      }, _react.default.createElement(_LogoHeader.default, {\n        onPress: function onPress() {\n          _this2.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.middleContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.mainText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      }, \"Time to customize your interests\"), _react.default.createElement(_reactNative.View, {\n        style: {\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        numColumns: 3,\n        data: _dataArrays.interests,\n        renderItem: this.renderCard,\n        extraData: this.state,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.id;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        }\n      }))), _react.default.createElement(_ContinueButton.default, {\n        onPress: function onPress() {\n          _this2.onPressButton();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }));\n    }\n  }]);\n  return InterestsScreen;\n}(_react.default.Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addUserInterests: function addUserInterests(interests) {\n      return dispatch({\n        type: 'ADD_USERINTERESTS',\n        interests: interests\n      });\n    }\n  };\n}\n\nvar _default = (0, _reactRedux.connect)(null, mapDispatchToProps)(InterestsScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Interests/InterestsScreen.js"],"names":["InterestsScreen","props","onPressCard","item","arr","state","selected","includes","i","length","splice","push","setState","onPressButton","navigation","navigate","addUserInterests","renderCard","id","styles","selectedCardContainer","cardContainer","cardImg","uri","icon","cardTitle","title","container","goBack","middleContainer","mainText","alignItems","interests","React","Component","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableHighlight, Image, ScrollView, FlatList } from 'react-native';\nimport LogoHeader from '../../components/LogoHeader/LogoHeader';\nimport ContinueButton from '../../components/ContinueButton/ContinueButton';\nimport styles from './styles';\nimport { interests } from '../../data/dataArrays';\nimport { connect } from 'react-redux';\n\nclass InterestsScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: []\n    };\n  }\n\n  onPressCard = item => {\n    var arr = this.state.selected;\n    if (arr.includes(item)) {\n      for (var i = 0; i < arr.length; i++) {\n        if (arr[i] === item) {\n          arr.splice(i, 1);\n          break;\n        }\n      }\n    } else {\n      arr.push(item);\n    }\n    this.setState({\n      selected: arr\n    });\n  };\n\n  onPressButton = () => {\n    this.props.navigation.navigate('Gender');\n    this.props.addUserInterests(this.state.selected);\n  };\n\n  renderCard = ({ item }) => (\n    <View>\n      <TouchableHighlight\n        underlayColor=\"rgba(73,182,77,1,0.9)\"\n        style={\n          this.state.selected.includes(item.id)\n            ? styles.selectedCardContainer\n            : styles.cardContainer\n        }\n        onPress={() => this.onPressCard(item.id)}\n      >\n        <Image style={styles.cardImg} source={{ uri: item.icon }} />\n      </TouchableHighlight>\n      <Text style={styles.cardTitle}>{item.title}</Text>\n    </View>\n  );\n\n  render() {\n    return (\n      <ScrollView style={styles.container}>\n        <LogoHeader\n          onPress={() => {\n            this.props.navigation.goBack();\n          }}\n        />\n        <View style={styles.middleContainer}>\n          <Text style={styles.mainText}>Time to customize your interests</Text>\n          <View style={{ alignItems: 'center' }}>\n            <FlatList\n              vertical\n              showsVerticalScrollIndicator={false}\n              numColumns={3}\n              data={interests}\n              renderItem={this.renderCard}\n              extraData={this.state}\n              keyExtractor={item => `${item.id}`}\n            />\n          </View>\n        </View>\n        <ContinueButton\n          onPress={() => {\n            this.onPressButton();\n          }}\n        />\n      </ScrollView>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addUserInterests: interests => dispatch({ type: 'ADD_USERINTERESTS', interests })\n  };\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(InterestsScreen);\n"]},"metadata":{},"sourceType":"script"}