{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _MenuImage = _interopRequireDefault(require(\"../../components/MenuImage/MenuImage\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Settings/SettingsScreen.js\";\n\nvar SettingsScreen = function (_React$Component) {\n  (0, _inherits2.default)(SettingsScreen, _React$Component);\n\n  function SettingsScreen(props) {\n    (0, _classCallCheck2.default)(this, SettingsScreen);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SettingsScreen).call(this, props));\n  }\n\n  (0, _createClass2.default)(SettingsScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return _react.default.createElement(_reactNative.ScrollView, {\n        style: _styles.default.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        }\n      }, \"Settings\"), _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: _styles.default.settingContainer,\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.settingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        }\n      }, \"Edit Profile\")), _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: _styles.default.settingContainer,\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.settingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }, \"Invite Friends\")), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.rowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.settingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        }\n      }, this.props.settings[0].title), _react.default.createElement(_reactNative.Switch, {\n        onValueChange: function onValueChange() {\n          return _this.props.update(0);\n        },\n        value: this.props.settings[0].switch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.rowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.settingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        }\n      }, this.props.settings[1].title), _react.default.createElement(_reactNative.Switch, {\n        onValueChange: function onValueChange() {\n          return _this.props.update(1);\n        },\n        value: this.props.settings[1].switch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        }\n      })), _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: _styles.default.settingContainer,\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.settingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        }\n      }, \"Give Feedback\")), _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: _styles.default.settingContainer,\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.settingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      }, \"Help and Support\")), _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: _styles.default.settingContainer,\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.settingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      }, \"Connect Device\")), _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: _styles.default.settingContainer,\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.settingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        }\n      }, \"About Us\")), _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: _styles.default.settingContainer,\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.settingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      }, \"Log Out\")));\n    }\n  }]);\n  return SettingsScreen;\n}(_react.default.Component);\n\nSettingsScreen.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    headerStyle: {\n      backgroundColor: '#F4F6FA',\n      elevation: 0,\n      shadowColor: 'transparent',\n      borderBottomWidth: 0\n    },\n    headerLeft: _react.default.createElement(_MenuImage.default, {\n      onPress: function onPress() {\n        navigation.openDrawer();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      }\n    })\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    update: function update(id) {\n      return dispatch({\n        type: 'UPDATE_SETTINGS',\n        id: id\n      });\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    settings: state.setting.settings\n  };\n}\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SettingsScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["/home/maxmoffa/Scaricati/AssApp_1.0/AssorbimentoApp/src/screens/Settings/SettingsScreen.js"],"names":["SettingsScreen","props","styles","container","title","settingContainer","settingText","rowContainer","settings","update","switch","React","Component","navigationOptions","navigation","headerStyle","backgroundColor","elevation","shadowColor","borderBottomWidth","headerLeft","openDrawer","mapDispatchToProps","dispatch","id","type","mapStateToProps","state","setting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableHighlight, ScrollView, Switch, Image } from 'react-native';\nimport MenuImage from '../../components/MenuImage/MenuImage';\nimport styles from './styles';\nimport { connect } from 'react-redux';\n\nclass SettingsScreen extends React.Component {\n  static navigationOptions = ({ navigation }) => ({\n    headerStyle: {\n      backgroundColor: '#F4F6FA',\n      elevation: 0,\n      shadowColor: 'transparent',\n      borderBottomWidth: 0\n    },\n    headerLeft: (\n      <MenuImage\n        onPress={() => {\n          navigation.openDrawer();\n        }}\n      />\n    )\n  });\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <ScrollView style={styles.container}>\n        <Text style={styles.title}>Settings</Text>\n        <TouchableHighlight style={styles.settingContainer} underlayColor=\"rgba(73,182,77,1,0.9)\">\n          <Text style={styles.settingText}>Edit Profile</Text>\n        </TouchableHighlight>\n        <TouchableHighlight style={styles.settingContainer} underlayColor=\"rgba(73,182,77,1,0.9)\">\n          <Text style={styles.settingText}>Invite Friends</Text>\n        </TouchableHighlight>\n        <View style={styles.rowContainer}>\n          <Text style={styles.settingText}>{this.props.settings[0].title}</Text>\n          <Switch\n            onValueChange={() => this.props.update(0)}\n            value={this.props.settings[0].switch}\n          />\n        </View>\n        <View style={styles.rowContainer}>\n          <Text style={styles.settingText}>{this.props.settings[1].title}</Text>\n          <Switch\n            onValueChange={() => this.props.update(1)}\n            value={this.props.settings[1].switch}\n          />\n        </View>\n        <TouchableHighlight style={styles.settingContainer} underlayColor=\"rgba(73,182,77,1,0.9)\">\n          <Text style={styles.settingText}>Give Feedback</Text>\n        </TouchableHighlight>\n        <TouchableHighlight style={styles.settingContainer} underlayColor=\"rgba(73,182,77,1,0.9)\">\n          <Text style={styles.settingText}>Help and Support</Text>\n        </TouchableHighlight>\n        <TouchableHighlight style={styles.settingContainer} underlayColor=\"rgba(73,182,77,1,0.9)\">\n          <Text style={styles.settingText}>Connect Device</Text>\n        </TouchableHighlight>\n        <TouchableHighlight style={styles.settingContainer} underlayColor=\"rgba(73,182,77,1,0.9)\">\n          <Text style={styles.settingText}>About Us</Text>\n        </TouchableHighlight>\n        <TouchableHighlight style={styles.settingContainer} underlayColor=\"rgba(73,182,77,1,0.9)\">\n          <Text style={styles.settingText}>Log Out</Text>\n        </TouchableHighlight>\n      </ScrollView>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    update: id => dispatch({ type: 'UPDATE_SETTINGS', id })\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    settings: state.setting.settings\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SettingsScreen);\n"]},"metadata":{},"sourceType":"script"}